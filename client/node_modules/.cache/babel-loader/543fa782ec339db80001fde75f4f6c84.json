{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joseph\\\\Desktop\\\\BcThesis\\\\licenta_aplicatie\\\\code-puls\\\\client\\\\src\\\\pages\\\\addTest.js\",\n    _s = $RefreshSig$();\n\nimport styled from \"styled-components\";\nimport { Form, Col } from \"react-bootstrap\";\nimport { AppContext } from \"../context/context\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Card } from \"../components/defaultComponents\";\nimport theme from \"../Assets/theme\";\nimport { Loader } from \"../components\";\nimport axios from \"axios\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { MdAddCircleOutline, MdRemoveCircleOutline } from \"react-icons/md\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst rootURL = \"http://localhost:5000/api\";\n\nfunction AddTest() {\n  _s();\n\n  const {\n    judge0Languges,\n    isLoading,\n    setIsLoading,\n    setShowHeader\n  } = React.useContext(AppContext);\n  setShowHeader(false);\n  const [subjects, setSubjects] = useState([]);\n  const [groups, setGroups] = useState();\n  const [areGroupsLoading, setAreGroupsLoading] = useState(true); //form controlled input fields\n\n  const [selectedSubject, setSelectedSubject] = useState(-1);\n  const [selectedGroup, setSelectedGroup] = useState();\n  const [language, setLanguage] = useState(judge0Languges[0].id);\n  const [code, setCode] = useState();\n  const [title, setTitle] = useState();\n  const [expectedAnswer, setExpectedAnswer] = useState(\"\");\n  const [date, setDate] = useState(new Date());\n  const [questions, setQuestions] = useState([{\n    id: 0,\n    questionBody: \"\",\n    expectedAnswer: \"\"\n  }]); // const [expectedAnswers, setExpectedAnswers] = useState([])\n  //onMount\n\n  useEffect(() => {\n    getSubjects();\n  }, []);\n\n  function subjectChanged(id) {\n    setSelectedSubject(id);\n\n    if (id > 0) {\n      getGroups(id);\n    }\n  }\n\n  async function getGroups(subjectId) {\n    console.log(\"getting groups from db...\");\n    setAreGroupsLoading(true);\n    const response = await axios({\n      method: \"get\",\n      url: `${rootURL}/subjects/${subjectId}/groups`\n    }).catch(err => console.log(err));\n\n    if (response) {\n      console.log(response.data);\n      setGroups(response.data);\n      setSelectedGroup(response.data[0].grupa);\n    }\n\n    setAreGroupsLoading(false);\n  }\n\n  async function getSubjects() {\n    console.log(\"getting subjects from db...\");\n    setIsLoading(true);\n    const response = await axios({\n      method: \"get\",\n      url: `${rootURL}/teachers/1/subjects`\n    }).catch(err => console.log(err));\n\n    if (response) {\n      console.log(response.data);\n      setSubjects(response.data);\n    }\n\n    setIsLoading(false);\n  }\n\n  function addQuestionBtnHandler(e) {\n    console.log(\"addQuestionBtnHandler\");\n    const lastQuestion = questions[questions.length - 1];\n    setQuestions(questions => questions.concat({\n      id: lastQuestion.id + 1,\n      questionBody: \"\",\n      expectedAnswer: \"\"\n    }));\n  }\n\n  function removeQuestionBtnHandler(e) {\n    console.log(\"removeQuestionBtnHandler\");\n    const lastQuestion = questions[questions.length - 1];\n    setQuestions(items => items.filter(item => {\n      return item.id !== lastQuestion.id;\n    }));\n  }\n\n  function handleQuestionsChange(e, index) {\n    // 1. Make a shallow copy of the array\n    console.log(index);\n    let temp_state = [...questions]; // 2. Make a shallow copy of the element you want to mutate\n\n    let temp_element = { ...questions.find(x => x.id === index)\n    }; // 3. Update the property you're interested in\n\n    temp_element.questionBody = e.target.value; // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\n\n    temp_state[index] = temp_element; // 5. Set the state to our new copy\n\n    setQuestions(temp_state); // console.log(questions.find((x) => x.id === index).questionBody);\n  }\n\n  function handleExpectedResultChange(e, index) {\n    // 1. Make a shallow copy of the array\n    console.log(index);\n    let temp_state = [...questions]; // 2. Make a shallow copy of the element you want to mutate\n\n    let temp_element = { ...questions.find(x => x.id === index)\n    }; // 3. Update the property you're interested in\n\n    temp_element.expectedAnswer = e.target.value; // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\n\n    temp_state[index] = temp_element; // 5. Set the state to our new copy\n\n    setQuestions(temp_state); // console.log(questions.find((x) => x.id === index).questionBody);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const test = {\n      title: title,\n      deadline: date,\n      subjectId: selectedSubject,\n      languageId: language,\n      questions: questions,\n      group: selectedGroup\n    };\n    console.log(test);\n    postTest(test);\n    console.log(date.getTimezoneOffset());\n  }\n\n  async function postTest(test) {\n    console.log(\"posting assignment...\");\n    setIsLoading(true);\n    const response = await axios({\n      method: \"post\",\n      url: `${rootURL}/assignments/create`,\n      data: test\n    }).catch(err => console.log(err));\n\n    if (response) {\n      console.log(response.data);\n    }\n\n    setIsLoading(false);\n  }\n\n  if (isLoading) {\n    console.log(\"is loading..\");\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(FormTitle, {\n      className: \"formTitle\",\n      children: \"Adaug\\u0103 Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      className: \"addTestForm\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          controlId: \"testTitle\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Titlu test\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            onChange: e => setTitle(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          controlId: \"programmingLanguages\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Limbaj de programare\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            onChange: e => setLanguage(e.target.value),\n            children: judge0Languges.map(language => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: language.id,\n              children: language.name\n            }, language.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          controlId: \"subjects\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Materie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            onChange: e => subjectChanged(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: -1,\n              children: \"Selecteaz\\u0103\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this), subjects.map(subject => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: subject.id,\n              id: subject.id,\n              children: subject.descriere\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          controlId: \"StudentGroups\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Grupa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            onChange: e => setSelectedGroup(e.target.value),\n            children: [areGroupsLoading && selectedSubject == -1 && /*#__PURE__*/_jsxDEV(\"option\", {\n              value: -1,\n              children: \"nicio grupa pentru materia selectat\\u0103\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 17\n            }, this), !areGroupsLoading && groups && selectedSubject > 0 && groups.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: item.grupa,\n              children: item.grupa\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"questionsContainer\",\n        children: questions.map((question, index) => /*#__PURE__*/_jsxDEV(Form.Row, {\n          className: \"questionRow\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"Problem\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: [\"Problema \", question.id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 1 // value={questions.find((x) => x.id === index).questionBody}\n              ,\n              onChange: e => handleQuestionsChange(e, index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Rezultat a\\u0219teptat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              // value={questions.find((x) => x.id === index).expectedAnswer}\n              onChange: e => handleExpectedResultChange(e, index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this), !questions[index + 1] && index !== 0 ? /*#__PURE__*/_jsxDEV(MdRemoveCircleOutline, {\n            className: \"addQuestionBtn\",\n            onClick: removeQuestionBtnHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(MdAddCircleOutline, {\n            className: \"addQuestionBtn\",\n            onClick: addQuestionBtnHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          className: \"datePickerColumn\",\n          children: /*#__PURE__*/_jsxDEV(DatePicker, {\n            wrapperClassName: \"datepicker\",\n            customInput: /*#__PURE__*/_jsxDEV(ExampleCustomInput, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 28\n            }, this),\n            selected: date,\n            onChange: date => setDate(date),\n            showTimeSelect: true,\n            timeFormat: \"HH:mm\",\n            timeIntervals: 15,\n            timeCaption: \"Timp\",\n            dateFormat: \"d MMMM, yyyy HH:mm\",\n            fixedHeight: true,\n            popperPlacement: \"top-end\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n        className: \"justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(SendBtn, {\n          primary: true,\n          onClick: e => handleSubmit(e),\n          children: \"Trimite\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddTest, \"mIPexEMV0cik2Zhn79dbhSYTbMQ=\");\n\n_c = AddTest;\nconst ExampleCustomInput = /*#__PURE__*/React.forwardRef(_c2 = ({\n  value,\n  onClick\n}, ref) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"timePickerBox\",\n  onClick: onClick,\n  ref: ref,\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"deadlineText\",\n    children: `Deadline:`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 297,\n    columnNumber: 5\n  }, this), value]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 296,\n  columnNumber: 3\n}, this));\n_c3 = ExampleCustomInput;\nconst SendBtn = styled(Button)`\n  background: ${theme.mainBlue};\n  color: white;\n  margin-top: 2em;\n  font-size: 1rem;\n  font-weight: 400;\n  height: 50px;\n  width: 150px;\n\n  &:hover {\n    background: ${theme.mainBlue};\n    color: white;\n    font-weight: normal;\n    f\n  }\n`;\n_c4 = SendBtn;\nconst FormTitle = styled.p`\n  display: flex;\n  justify-content: center;\n  font-size: 2rem;\n  margin-bottom: 1em;\n`;\n_c5 = FormTitle;\nconst Wrapper = styled(Card)`\n  display: flex;\n  flex-direction: column;\n  width: 40%;\n  margin-left: 37%;\n  height: 100%;\n\n  margin-top: 7%;\n  // padding-left: 5%;\n  // padding-right: 5%;\n  // padding-bottom: 10%;\n  // padding-top: 5%;\n\n  .addTestForm {\n    height: 100%;\n    width: 100%;\n  }\n  .plus {\n    margin-right: 10px;\n  }\n  .questionsContainer {\n    max-height: 12em;\n    overflow-y: auto;\n    overflow-x: hidden;\n  }\n\n  .addQuestionBtn {\n    align-self: center;\n    margin-top: 15px;\n    margin-right: 15px;\n    margin-left: 15px;\n    cursor: pointer;\n  }\n\n  .datePickerColumn {\n    display: flex;\n    justify-content: center;\n  }\n\n  .timePickerBox {\n    display: flex;\n    width: 100%;\n    height: calc(1.5em + 0.75rem + 2px);\n    padding: 0.375rem 0.75rem;\n    font-size: 1rem;\n    font-weight: 400;\n    line-height: 1.5;\n    color: #495057;\n    background-color: #fff;\n    background-clip: padding-box;\n    border: 1px solid #ced4da;\n    border-radius: 0.25rem;\n    transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n  }\n\n  .deadlineText {\n    margin-right: 10px;\n    font-weight: 600;\n  }\n`;\n_c6 = Wrapper;\nexport default AddTest;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"AddTest\");\n$RefreshReg$(_c2, \"ExampleCustomInput$React.forwardRef\");\n$RefreshReg$(_c3, \"ExampleCustomInput\");\n$RefreshReg$(_c4, \"SendBtn\");\n$RefreshReg$(_c5, \"FormTitle\");\n$RefreshReg$(_c6, \"Wrapper\");","map":{"version":3,"sources":["C:/Users/Joseph/Desktop/BcThesis/licenta_aplicatie/code-puls/client/src/pages/addTest.js"],"names":["styled","Form","Col","AppContext","React","useState","useEffect","Button","Card","theme","Loader","axios","DatePicker","MdAddCircleOutline","MdRemoveCircleOutline","rootURL","AddTest","judge0Languges","isLoading","setIsLoading","setShowHeader","useContext","subjects","setSubjects","groups","setGroups","areGroupsLoading","setAreGroupsLoading","selectedSubject","setSelectedSubject","selectedGroup","setSelectedGroup","language","setLanguage","id","code","setCode","title","setTitle","expectedAnswer","setExpectedAnswer","date","setDate","Date","questions","setQuestions","questionBody","getSubjects","subjectChanged","getGroups","subjectId","console","log","response","method","url","catch","err","data","grupa","addQuestionBtnHandler","e","lastQuestion","length","concat","removeQuestionBtnHandler","items","filter","item","handleQuestionsChange","index","temp_state","temp_element","find","x","target","value","handleExpectedResultChange","handleSubmit","preventDefault","test","deadline","languageId","group","postTest","getTimezoneOffset","map","name","subject","descriere","question","ExampleCustomInput","forwardRef","onClick","ref","SendBtn","mainBlue","FormTitle","p","Wrapper"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,iBAA1B;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,iCAA7B;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,4CAAP;AACA,OAAO,sCAAP;AACA,SAASC,kBAAT,EAA6BC,qBAA7B,QAA0D,gBAA1D;;AAEA,MAAMC,OAAO,GAAG,2BAAhB;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AACjB,QAAM;AAAEC,IAAAA,cAAF;AAAkBC,IAAAA,SAAlB;AAA6BC,IAAAA,YAA7B;AAA2CC,IAAAA;AAA3C,MACJhB,KAAK,CAACiB,UAAN,CAAiBlB,UAAjB,CADF;AAEAiB,EAAAA,aAAa,CAAC,KAAD,CAAb;AACA,QAAM,CAACE,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACmB,MAAD,EAASC,SAAT,IAAsBpB,QAAQ,EAApC;AACA,QAAM,CAACqB,gBAAD,EAAmBC,mBAAnB,IAA0CtB,QAAQ,CAAC,IAAD,CAAxD,CANiB,CAQjB;;AACA,QAAM,CAACuB,eAAD,EAAkBC,kBAAlB,IAAwCxB,QAAQ,CAAC,CAAC,CAAF,CAAtD;AACA,QAAM,CAACyB,aAAD,EAAgBC,gBAAhB,IAAoC1B,QAAQ,EAAlD;AACA,QAAM,CAAC2B,QAAD,EAAWC,WAAX,IAA0B5B,QAAQ,CAACY,cAAc,CAAC,CAAD,CAAd,CAAkBiB,EAAnB,CAAxC;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkB/B,QAAQ,EAAhC;AACA,QAAM,CAACgC,KAAD,EAAQC,QAAR,IAAoBjC,QAAQ,EAAlC;AACA,QAAM,CAACkC,cAAD,EAAiBC,iBAAjB,IAAsCnC,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACoC,IAAD,EAAOC,OAAP,IAAkBrC,QAAQ,CAAC,IAAIsC,IAAJ,EAAD,CAAhC;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BxC,QAAQ,CAAC,CACzC;AAAE6B,IAAAA,EAAE,EAAE,CAAN;AAASY,IAAAA,YAAY,EAAE,EAAvB;AAA2BP,IAAAA,cAAc,EAAE;AAA3C,GADyC,CAAD,CAA1C,CAhBiB,CAmBjB;AAEA;;AACAjC,EAAAA,SAAS,CAAC,MAAM;AACdyC,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;;AAIA,WAASC,cAAT,CAAwBd,EAAxB,EAA4B;AAC1BL,IAAAA,kBAAkB,CAACK,EAAD,CAAlB;;AACA,QAAIA,EAAE,GAAG,CAAT,EAAY;AACVe,MAAAA,SAAS,CAACf,EAAD,CAAT;AACD;AACF;;AACD,iBAAee,SAAf,CAAyBC,SAAzB,EAAoC;AAClCC,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAzB,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACA,UAAM0B,QAAQ,GAAG,MAAM1C,KAAK,CAAC;AAC3B2C,MAAAA,MAAM,EAAE,KADmB;AAE3BC,MAAAA,GAAG,EAAG,GAAExC,OAAQ,aAAYmC,SAAU;AAFX,KAAD,CAAL,CAGpBM,KAHoB,CAGbC,GAAD,IAASN,OAAO,CAACC,GAAR,CAAYK,GAAZ,CAHK,CAAvB;;AAKA,QAAIJ,QAAJ,EAAc;AACZF,MAAAA,OAAO,CAACC,GAAR,CAAYC,QAAQ,CAACK,IAArB;AACAjC,MAAAA,SAAS,CAAC4B,QAAQ,CAACK,IAAV,CAAT;AACA3B,MAAAA,gBAAgB,CAACsB,QAAQ,CAACK,IAAT,CAAc,CAAd,EAAiBC,KAAlB,CAAhB;AACD;;AACDhC,IAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACD;;AAED,iBAAeoB,WAAf,GAA6B;AAC3BI,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACAjC,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,UAAMkC,QAAQ,GAAG,MAAM1C,KAAK,CAAC;AAC3B2C,MAAAA,MAAM,EAAE,KADmB;AAE3BC,MAAAA,GAAG,EAAG,GAAExC,OAAQ;AAFW,KAAD,CAAL,CAGpByC,KAHoB,CAGbC,GAAD,IAASN,OAAO,CAACC,GAAR,CAAYK,GAAZ,CAHK,CAAvB;;AAKA,QAAIJ,QAAJ,EAAc;AACZF,MAAAA,OAAO,CAACC,GAAR,CAAYC,QAAQ,CAACK,IAArB;AACAnC,MAAAA,WAAW,CAAC8B,QAAQ,CAACK,IAAV,CAAX;AACD;;AACDvC,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;;AAED,WAASyC,qBAAT,CAA+BC,CAA/B,EAAkC;AAChCV,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AAEA,UAAMU,YAAY,GAAGlB,SAAS,CAACA,SAAS,CAACmB,MAAV,GAAmB,CAApB,CAA9B;AAEAlB,IAAAA,YAAY,CAAED,SAAD,IACXA,SAAS,CAACoB,MAAV,CAAiB;AACf9B,MAAAA,EAAE,EAAE4B,YAAY,CAAC5B,EAAb,GAAkB,CADP;AAEfY,MAAAA,YAAY,EAAE,EAFC;AAGfP,MAAAA,cAAc,EAAE;AAHD,KAAjB,CADU,CAAZ;AAOD;;AACD,WAAS0B,wBAAT,CAAkCJ,CAAlC,EAAqC;AACnCV,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACA,UAAMU,YAAY,GAAGlB,SAAS,CAACA,SAAS,CAACmB,MAAV,GAAmB,CAApB,CAA9B;AACAlB,IAAAA,YAAY,CAAEqB,KAAD,IACXA,KAAK,CAACC,MAAN,CAAcC,IAAD,IAAU;AACrB,aAAOA,IAAI,CAAClC,EAAL,KAAY4B,YAAY,CAAC5B,EAAhC;AACD,KAFD,CADU,CAAZ;AAKD;;AACD,WAASmC,qBAAT,CAA+BR,CAA/B,EAAkCS,KAAlC,EAAyC;AACvC;AACAnB,IAAAA,OAAO,CAACC,GAAR,CAAYkB,KAAZ;AACA,QAAIC,UAAU,GAAG,CAAC,GAAG3B,SAAJ,CAAjB,CAHuC,CAKvC;;AACA,QAAI4B,YAAY,GAAG,EAAE,GAAG5B,SAAS,CAAC6B,IAAV,CAAgBC,CAAD,IAAOA,CAAC,CAACxC,EAAF,KAASoC,KAA/B;AAAL,KAAnB,CANuC,CAQvC;;AACAE,IAAAA,YAAY,CAAC1B,YAAb,GAA4Be,CAAC,CAACc,MAAF,CAASC,KAArC,CATuC,CAWvC;;AACAL,IAAAA,UAAU,CAACD,KAAD,CAAV,GAAoBE,YAApB,CAZuC,CAcvC;;AACA3B,IAAAA,YAAY,CAAC0B,UAAD,CAAZ,CAfuC,CAgBvC;AACD;;AAED,WAASM,0BAAT,CAAoChB,CAApC,EAAuCS,KAAvC,EAA8C;AAC5C;AACAnB,IAAAA,OAAO,CAACC,GAAR,CAAYkB,KAAZ;AACA,QAAIC,UAAU,GAAG,CAAC,GAAG3B,SAAJ,CAAjB,CAH4C,CAK5C;;AACA,QAAI4B,YAAY,GAAG,EAAE,GAAG5B,SAAS,CAAC6B,IAAV,CAAgBC,CAAD,IAAOA,CAAC,CAACxC,EAAF,KAASoC,KAA/B;AAAL,KAAnB,CAN4C,CAQ5C;;AACAE,IAAAA,YAAY,CAACjC,cAAb,GAA8BsB,CAAC,CAACc,MAAF,CAASC,KAAvC,CAT4C,CAW5C;;AACAL,IAAAA,UAAU,CAACD,KAAD,CAAV,GAAoBE,YAApB,CAZ4C,CAc5C;;AACA3B,IAAAA,YAAY,CAAC0B,UAAD,CAAZ,CAf4C,CAgB5C;AACD;;AAED,WAASO,YAAT,CAAsBjB,CAAtB,EAAyB;AACvBA,IAAAA,CAAC,CAACkB,cAAF;AAEA,UAAMC,IAAI,GAAG;AACX3C,MAAAA,KAAK,EAAEA,KADI;AAEX4C,MAAAA,QAAQ,EAAExC,IAFC;AAGXS,MAAAA,SAAS,EAAEtB,eAHA;AAIXsD,MAAAA,UAAU,EAAElD,QAJD;AAKXY,MAAAA,SAAS,EAAEA,SALA;AAMXuC,MAAAA,KAAK,EAAErD;AANI,KAAb;AAQAqB,IAAAA,OAAO,CAACC,GAAR,CAAY4B,IAAZ;AACAI,IAAAA,QAAQ,CAACJ,IAAD,CAAR;AACA7B,IAAAA,OAAO,CAACC,GAAR,CAAYX,IAAI,CAAC4C,iBAAL,EAAZ;AACD;;AAED,iBAAeD,QAAf,CAAwBJ,IAAxB,EAA8B;AAC5B7B,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACAjC,IAAAA,YAAY,CAAC,IAAD,CAAZ;AAEA,UAAMkC,QAAQ,GAAG,MAAM1C,KAAK,CAAC;AAC3B2C,MAAAA,MAAM,EAAE,MADmB;AAE3BC,MAAAA,GAAG,EAAG,GAAExC,OAAQ,qBAFW;AAG3B2C,MAAAA,IAAI,EAAEsB;AAHqB,KAAD,CAAL,CAIpBxB,KAJoB,CAIbC,GAAD,IAASN,OAAO,CAACC,GAAR,CAAYK,GAAZ,CAJK,CAAvB;;AAMA,QAAIJ,QAAJ,EAAc;AACZF,MAAAA,OAAO,CAACC,GAAR,CAAYC,QAAQ,CAACK,IAArB;AACD;;AACDvC,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;;AAED,MAAID,SAAJ,EAAe;AACbiC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,wBAAO,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE,QAAC,OAAD;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,aAAhB;AAAA,8BACE,QAAC,IAAD,CAAM,GAAN;AAAA,gCACE,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,EAAE,EAAElD,GAAhB;AAAqB,UAAA,SAAS,EAAC,WAA/B;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AAAc,YAAA,QAAQ,EAAG2D,CAAD,IAAOvB,QAAQ,CAACuB,CAAC,CAACc,MAAF,CAASC,KAAV;AAAvC;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,EAAE,EAAE1E,GAAhB;AAAqB,UAAA,SAAS,EAAC,sBAA/B;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,YAAA,EAAE,EAAC,QADL;AAEE,YAAA,QAAQ,EAAG2D,CAAD,IAAO5B,WAAW,CAAC4B,CAAC,CAACc,MAAF,CAASC,KAAV,CAF9B;AAAA,sBAIG3D,cAAc,CAACqE,GAAf,CAAoBtD,QAAD,iBAClB;AAAQ,cAAA,KAAK,EAAEA,QAAQ,CAACE,EAAxB;AAAA,wBACGF,QAAQ,CAACuD;AADZ,eAAiCvD,QAAQ,CAACE,EAA1C;AAAA;AAAA;AAAA;AAAA,oBADD;AAJH;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAoBE,QAAC,IAAD,CAAM,GAAN;AAAA,gCACE,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,EAAE,EAAEhC,GAAhB;AAAqB,UAAA,SAAS,EAAC,UAA/B;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,YAAA,EAAE,EAAC,QADL;AAEE,YAAA,QAAQ,EAAG2D,CAAD,IAAOb,cAAc,CAACa,CAAC,CAACc,MAAF,CAASC,KAAV,CAFjC;AAAA,oCAIE;AAAQ,cAAA,KAAK,EAAE,CAAC,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,EAKGtD,QAAQ,CAACgE,GAAT,CAAcE,OAAD,iBACZ;AAAQ,cAAA,KAAK,EAAEA,OAAO,CAACtD,EAAvB;AAA2B,cAAA,EAAE,EAAEsD,OAAO,CAACtD,EAAvC;AAAA,wBACGsD,OAAO,CAACC;AADX;AAAA;AAAA;AAAA;AAAA,oBADD,CALH;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAgBE,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,EAAE,EAAEvF,GAAhB;AAAqB,UAAA,SAAS,EAAC,eAA/B;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,YAAA,EAAE,EAAC,QADL;AAEE,YAAA,QAAQ,EAAG2D,CAAD,IAAO9B,gBAAgB,CAAC8B,CAAC,CAACc,MAAF,CAASC,KAAV,CAFnC;AAAA,uBAIGlD,gBAAgB,IAAIE,eAAe,IAAI,CAAC,CAAxC,iBACC;AAAQ,cAAA,KAAK,EAAE,CAAC,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ,EAOG,CAACF,gBAAD,IACCF,MADD,IAECI,eAAe,GAAG,CAFnB,IAGCJ,MAAM,CAAC8D,GAAP,CAAYlB,IAAD,iBACT;AAAQ,cAAA,KAAK,EAAEA,IAAI,CAACT,KAApB;AAAA,wBAA4BS,IAAI,CAACT;AAAjC;AAAA;AAAA;AAAA;AAAA,oBADF,CAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,cApBF,eAuDE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,kBACGf,SAAS,CAAC0C,GAAV,CAAc,CAACI,QAAD,EAAWpB,KAAX,kBACb,QAAC,IAAD,CAAM,GAAN;AAAU,UAAA,SAAS,EAAC,aAApB;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,EAAE,EAAEpE,GAAhB;AAAqB,YAAA,SAAS,EAAC,SAA/B;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AAAA,sCAAsBwF,QAAQ,CAACxD,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,cAAA,EAAE,EAAC,UADL;AAEE,cAAA,IAAI,EAAE,CAFR,CAGE;AAHF;AAIE,cAAA,QAAQ,EAAG2B,CAAD,IAAOQ,qBAAqB,CAACR,CAAD,EAAIS,KAAJ;AAJxC;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAUE,QAAC,GAAD;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE;AACA,cAAA,QAAQ,EAAGT,CAAD,IAAOgB,0BAA0B,CAAChB,CAAD,EAAIS,KAAJ;AAF7C;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVF,EAiBG,CAAC1B,SAAS,CAAC0B,KAAK,GAAG,CAAT,CAAV,IAAyBA,KAAK,KAAK,CAAnC,gBACC,QAAC,qBAAD;AACE,YAAA,SAAS,EAAC,gBADZ;AAEE,YAAA,OAAO,EAAEL;AAFX;AAAA;AAAA;AAAA;AAAA,kBADD,gBAMC,QAAC,kBAAD;AACE,YAAA,SAAS,EAAC,gBADZ;AAEE,YAAA,OAAO,EAAEL;AAFX;AAAA;AAAA;AAAA;AAAA,kBAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAvDF,eAwFE,QAAC,IAAD,CAAM,GAAN;AAAA,+BACE,QAAC,GAAD;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,iCACE,QAAC,UAAD;AACE,YAAA,gBAAgB,EAAC,YADnB;AAEE,YAAA,WAAW,eAAE,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,oBAFf;AAGE,YAAA,QAAQ,EAAEnB,IAHZ;AAIE,YAAA,QAAQ,EAAGA,IAAD,IAAUC,OAAO,CAACD,IAAD,CAJ7B;AAKE,YAAA,cAAc,MALhB;AAME,YAAA,UAAU,EAAC,OANb;AAOE,YAAA,aAAa,EAAE,EAPjB;AAQE,YAAA,WAAW,EAAC,MARd;AASE,YAAA,UAAU,EAAC,oBATb;AAUE,YAAA,WAAW,MAVb;AAWE,YAAA,eAAe,EAAC;AAXlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAxFF,eA0GE,QAAC,IAAD,CAAM,GAAN;AAAU,QAAA,SAAS,EAAC,wBAApB;AAAA,+BACE,QAAC,OAAD;AAAS,UAAA,OAAO,MAAhB;AAAiB,UAAA,OAAO,EAAGoB,CAAD,IAAOiB,YAAY,CAACjB,CAAD,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA1GF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqHD;;GArRQ7C,O;;KAAAA,O;AAuRT,MAAM2E,kBAAkB,gBAAGvF,KAAK,CAACwF,UAAN,OAAiB,CAAC;AAAEhB,EAAAA,KAAF;AAASiB,EAAAA;AAAT,CAAD,EAAqBC,GAArB,kBAC1C;AAAK,EAAA,SAAS,EAAC,eAAf;AAA+B,EAAA,OAAO,EAAED,OAAxC;AAAiD,EAAA,GAAG,EAAEC,GAAtD;AAAA,0BACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,cAAgC;AAAhC;AAAA;AAAA;AAAA;AAAA,UADF,EAEGlB,KAFH;AAAA;AAAA;AAAA;AAAA;AAAA,QADyB,CAA3B;MAAMe,kB;AAON,MAAMI,OAAO,GAAG/F,MAAM,CAACO,MAAD,CAAS;AAC/B,gBAAgBE,KAAK,CAACuF,QAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkBvF,KAAK,CAACuF,QAAS;AACjC;AACA;AACA;AACA;AACA,CAfA;MAAMD,O;AAiBN,MAAME,SAAS,GAAGjG,MAAM,CAACkG,CAAE;AAC3B;AACA;AACA;AACA;AACA,CALA;MAAMD,S;AAON,MAAME,OAAO,GAAGnG,MAAM,CAACQ,IAAD,CAAO;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA3DA;MAAM2F,O;AA6DN,eAAenF,OAAf","sourcesContent":["import styled from \"styled-components\";\r\nimport { Form, Col } from \"react-bootstrap\";\r\nimport { AppContext } from \"../context/context\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Button, Card } from \"../components/defaultComponents\";\r\nimport theme from \"../Assets/theme\";\r\nimport { Loader } from \"../components\";\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { MdAddCircleOutline, MdRemoveCircleOutline } from \"react-icons/md\";\r\n\r\nconst rootURL = \"http://localhost:5000/api\";\r\n\r\nfunction AddTest() {\r\n  const { judge0Languges, isLoading, setIsLoading, setShowHeader } =\r\n    React.useContext(AppContext);\r\n  setShowHeader(false);\r\n  const [subjects, setSubjects] = useState([]);\r\n  const [groups, setGroups] = useState();\r\n  const [areGroupsLoading, setAreGroupsLoading] = useState(true);\r\n\r\n  //form controlled input fields\r\n  const [selectedSubject, setSelectedSubject] = useState(-1);\r\n  const [selectedGroup, setSelectedGroup] = useState();\r\n  const [language, setLanguage] = useState(judge0Languges[0].id);\r\n  const [code, setCode] = useState();\r\n  const [title, setTitle] = useState();\r\n  const [expectedAnswer, setExpectedAnswer] = useState(\"\");\r\n  const [date, setDate] = useState(new Date());\r\n  const [questions, setQuestions] = useState([\r\n    { id: 0, questionBody: \"\", expectedAnswer: \"\" },\r\n  ]);\r\n  // const [expectedAnswers, setExpectedAnswers] = useState([])\r\n\r\n  //onMount\r\n  useEffect(() => {\r\n    getSubjects();\r\n  }, []);\r\n\r\n  function subjectChanged(id) {\r\n    setSelectedSubject(id);\r\n    if (id > 0) {\r\n      getGroups(id);\r\n    }\r\n  }\r\n  async function getGroups(subjectId) {\r\n    console.log(\"getting groups from db...\");\r\n    setAreGroupsLoading(true);\r\n    const response = await axios({\r\n      method: \"get\",\r\n      url: `${rootURL}/subjects/${subjectId}/groups`,\r\n    }).catch((err) => console.log(err));\r\n\r\n    if (response) {\r\n      console.log(response.data);\r\n      setGroups(response.data);\r\n      setSelectedGroup(response.data[0].grupa);\r\n    }\r\n    setAreGroupsLoading(false);\r\n  }\r\n\r\n  async function getSubjects() {\r\n    console.log(\"getting subjects from db...\");\r\n    setIsLoading(true);\r\n    const response = await axios({\r\n      method: \"get\",\r\n      url: `${rootURL}/teachers/1/subjects`,\r\n    }).catch((err) => console.log(err));\r\n\r\n    if (response) {\r\n      console.log(response.data);\r\n      setSubjects(response.data);\r\n    }\r\n    setIsLoading(false);\r\n  }\r\n\r\n  function addQuestionBtnHandler(e) {\r\n    console.log(\"addQuestionBtnHandler\");\r\n\r\n    const lastQuestion = questions[questions.length - 1];\r\n\r\n    setQuestions((questions) =>\r\n      questions.concat({\r\n        id: lastQuestion.id + 1,\r\n        questionBody: \"\",\r\n        expectedAnswer: \"\",\r\n      })\r\n    );\r\n  }\r\n  function removeQuestionBtnHandler(e) {\r\n    console.log(\"removeQuestionBtnHandler\");\r\n    const lastQuestion = questions[questions.length - 1];\r\n    setQuestions((items) =>\r\n      items.filter((item) => {\r\n        return item.id !== lastQuestion.id;\r\n      })\r\n    );\r\n  }\r\n  function handleQuestionsChange(e, index) {\r\n    // 1. Make a shallow copy of the array\r\n    console.log(index);\r\n    let temp_state = [...questions];\r\n\r\n    // 2. Make a shallow copy of the element you want to mutate\r\n    let temp_element = { ...questions.find((x) => x.id === index) };\r\n\r\n    // 3. Update the property you're interested in\r\n    temp_element.questionBody = e.target.value;\r\n\r\n    // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\r\n    temp_state[index] = temp_element;\r\n\r\n    // 5. Set the state to our new copy\r\n    setQuestions(temp_state);\r\n    // console.log(questions.find((x) => x.id === index).questionBody);\r\n  }\r\n\r\n  function handleExpectedResultChange(e, index) {\r\n    // 1. Make a shallow copy of the array\r\n    console.log(index);\r\n    let temp_state = [...questions];\r\n\r\n    // 2. Make a shallow copy of the element you want to mutate\r\n    let temp_element = { ...questions.find((x) => x.id === index) };\r\n\r\n    // 3. Update the property you're interested in\r\n    temp_element.expectedAnswer = e.target.value;\r\n\r\n    // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\r\n    temp_state[index] = temp_element;\r\n\r\n    // 5. Set the state to our new copy\r\n    setQuestions(temp_state);\r\n    // console.log(questions.find((x) => x.id === index).questionBody);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const test = {\r\n      title: title,\r\n      deadline: date,\r\n      subjectId: selectedSubject,\r\n      languageId: language,\r\n      questions: questions,\r\n      group: selectedGroup,\r\n    };\r\n    console.log(test);\r\n    postTest(test);\r\n    console.log(date.getTimezoneOffset());\r\n  }\r\n\r\n  async function postTest(test) {\r\n    console.log(\"posting assignment...\");\r\n    setIsLoading(true);\r\n\r\n    const response = await axios({\r\n      method: \"post\",\r\n      url: `${rootURL}/assignments/create`,\r\n      data: test,\r\n    }).catch((err) => console.log(err));\r\n\r\n    if (response) {\r\n      console.log(response.data);\r\n    }\r\n    setIsLoading(false);\r\n  }\r\n\r\n  if (isLoading) {\r\n    console.log(\"is loading..\");\r\n    return <Loader></Loader>;\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <FormTitle className=\"formTitle\">Adaugă Test</FormTitle>\r\n      <Form className=\"addTestForm\">\r\n        <Form.Row>\r\n          <Form.Group as={Col} controlId=\"testTitle\">\r\n            <Form.Label>Titlu test</Form.Label>\r\n            <Form.Control onChange={(e) => setTitle(e.target.value)} />\r\n          </Form.Group>\r\n          <Form.Group as={Col} controlId=\"programmingLanguages\">\r\n            <Form.Label>Limbaj de programare</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              onChange={(e) => setLanguage(e.target.value)}\r\n            >\r\n              {judge0Languges.map((language) => (\r\n                <option value={language.id} key={language.id}>\r\n                  {language.name}\r\n                </option>\r\n              ))}\r\n            </Form.Control>\r\n          </Form.Group>\r\n        </Form.Row>\r\n        <Form.Row>\r\n          <Form.Group as={Col} controlId=\"subjects\">\r\n            <Form.Label>Materie</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              onChange={(e) => subjectChanged(e.target.value)}\r\n            >\r\n              <option value={-1}>Selectează</option>\r\n              {subjects.map((subject) => (\r\n                <option value={subject.id} id={subject.id}>\r\n                  {subject.descriere}\r\n                </option>\r\n              ))}\r\n            </Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Col} controlId=\"StudentGroups\">\r\n            <Form.Label>Grupa</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              onChange={(e) => setSelectedGroup(e.target.value)}\r\n            >\r\n              {areGroupsLoading && selectedSubject == -1 && (\r\n                <option value={-1}>nicio grupa pentru materia selectată</option>\r\n              )}\r\n              {!areGroupsLoading &&\r\n                groups &&\r\n                selectedSubject > 0 &&\r\n                groups.map((item) => (\r\n                  <option value={item.grupa}>{item.grupa}</option>\r\n                ))}\r\n            </Form.Control>\r\n          </Form.Group>\r\n        </Form.Row>\r\n\r\n        <div className=\"questionsContainer\">\r\n          {questions.map((question, index) => (\r\n            <Form.Row className=\"questionRow\">\r\n              <Form.Group as={Col} controlId=\"Problem\">\r\n                <Form.Label>Problema {question.id}</Form.Label>\r\n                <Form.Control\r\n                  as=\"textarea\"\r\n                  rows={1}\r\n                  // value={questions.find((x) => x.id === index).questionBody}\r\n                  onChange={(e) => handleQuestionsChange(e, index)}\r\n                />\r\n              </Form.Group>\r\n              <Col>\r\n                <Form.Label>Rezultat așteptat</Form.Label>\r\n                <Form.Control\r\n                  // value={questions.find((x) => x.id === index).expectedAnswer}\r\n                  onChange={(e) => handleExpectedResultChange(e, index)}\r\n                />\r\n              </Col>\r\n              {!questions[index + 1] && index !== 0 ? (\r\n                <MdRemoveCircleOutline\r\n                  className=\"addQuestionBtn\"\r\n                  onClick={removeQuestionBtnHandler}\r\n                ></MdRemoveCircleOutline>\r\n              ) : (\r\n                <MdAddCircleOutline\r\n                  className=\"addQuestionBtn\"\r\n                  onClick={addQuestionBtnHandler}\r\n                ></MdAddCircleOutline>\r\n              )}\r\n            </Form.Row>\r\n          ))}\r\n        </div>\r\n        <Form.Row>\r\n          <Col className=\"datePickerColumn\">\r\n            <DatePicker\r\n              wrapperClassName=\"datepicker\"\r\n              customInput={<ExampleCustomInput />}\r\n              selected={date}\r\n              onChange={(date) => setDate(date)}\r\n              showTimeSelect\r\n              timeFormat=\"HH:mm\"\r\n              timeIntervals={15}\r\n              timeCaption=\"Timp\"\r\n              dateFormat=\"d MMMM, yyyy HH:mm\"\r\n              fixedHeight\r\n              popperPlacement=\"top-end\"\r\n            />\r\n          </Col>\r\n        </Form.Row>\r\n\r\n        <Form.Row className=\"justify-content-center\">\r\n          <SendBtn primary onClick={(e) => handleSubmit(e)}>\r\n            Trimite\r\n          </SendBtn>\r\n        </Form.Row>\r\n      </Form>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst ExampleCustomInput = React.forwardRef(({ value, onClick }, ref) => (\r\n  <div className=\"timePickerBox\" onClick={onClick} ref={ref}>\r\n    <div className=\"deadlineText\">{`Deadline:`}</div>\r\n    {value}\r\n  </div>\r\n));\r\n\r\nconst SendBtn = styled(Button)`\r\n  background: ${theme.mainBlue};\r\n  color: white;\r\n  margin-top: 2em;\r\n  font-size: 1rem;\r\n  font-weight: 400;\r\n  height: 50px;\r\n  width: 150px;\r\n\r\n  &:hover {\r\n    background: ${theme.mainBlue};\r\n    color: white;\r\n    font-weight: normal;\r\n    f\r\n  }\r\n`;\r\n\r\nconst FormTitle = styled.p`\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 2rem;\r\n  margin-bottom: 1em;\r\n`;\r\n\r\nconst Wrapper = styled(Card)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 40%;\r\n  margin-left: 37%;\r\n  height: 100%;\r\n\r\n  margin-top: 7%;\r\n  // padding-left: 5%;\r\n  // padding-right: 5%;\r\n  // padding-bottom: 10%;\r\n  // padding-top: 5%;\r\n\r\n  .addTestForm {\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n  .plus {\r\n    margin-right: 10px;\r\n  }\r\n  .questionsContainer {\r\n    max-height: 12em;\r\n    overflow-y: auto;\r\n    overflow-x: hidden;\r\n  }\r\n\r\n  .addQuestionBtn {\r\n    align-self: center;\r\n    margin-top: 15px;\r\n    margin-right: 15px;\r\n    margin-left: 15px;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .datePickerColumn {\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n\r\n  .timePickerBox {\r\n    display: flex;\r\n    width: 100%;\r\n    height: calc(1.5em + 0.75rem + 2px);\r\n    padding: 0.375rem 0.75rem;\r\n    font-size: 1rem;\r\n    font-weight: 400;\r\n    line-height: 1.5;\r\n    color: #495057;\r\n    background-color: #fff;\r\n    background-clip: padding-box;\r\n    border: 1px solid #ced4da;\r\n    border-radius: 0.25rem;\r\n    transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\r\n  }\r\n\r\n  .deadlineText {\r\n    margin-right: 10px;\r\n    font-weight: 600;\r\n  }\r\n`;\r\n\r\nexport default AddTest;\r\n"]},"metadata":{},"sourceType":"module"}