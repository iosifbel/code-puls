{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joseph\\\\Desktop\\\\BcThesis\\\\licenta_aplicatie\\\\code-puls\\\\client\\\\src\\\\context\\\\context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst rootURL = \"http://localhost:5000/api\";\nconst judege0Languges = [{\n  \"id\": 48,\n  \"name\": \"C (GCC 7.4.0)\"\n}, {\n  \"id\": 51,\n  \"name\": \"C# (Mono 6.6.0.161)\"\n}, {\n  \"id\": 52,\n  \"name\": \"C++ (GCC 7.4.0)\"\n}, {\n  \"id\": 63,\n  \"name\": \"JavaScript (Node.js 12.14.0)\"\n}, {\n  \"id\": 62,\n  \"name\": \"Java (OpenJDK 13.0.1)\"\n}, {\n  \"id\": 71,\n  \"name\": \"Python (3.8.1)\"\n}];\nconst AppContext = /*#__PURE__*/React.createContext();\n\nconst AppProvider = ({\n  children\n}) => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [tests, setTests] = useState([]);\n  const [showNavbar, setShowNavbar] = useState(true);\n  const [testQuestions, setTestQuestions] = useState([]);\n  const [languages] = useState(judege0Languges);\n\n  const getStudentTests = async () => {\n    console.log(\"getting tests from db..\");\n    setIsLoading(true);\n    const response = await axios.get(`${rootURL}/students/1/due`).catch(err => console.log(err));\n\n    if (response) {\n      setTests(response.data);\n    }\n\n    setIsLoading(false);\n  };\n\n  const getTestQuestions = async testId => {\n    console.log(\"getting questions from db..\");\n    setIsLoading(true);\n    const response = await axios.get(`${rootURL}/assignments/${testId}/questions`).catch(err => console.log(err));\n\n    if (response) {\n      // console.log(response.data)\n      setTestQuestions(response.data);\n    }\n\n    setIsLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      tests,\n      isLoading,\n      getStudentTests,\n      showNavbar,\n      setShowNavbar,\n      testQuestions,\n      getTestQuestions,\n      languages\n    },\n    children: [children, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 12\n  }, this);\n};\n\n_s(AppProvider, \"b4n847zZSfUz2iG1S+3lvLq1pzs=\");\n\n_c = AppProvider;\nexport { AppContext, AppProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"sources":["C:/Users/Joseph/Desktop/BcThesis/licenta_aplicatie/code-puls/client/src/context/context.js"],"names":["React","useState","axios","rootURL","judege0Languges","AppContext","createContext","AppProvider","children","isLoading","setIsLoading","tests","setTests","showNavbar","setShowNavbar","testQuestions","setTestQuestions","languages","getStudentTests","console","log","response","get","catch","err","data","getTestQuestions","testId"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,MAAMC,OAAO,GAAG,2BAAhB;AAEA,MAAMC,eAAe,GACrB,CACI;AAAC,QAAK,EAAN;AAAS,UAAO;AAAhB,CADJ,EAEI;AAAC,QAAK,EAAN;AAAS,UAAO;AAAhB,CAFJ,EAGI;AAAC,QAAK,EAAN;AAAS,UAAO;AAAhB,CAHJ,EAII;AAAC,QAAK,EAAN;AAAS,UAAO;AAAhB,CAJJ,EAKI;AAAC,QAAK,EAAN;AAAS,UAAO;AAAhB,CALJ,EAMI;AAAC,QAAK,EAAN;AAAS,UAAO;AAAhB,CANJ,CADA;AAUA,MAAMC,UAAU,gBAAGL,KAAK,CAACM,aAAN,EAAnB;;AACA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAAA;;AAChC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACY,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACc,aAAD,EAAgBC,gBAAhB,IAAoCf,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACgB,SAAD,IAAchB,QAAQ,CAACG,eAAD,CAA5B;;AAEA,QAAOc,eAAe,GAAG,YAAY;AACjCC,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACAV,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,UAAMW,QAAQ,GAAI,MAAMnB,KAAK,CAACoB,GAAN,CAAW,GAAEnB,OAAQ,iBAArB,EACvBoB,KADuB,CAChBC,GAAD,IAASL,OAAO,CAACC,GAAR,CAAYI,GAAZ,CADQ,CAAxB;;AAGA,QAAGH,QAAH,EAAa;AACTT,MAAAA,QAAQ,CAACS,QAAQ,CAACI,IAAV,CAAR;AACH;;AACDf,IAAAA,YAAY,CAAC,KAAD,CAAZ;AAEH,GAXD;;AAaA,QAAOgB,gBAAgB,GAAG,MAAOC,MAAP,IAAkB;AACxCR,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACAV,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,UAAMW,QAAQ,GAAI,MAAMnB,KAAK,CAACoB,GAAN,CAAW,GAAEnB,OAAQ,gBAAewB,MAAO,YAA3C,EACvBJ,KADuB,CAChBC,GAAD,IAASL,OAAO,CAACC,GAAR,CAAYI,GAAZ,CADQ,CAAxB;;AAGA,QAAGH,QAAH,EAAa;AACT;AACAL,MAAAA,gBAAgB,CAACK,QAAQ,CAACI,IAAV,CAAhB;AACH;;AACDf,IAAAA,YAAY,CAAC,KAAD,CAAZ;AAEH,GAZD;;AAiBA,sBAAO,QAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAD;AAAQF,MAAAA,SAAR;AAAmBS,MAAAA,eAAnB;AAAoCL,MAAAA,UAApC;AAAgDC,MAAAA,aAAhD;AAA+DC,MAAAA,aAA/D;AAA8EW,MAAAA,gBAA9E;AAAgGT,MAAAA;AAAhG,KAA5B;AAAA,eAAyIT,QAAzI;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAtCD;;GAAMD,W;;KAAAA,W;AAwCN,SAAQF,UAAR,EAAoBE,WAApB","sourcesContent":["import React, {useState} from 'react';\r\nimport axios from \"axios\";\r\nconst rootURL = \"http://localhost:5000/api\";\r\n\r\nconst judege0Languges = \r\n[\r\n    {\"id\":48,\"name\":\"C (GCC 7.4.0)\"},\r\n    {\"id\":51,\"name\":\"C# (Mono 6.6.0.161)\"},\r\n    {\"id\":52,\"name\":\"C++ (GCC 7.4.0)\"},\r\n    {\"id\":63,\"name\":\"JavaScript (Node.js 12.14.0)\"},\r\n    {\"id\":62,\"name\":\"Java (OpenJDK 13.0.1)\"},\r\n    {\"id\":71,\"name\":\"Python (3.8.1)\"}\r\n];\r\n\r\nconst AppContext = React.createContext();\r\nconst AppProvider = ({children}) => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [tests, setTests] = useState([]); \r\n    const [showNavbar, setShowNavbar] = useState(true);\r\n    const [testQuestions, setTestQuestions] = useState([]);\r\n    const [languages] = useState(judege0Languges);\r\n\r\n    const  getStudentTests = async () => {\r\n        console.log(\"getting tests from db..\")\r\n        setIsLoading(true);\r\n        const response  = await axios.get(`${rootURL}/students/1/due`)\r\n        .catch((err) => console.log(err));\r\n\r\n        if(response) {\r\n            setTests(response.data);\r\n        }\r\n        setIsLoading(false);\r\n\r\n    }  \r\n\r\n    const  getTestQuestions = async (testId) => {\r\n        console.log(\"getting questions from db..\")\r\n        setIsLoading(true);\r\n        const response  = await axios.get(`${rootURL}/assignments/${testId}/questions`)\r\n        .catch((err) => console.log(err));\r\n\r\n        if(response) {\r\n            // console.log(response.data)\r\n            setTestQuestions(response.data);\r\n        }\r\n        setIsLoading(false);\r\n\r\n    }  \r\n\r\n\r\n\r\n\r\n    return <AppContext.Provider value={{tests, isLoading, getStudentTests, showNavbar, setShowNavbar, testQuestions, getTestQuestions, languages}}>{children} </AppContext.Provider>\r\n}\r\n\r\nexport {AppContext, AppProvider}"]},"metadata":{},"sourceType":"module"}