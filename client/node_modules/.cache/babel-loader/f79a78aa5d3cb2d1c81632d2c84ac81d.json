{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joseph\\\\Desktop\\\\BcThesis\\\\licenta_aplicatie\\\\code-puls\\\\client\\\\src\\\\context\\\\context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst rootURL = \"http://localhost:5000/api\";\nconst judege0Languges = [{\n  \"id\": 48,\n  \"name\": \"C (GCC 7.4.0)\"\n}, {\n  \"id\": 51,\n  \"name\": \"C# (Mono 6.6.0.161)\"\n}, {\n  \"id\": 52,\n  \"name\": \"C++ (GCC 7.4.0)\"\n}, {\n  \"id\": 63,\n  \"name\": \"JavaScript (Node.js 12.14.0)\"\n}, {\n  \"id\": 62,\n  \"name\": \"Java (OpenJDK 13.0.1)\"\n}, {\n  \"id\": 71,\n  \"name\": \"Python (3.8.1)\"\n}];\nconst ace = [{\n  \"id\": 48,\n  \"name\": \"c_cpp\"\n}, {\n  \"id\": 51,\n  \"name\": \"csharp\"\n}, {\n  \"id\": 52,\n  \"name\": \"c_cpp\"\n}, {\n  \"id\": 63,\n  \"name\": \"javascript\"\n}, {\n  \"id\": 62,\n  \"name\": \"java\"\n}, {\n  \"id\": 71,\n  \"name\": \"python\"\n}];\nconst AppContext = /*#__PURE__*/React.createContext();\n\nconst AppProvider = ({\n  children\n}) => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [tests, setTests] = useState([]);\n  const [showNavbar, setShowNavbar] = useState(true);\n  const [testQuestions, setTestQuestions] = useState([]);\n  const [aceLanguages] = useState(ace);\n  const [judgeResponse, setJudgeResponse] = useState();\n  const [codeEditorText, setCodeEditorText] = useState(\"#include<iostream>\");\n\n  const getStudentTests = async () => {\n    console.log(\"getting tests from db..\");\n    setIsLoading(true);\n    const response = await axios.get(`${rootURL}/students/1/due`).catch(err => console.log(err));\n\n    if (response) {\n      setTests(response.data);\n    }\n\n    setIsLoading(false);\n  };\n\n  const getTestQuestions = async testId => {\n    console.log(\"getting questions from db..\");\n    setIsLoading(true);\n    const response = await axios.get(`${rootURL}/assignments/${testId}/questions`).catch(err => console.log(err));\n\n    if (response) {\n      // console.log(response.data)\n      setTestQuestions(response.data);\n    }\n\n    setIsLoading(false);\n  };\n\n  const getJudgeAssessment = async test => {\n    console.log(\"getting assessment from judge...\"); //setIsLoading(true);\n\n    const judgeData = {\n      source_code: test.source_cod,\n      language_id: test.language_id,\n      stdin: test.stdin\n    };\n    console.log(test.source_cod);\n    const response = await axios({\n      method: \"post\",\n      url: `${rootURL}/questions/assess/${test.questionId}/${test.id}/1`,\n      data: judgeData\n    }).catch(err => console.log(err));\n\n    if (response) {\n      console.log(response.data);\n      setJudgeResponse(response.data);\n    } //setIsLoading(false);\n\n  };\n\n  function encode(str) {\n    return btoa(unescape(encodeURIComponent(str || \"\")));\n  }\n\n  function decode(bytes) {\n    var escaped = escape(atob(bytes || \"\"));\n\n    try {\n      return decodeURIComponent(escaped);\n    } catch {\n      return unescape(escaped);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      tests,\n      isLoading,\n      getStudentTests,\n      showNavbar,\n      setShowNavbar,\n      testQuestions,\n      getTestQuestions,\n      aceLanguages,\n      judgeResponse,\n      getJudgeAssessment,\n      codeEditorText,\n      setCodeEditorText,\n      encode,\n      decode\n    },\n    children: [children, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 12\n  }, this);\n};\n\n_s(AppProvider, \"zpcuQr+BxAc5wQz6AtuDfRLG7qM=\");\n\n_c = AppProvider;\nexport { AppContext, AppProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"sources":["C:/Users/Joseph/Desktop/BcThesis/licenta_aplicatie/code-puls/client/src/context/context.js"],"names":["React","useState","axios","rootURL","judege0Languges","ace","AppContext","createContext","AppProvider","children","isLoading","setIsLoading","tests","setTests","showNavbar","setShowNavbar","testQuestions","setTestQuestions","aceLanguages","judgeResponse","setJudgeResponse","codeEditorText","setCodeEditorText","getStudentTests","console","log","response","get","catch","err","data","getTestQuestions","testId","getJudgeAssessment","test","judgeData","source_code","source_cod","language_id","stdin","method","url","questionId","id","encode","str","btoa","unescape","encodeURIComponent","decode","bytes","escaped","escape","atob","decodeURIComponent"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport axios from \"axios\";\r\nconst rootURL = \"http://localhost:5000/api\";\r\n\r\nconst judege0Languges = \r\n[\r\n    {\"id\":48,\"name\":\"C (GCC 7.4.0)\"},\r\n    {\"id\":51,\"name\":\"C# (Mono 6.6.0.161)\"},\r\n    {\"id\":52,\"name\":\"C++ (GCC 7.4.0)\"},\r\n    {\"id\":63,\"name\":\"JavaScript (Node.js 12.14.0)\"},\r\n    {\"id\":62,\"name\":\"Java (OpenJDK 13.0.1)\"},\r\n    {\"id\":71,\"name\":\"Python (3.8.1)\"}\r\n];\r\n\r\nconst ace = \r\n[\r\n    {\"id\":48,\"name\":\"c_cpp\"},\r\n    {\"id\":51,\"name\":\"csharp\"},\r\n    {\"id\":52,\"name\":\"c_cpp\"},\r\n    {\"id\":63,\"name\":\"javascript\"},\r\n    {\"id\":62,\"name\":\"java\"},\r\n    {\"id\":71,\"name\":\"python\"}\r\n];\r\n\r\nconst AppContext = React.createContext();\r\nconst AppProvider = ({children}) => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [tests, setTests] = useState([]); \r\n    const [showNavbar, setShowNavbar] = useState(true);\r\n    const [testQuestions, setTestQuestions] = useState([]);\r\n    const [aceLanguages] = useState(ace);\r\n    const [judgeResponse, setJudgeResponse] = useState();\r\n    const [codeEditorText, setCodeEditorText] = useState(\"#include<iostream>\");\r\n    \r\n    const getStudentTests = async () => {\r\n        console.log(\"getting tests from db..\")\r\n        setIsLoading(true);\r\n        const response  = await axios.get(`${rootURL}/students/1/due`)\r\n        .catch((err) => console.log(err));\r\n\r\n        if(response) {\r\n            setTests(response.data);\r\n        }\r\n        setIsLoading(false);\r\n\r\n    }  \r\n    const getTestQuestions = async (testId) => {\r\n        console.log(\"getting questions from db..\")\r\n        setIsLoading(true);\r\n        const response  = await axios.get(`${rootURL}/assignments/${testId}/questions`)\r\n        .catch((err) => console.log(err));\r\n\r\n        if(response) {\r\n            // console.log(response.data)\r\n            setTestQuestions(response.data);\r\n        }\r\n        setIsLoading(false);\r\n\r\n    }  \r\n    const getJudgeAssessment = async (test) => {\r\n        console.log(\"getting assessment from judge...\");\r\n        //setIsLoading(true);\r\n        const judgeData = {\r\n            source_code : test.source_cod,\r\n            language_id : test.language_id,\r\n            stdin : test.stdin\r\n        }\r\n        console.log(test.source_cod)\r\n        const response  = await axios({\r\n            method : \"post\",\r\n            url : `${rootURL}/questions/assess/${test.questionId}/${test.id}/1`,\r\n            data: judgeData\r\n        })\r\n        .catch((err) => console.log(err));\r\n\r\n        if(response) {\r\n            console.log(response.data)\r\n            setJudgeResponse(response.data);\r\n        }\r\n        //setIsLoading(false);\r\n    }\r\n    function encode(str) {\r\n        return btoa(unescape(encodeURIComponent(str || \"\")));\r\n      }      \r\n    function decode(bytes) {\r\n        var escaped = escape(atob(bytes || \"\"));\r\n        try {\r\n            return decodeURIComponent(escaped);\r\n        } catch {\r\n            return unescape(escaped);\r\n        }\r\n      }\r\n\r\n\r\n\r\n    return <AppContext.Provider value=\r\n    {{\r\n        tests, isLoading, getStudentTests, showNavbar,\r\n        setShowNavbar, testQuestions, getTestQuestions,\r\n        aceLanguages, judgeResponse, getJudgeAssessment,\r\n        codeEditorText, setCodeEditorText, encode, decode,\r\n\r\n    }}>{children} </AppContext.Provider>\r\n}\r\n\r\nexport {AppContext, AppProvider}"]},"metadata":{},"sourceType":"module"}