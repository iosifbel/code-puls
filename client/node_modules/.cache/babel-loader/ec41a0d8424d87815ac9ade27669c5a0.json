{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joseph\\\\Desktop\\\\BcThesis\\\\licenta_aplicatie\\\\code-puls\\\\client\\\\src\\\\pages\\\\takeTest.js\",\n    _s = $RefreshSig$();\n\nimport { Card, Button } from \"../components/defaultComponents\";\nimport { CodeEditor, Loader, QuestionSlider } from \"../components\";\nimport styled from \"styled-components\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { AppContext } from \"../context/context\";\nimport DefaultCode from \"../components/defaultCodeData\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst rootURL = \"http://localhost:5000/api\";\n\nfunction TakeTest({\n  test\n}) {\n  _s();\n\n  const {\n    setShowNavbar,\n    setShowHeader\n  } = useContext(AppContext);\n  setShowNavbar(false);\n  setShowHeader(true); //get current User\n\n  const auth = useContext(AuthContext);\n  const {\n    authState\n  } = auth;\n  const user = authState.userInfo;\n  const {\n    testQuestions,\n    getTestQuestions,\n    isLoading,\n    aceLanguages,\n    encode,\n    decode\n  } = React.useContext(AppContext);\n  const [language, setLanguage] = useState(\"javascript\");\n  const [stdout, setStdout] = useState(\" \");\n  const [compileError, setCompileError] = useState();\n  const [testCaseStatus, setTestCaseStatus] = useState(\" \");\n  const [judgeResponse, setJudgeResponse] = useState();\n  const [isConsoleLoading, setIsConsoleLoading] = useState(false);\n  const [currentQuestion, setCurrentQuestion] = useState(testQuestions[0]);\n  const [codeEditorText, setCodEditorText] = useState([]); //onMount\n\n  useEffect(() => {\n    // console.log(\"onMount\");\n    // console.log(test.id);\n    getTestQuestions(test.id); // console.log(testQuestions);\n\n    const aceLanguage = aceLanguages.find(language => language.id == test.id_limbaj_programare);\n\n    if (aceLanguage) {\n      setLanguage(aceLanguage.name);\n    }\n\n    const defaultCode = DefaultCode.find(item => item.id == test.id_limbaj_programare);\n\n    if (defaultCode) {\n      setCodeEditorText(defaultCode.code);\n    }\n  }, []); //When judgeResponse change\n\n  useEffect(() => {\n    console.log(\"judge response changed\");\n\n    if (judgeResponse) {\n      setStdout(decode(judgeResponse.stdout));\n      setTestCaseStatus(judgeResponse.status.description);\n      setCompileError(decode(judgeResponse.compile_output));\n    }\n  }, [judgeResponse]);\n\n  function executaBtnHandler() {\n    if (!isConsoleLoading) {\n      console.log(\"buton executa apasat\");\n      const assignment = {\n        id: test.id,\n        questionId: currentQuestion.id,\n        source_cod: encode(codeEditorText),\n        language_id: test.id_limbaj_programare,\n        stdin: \"\"\n      };\n      console.log(assignment);\n      getJudgeAssessment(assignment);\n    }\n  }\n\n  const getJudgeAssessment = async test => {\n    console.log(\"getting assessment from judge...\");\n    setIsConsoleLoading(true);\n    const judgeData = {\n      source_code: test.source_cod,\n      language_id: test.language_id,\n      stdin: test.stdin\n    }; // console.log(test.source_cod);\n\n    const response = await axios({\n      method: \"post\",\n      url: `${rootURL}/questions/assess/${test.questionId}/${test.id}/${user.id}`,\n      data: judgeData\n    }).catch(err => console.log(err));\n\n    if (response) {\n      console.log(response.data);\n      setJudgeResponse(response.data);\n    }\n\n    setIsConsoleLoading(false);\n  };\n\n  function questionChanged(question) {\n    setCurrentQuestion(question);\n  }\n\n  function codeEditorTextChanged(text) {\n    const index = currentQuestion.id;\n    let temp_state = [...codeEditorText];\n\n    if (codeEditorText.length > index) {\n      temp_state[index] = text;\n    } else {\n      temp_state.push(text);\n    }\n\n    setCodEditorText(temp_state);\n  }\n\n  useEffect(() => {\n    console.log(currentQuestion);\n  }, [currentQuestion]);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(ProblemCard, {\n        children: /*#__PURE__*/_jsxDEV(QuestionSlider, {\n          questions: testQuestions,\n          callback: questionChanged\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditorCard, {\n        children: /*#__PURE__*/_jsxDEV(CodeEditor, {\n          language: language,\n          callback: codeEditorTextChanged\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ExecuteBtn, {\n        primary: true,\n        onClick: executaBtnHandler,\n        children: \"Executa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ConsoleCard, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Output:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), !isConsoleLoading && stdout && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: stdout\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 45\n          }, this), isConsoleLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Test Case Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), !isConsoleLoading && testCaseStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: testCaseStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 53\n          }, this), isConsoleLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), !isConsoleLoading && compileError && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Compile Error:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: compileError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SubmitBtn, {\n        secondary: true,\n        children: \"Trimite\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TakeTest, \"im4SwobPe80xcQSRRBUjMTYFm5U=\");\n\n_c = TakeTest;\nconst Wrapper = styled.section`\n  display: grid;\n  height: 100%;\n  width: 100%;\n  max-height: 700px;\n  grid-template-columns: repeat(2, 1fr);\n  grid-template-rows: repeat(10, 1fr);\n  grid-template-areas:\n    \"A    B\"\n    \"A    B\"\n    \"A    B\"\n    \"A    B\"\n    \"A    B\"\n    \"A    B\"\n    \"A    D\"\n    \"A    C\"\n    \"A    C\"\n    \"A    E\";\n  grid-column-gap: 2em;\n`;\n_c2 = Wrapper;\nconst ProblemCard = styled(Card)`\n  grid-area: A;\n  overflow: auto;\n  margin-left: 2em;\n`;\n_c3 = ProblemCard;\nconst EditorCard = styled(Card)`\n  grid-area: B;\n  margin-right: 2em;\n  margin-top: 3em;\n  align-items: streched\n  justify-items : streched;\n  \n`;\n_c4 = EditorCard;\nconst ConsoleCard = styled(Card)`\n  grid-area: C;\n  margin-right: 2em;\n  position: relative;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  overflow: auto;\n  flex-wrap: wrap;\n`;\n_c5 = ConsoleCard;\nconst ExecuteBtn = styled(Button)`\n  height: 50px;\n  width: 150px;\n  grid-are: D;\n  justify-self: start;\n  align-self: center;\n`;\n_c6 = ExecuteBtn;\nconst SubmitBtn = styled(Button)`\n  height: 50px;\n  width: 150px;\n  grid-are: E;\n  justify-self: end;\n  align-self: center;\n  margin-right: 2em;\n`;\n_c7 = SubmitBtn;\nexport default TakeTest;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"TakeTest\");\n$RefreshReg$(_c2, \"Wrapper\");\n$RefreshReg$(_c3, \"ProblemCard\");\n$RefreshReg$(_c4, \"EditorCard\");\n$RefreshReg$(_c5, \"ConsoleCard\");\n$RefreshReg$(_c6, \"ExecuteBtn\");\n$RefreshReg$(_c7, \"SubmitBtn\");","map":{"version":3,"sources":["C:/Users/Joseph/Desktop/BcThesis/licenta_aplicatie/code-puls/client/src/pages/takeTest.js"],"names":["Card","Button","CodeEditor","Loader","QuestionSlider","styled","React","useEffect","useState","useContext","AuthContext","AppContext","DefaultCode","axios","rootURL","TakeTest","test","setShowNavbar","setShowHeader","auth","authState","user","userInfo","testQuestions","getTestQuestions","isLoading","aceLanguages","encode","decode","language","setLanguage","stdout","setStdout","compileError","setCompileError","testCaseStatus","setTestCaseStatus","judgeResponse","setJudgeResponse","isConsoleLoading","setIsConsoleLoading","currentQuestion","setCurrentQuestion","codeEditorText","setCodEditorText","id","aceLanguage","find","id_limbaj_programare","name","defaultCode","item","setCodeEditorText","code","console","log","status","description","compile_output","executaBtnHandler","assignment","questionId","source_cod","language_id","stdin","getJudgeAssessment","judgeData","source_code","response","method","url","data","catch","err","questionChanged","question","codeEditorTextChanged","text","index","temp_state","length","push","Wrapper","section","ProblemCard","EditorCard","ConsoleCard","ExecuteBtn","SubmitBtn"],"mappings":"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","sourcesContent":["import { Card, Button } from \"../components/defaultComponents\";\r\nimport { CodeEditor, Loader, QuestionSlider } from \"../components\";\r\nimport styled from \"styled-components\";\r\nimport React, { useEffect, useState, useContext } from \"react\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport { AppContext } from \"../context/context\";\r\nimport DefaultCode from \"../components/defaultCodeData\";\r\nimport axios from \"axios\";\r\nconst rootURL = \"http://localhost:5000/api\";\r\n\r\nfunction TakeTest({ test }) {\r\n  const { setShowNavbar, setShowHeader } = useContext(AppContext);\r\n  setShowNavbar(false);\r\n  setShowHeader(true);\r\n\r\n  //get current User\r\n  const auth = useContext(AuthContext);\r\n  const { authState } = auth;\r\n  const user = authState.userInfo;\r\n\r\n  const {\r\n    testQuestions,\r\n    getTestQuestions,\r\n    isLoading,\r\n    aceLanguages,\r\n    encode,\r\n    decode,\r\n  } = React.useContext(AppContext);\r\n\r\n  const [language, setLanguage] = useState(\"javascript\");\r\n  const [stdout, setStdout] = useState(\" \");\r\n  const [compileError, setCompileError] = useState();\r\n  const [testCaseStatus, setTestCaseStatus] = useState(\" \");\r\n  const [judgeResponse, setJudgeResponse] = useState();\r\n  const [isConsoleLoading, setIsConsoleLoading] = useState(false);\r\n  const [currentQuestion, setCurrentQuestion] = useState(testQuestions[0]);\r\n  const [codeEditorText, setCodEditorText] = useState([]);\r\n  //onMount\r\n  useEffect(() => {\r\n    // console.log(\"onMount\");\r\n    // console.log(test.id);\r\n    getTestQuestions(test.id);\r\n    // console.log(testQuestions);\r\n    const aceLanguage = aceLanguages.find(\r\n      (language) => language.id == test.id_limbaj_programare\r\n    );\r\n    if (aceLanguage) {\r\n      setLanguage(aceLanguage.name);\r\n    }\r\n    const defaultCode = DefaultCode.find(\r\n      (item) => item.id == test.id_limbaj_programare\r\n    );\r\n    if (defaultCode) {\r\n      setCodeEditorText(defaultCode.code);\r\n    }\r\n  }, []);\r\n\r\n  //When judgeResponse change\r\n  useEffect(() => {\r\n    console.log(\"judge response changed\");\r\n    if (judgeResponse) {\r\n      setStdout(decode(judgeResponse.stdout));\r\n      setTestCaseStatus(judgeResponse.status.description);\r\n      setCompileError(decode(judgeResponse.compile_output));\r\n    }\r\n  }, [judgeResponse]);\r\n\r\n  function executaBtnHandler() {\r\n    if (!isConsoleLoading) {\r\n      console.log(\"buton executa apasat\");\r\n      const assignment = {\r\n        id: test.id,\r\n        questionId: currentQuestion.id,\r\n        source_cod: encode(codeEditorText),\r\n        language_id: test.id_limbaj_programare,\r\n        stdin: \"\",\r\n      };\r\n      console.log(assignment);\r\n      getJudgeAssessment(assignment);\r\n    }\r\n  }\r\n\r\n  const getJudgeAssessment = async (test) => {\r\n    console.log(\"getting assessment from judge...\");\r\n    setIsConsoleLoading(true);\r\n    const judgeData = {\r\n      source_code: test.source_cod,\r\n      language_id: test.language_id,\r\n      stdin: test.stdin,\r\n    };\r\n    // console.log(test.source_cod);\r\n    const response = await axios({\r\n      method: \"post\",\r\n      url: `${rootURL}/questions/assess/${test.questionId}/${test.id}/${user.id}`,\r\n      data: judgeData,\r\n    }).catch((err) => console.log(err));\r\n\r\n    if (response) {\r\n      console.log(response.data);\r\n      setJudgeResponse(response.data);\r\n    }\r\n    setIsConsoleLoading(false);\r\n  };\r\n\r\n  function questionChanged(question) {\r\n    setCurrentQuestion(question);\r\n  }\r\n\r\n  function codeEditorTextChanged(text) {\r\n    const index = currentQuestion.id;\r\n    let temp_state = [...codeEditorText];\r\n\r\n    if (codeEditorText.length > index) {\r\n      temp_state[index] = text;\r\n    } else {\r\n      temp_state.push(text);\r\n    }\r\n    setCodEditorText(temp_state);\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(currentQuestion);\r\n  }, [currentQuestion]);\r\n\r\n  if (isLoading) {\r\n    return <Loader></Loader>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Wrapper>\r\n        <ProblemCard>\r\n          <QuestionSlider\r\n            questions={testQuestions}\r\n            callback={questionChanged}\r\n          ></QuestionSlider>\r\n          {/* {testQuestions.map((question) => (\r\n            <h3>{question.descriere}</h3>\r\n          ))}\r\n          <h3>{testQuestions[0].descriere}</h3> */}\r\n        </ProblemCard>\r\n        <EditorCard>\r\n          <CodeEditor\r\n            language={language}\r\n            callback={codeEditorTextChanged}\r\n          ></CodeEditor>\r\n        </EditorCard>\r\n        <ExecuteBtn primary onClick={executaBtnHandler}>\r\n          Executa\r\n        </ExecuteBtn>\r\n        <ConsoleCard>\r\n          <div>\r\n            {\" \"}\r\n            <p>Output:</p>\r\n            {!isConsoleLoading && stdout && <p>{stdout}</p>}\r\n            {isConsoleLoading && <p>Loading...</p>}\r\n          </div>\r\n          <div>\r\n            <p>Test Case Status:</p>\r\n            {!isConsoleLoading && testCaseStatus && <p>{testCaseStatus}</p>}\r\n            {isConsoleLoading && <p>Loading...</p>}\r\n          </div>\r\n          {!isConsoleLoading && compileError && (\r\n            <div>\r\n              <div>\r\n                <p>Compile Error:</p>\r\n              </div>\r\n              <p>{compileError}</p>\r\n            </div>\r\n          )}\r\n        </ConsoleCard>\r\n        <SubmitBtn secondary>Trimite</SubmitBtn>\r\n      </Wrapper>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.section`\r\n  display: grid;\r\n  height: 100%;\r\n  width: 100%;\r\n  max-height: 700px;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  grid-template-rows: repeat(10, 1fr);\r\n  grid-template-areas:\r\n    \"A    B\"\r\n    \"A    B\"\r\n    \"A    B\"\r\n    \"A    B\"\r\n    \"A    B\"\r\n    \"A    B\"\r\n    \"A    D\"\r\n    \"A    C\"\r\n    \"A    C\"\r\n    \"A    E\";\r\n  grid-column-gap: 2em;\r\n`;\r\nconst ProblemCard = styled(Card)`\r\n  grid-area: A;\r\n  overflow: auto;\r\n  margin-left: 2em;\r\n`;\r\nconst EditorCard = styled(Card)`\r\n  grid-area: B;\r\n  margin-right: 2em;\r\n  margin-top: 3em;\r\n  align-items: streched\r\n  justify-items : streched;\r\n  \r\n`;\r\nconst ConsoleCard = styled(Card)`\r\n  grid-area: C;\r\n  margin-right: 2em;\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  overflow: auto;\r\n  flex-wrap: wrap;\r\n`;\r\nconst ExecuteBtn = styled(Button)`\r\n  height: 50px;\r\n  width: 150px;\r\n  grid-are: D;\r\n  justify-self: start;\r\n  align-self: center;\r\n`;\r\nconst SubmitBtn = styled(Button)`\r\n  height: 50px;\r\n  width: 150px;\r\n  grid-are: E;\r\n  justify-self: end;\r\n  align-self: center;\r\n  margin-right: 2em;\r\n`;\r\n\r\nexport default TakeTest;\r\n"]},"metadata":{},"sourceType":"module"}