{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joseph\\\\Desktop\\\\BcThesis\\\\licenta_aplicatie\\\\code-puls\\\\client\\\\src\\\\context\\\\context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst rootURL = \"http://localhost:5000/api\";\nconst AppContext = /*#__PURE__*/React.createContext();\n\nconst AppProvider = ({\n  children\n}) => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [tests, setTests] = useState([]);\n\n  const getStudentTests = async () => {\n    setIsLoading(true);\n    const response = await axios.get(`${rootURL}/students/1/due`).catch(err => console.log(err));\n\n    if (response) {\n      setTests(response.data);\n    }\n\n    setIsLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      tests,\n      isLoading,\n      getStudentTests\n    },\n    children: [children, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 12\n  }, this);\n};\n\n_s(AppProvider, \"WdWT4vaqfBNw+1xbMpYgc9Vrlag=\");\n\n_c = AppProvider;\nexport { AppContext, AppProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"sources":["C:/Users/Joseph/Desktop/BcThesis/licenta_aplicatie/code-puls/client/src/context/context.js"],"names":["React","useState","useEffect","axios","rootURL","AppContext","createContext","AppProvider","children","isLoading","setIsLoading","tests","setTests","getStudentTests","response","get","catch","err","console","log","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,MAAMC,OAAO,GAAG,2BAAhB;AAEA,MAAMC,UAAU,gBAAGL,KAAK,CAACM,aAAN,EAAnB;;AACA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAAA;;AAChC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;;AAGA,QAAOY,eAAe,GAAG,YAAY;AACjCH,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,UAAMI,QAAQ,GAAI,MAAMX,KAAK,CAACY,GAAN,CAAW,GAAEX,OAAQ,iBAArB,EACvBY,KADuB,CAChBC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CADQ,CAAxB;;AAGA,QAAGH,QAAH,EAAa;AACTF,MAAAA,QAAQ,CAACE,QAAQ,CAACM,IAAV,CAAR;AACH;;AACDV,IAAAA,YAAY,CAAC,KAAD,CAAZ;AAEH,GAVD;;AAiBA,sBAAO,QAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAD;AAAQF,MAAAA,SAAR;AAAmBI,MAAAA;AAAnB,KAA5B;AAAA,eAAkEL,QAAlE;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAvBD;;GAAMD,W;;KAAAA,W;AAyBN,SAAQF,UAAR,EAAoBE,WAApB","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport axios from \"axios\";\r\nconst rootURL = \"http://localhost:5000/api\";\r\n\r\nconst AppContext = React.createContext();\r\nconst AppProvider = ({children}) => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [tests, setTests] = useState([]); \r\n\r\n\r\n    const  getStudentTests = async () => {\r\n        setIsLoading(true);\r\n        const response  = await axios.get(`${rootURL}/students/1/due`)\r\n        .catch((err) => console.log(err));\r\n\r\n        if(response) {\r\n            setTests(response.data);\r\n        }\r\n        setIsLoading(false);\r\n\r\n    }  \r\n\r\n  \r\n\r\n\r\n\r\n\r\n    return <AppContext.Provider value={{tests, isLoading, getStudentTests}}>{children} </AppContext.Provider>\r\n}\r\n\r\nexport {AppContext, AppProvider}"]},"metadata":{},"sourceType":"module"}