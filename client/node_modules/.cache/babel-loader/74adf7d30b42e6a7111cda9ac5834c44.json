{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joseph\\\\Desktop\\\\BcThesis\\\\licenta_aplicatie\\\\code-puls\\\\client\\\\src\\\\context\\\\context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContext = /*#__PURE__*/React.createContext();\n\nconst AppProvider = ({\n  children\n}) => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [tests, setTests] = useState(\"tests\");\n  const [grades, setGrades] = useState(\"grades\");\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      tests,\n      grades\n    },\n    children: [children, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 12\n  }, this);\n};\n\n_s(AppProvider, \"9YgZ+HWAjW7FBQM51Catvv9yUKg=\");\n\n_c = AppProvider;\nexport { AppContext, AppProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"sources":["C:/Users/Joseph/Desktop/BcThesis/licenta_aplicatie/code-puls/client/src/context/context.js"],"names":["React","useState","useEffect","axios","AppContext","createContext","AppProvider","children","isLoading","setIsLoading","tests","setTests","grades","setGrades"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,UAAU,gBAAGJ,KAAK,CAACK,aAAN,EAAnB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAAA;;AAChC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,OAAD,CAAlC;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,QAAD,CAApC;AACA,sBAAO,QAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAE;AAACS,MAAAA,KAAD;AAAQE,MAAAA;AAAR,KAA5B;AAAA,eAA8CL,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CALD;;GAAMD,W;;KAAAA,W;AAON,SAAQF,UAAR,EAAoBE,WAApB","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport axios from \"axios\";\r\n\r\nconst AppContext = React.createContext();\r\n\r\nconst AppProvider = ({children}) => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [tests, setTests] = useState(\"tests\");\r\n    const [grades, setGrades] = useState(\"grades\");\r\n    return <AppContext.Provider value={{tests, grades}}>{children} </AppContext.Provider>\r\n}\r\n\r\nexport {AppContext, AppProvider}"]},"metadata":{},"sourceType":"module"}