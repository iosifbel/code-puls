{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joseph\\\\Desktop\\\\BcThesis\\\\licenta_aplicatie\\\\code-puls\\\\client\\\\src\\\\components\\\\testsGrid.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport { AppContext } from \"../context/context\";\nimport { Card } from \"../components/defaultComponents\";\nimport { Route, Link, useRouteMatch, withRouter } from \"react-router-dom\";\nimport theme from \"../Assets/theme\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst rootURL = \"http://localhost:5000/api\";\n\nfunction TestsGrid(props) {\n  _s();\n\n  const [tests, setTests] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const auth = useContext(AuthContext);\n  const {\n    authState\n  } = auth;\n  console.log(authState); // const { authState } = auth;\n  // const user = authState.userInfo;\n\n  const getStudentTests = async user => {\n    console.log(\"getting tests from db..\");\n    setIsLoading(true);\n    const response = await axios.get(`${rootURL}/students/${user.id}/due`).catch(err => console.log(err));\n\n    if (response) {\n      setTests(response.data);\n    }\n\n    setIsLoading(false);\n  };\n\n  const {\n    setShowHeader\n  } = React.useContext(AppContext);\n  const {\n    url\n  } = useRouteMatch(); // setShowHeader(false);\n  // useEffect(() => {\n  //   getStudentTests();\n  //   console.log(tests);\n  // }, []);\n\n  const testClicked = e => {\n    console.log(\"clicked card with id \" + e.target.id);\n    const clickedTest = tests.find(test => test.id == e.target.id);\n    props.parentCallBack(clickedTest); // e.preventDefault();\n  };\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Tests are loading..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [\" \", tests.map(test => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `${url}/takeTest`,\n        onClick: testClicked,\n        children: /*#__PURE__*/_jsxDEV(StyledCard, {\n          id: test.id,\n          children: test.titlu\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)\n    }, test.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TestsGrid, \"s1oOX4/cJgq/qwpiVFMYStR2C2M=\", false, function () {\n  return [useRouteMatch];\n});\n\n_c = TestsGrid;\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  width: 50%;\n  a {\n    text-decoration: none;\n  }\n  position: fixed;\n  // // align-items: center;\n  // // justify-content: center;\n  // font-size: 1rem;\n  background: ${theme.mainGrey};\n  margin-left: 30%;\n  margin-top: 10em;\n  overflow-y: auto;\n`;\n_c2 = Wrapper;\nconst TestsContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  font-size: 1rem;\n`;\nconst StyledCard = styled(Card)`\n  // width: 20vw;\n  margin-top: 1%;\n  margin-bottom: 1%;\n`;\n_c3 = StyledCard;\nexport default _c4 = withRouter(TestsGrid);\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"TestsGrid\");\n$RefreshReg$(_c2, \"Wrapper\");\n$RefreshReg$(_c3, \"StyledCard\");\n$RefreshReg$(_c4, \"%default%\");","map":{"version":3,"sources":["C:/Users/Joseph/Desktop/BcThesis/licenta_aplicatie/code-puls/client/src/components/testsGrid.js"],"names":["React","useEffect","useState","useContext","axios","styled","AppContext","Card","Route","Link","useRouteMatch","withRouter","theme","AuthContext","rootURL","TestsGrid","props","tests","setTests","isLoading","setIsLoading","auth","authState","console","log","getStudentTests","user","response","get","id","catch","err","data","setShowHeader","url","testClicked","e","target","clickedTest","find","test","parentCallBack","map","titlu","Wrapper","div","mainGrey","TestsContainer","StyledCard"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { AppContext } from \"../context/context\";\r\nimport { Card } from \"../components/defaultComponents\";\r\nimport { Route, Link, useRouteMatch, withRouter } from \"react-router-dom\";\r\nimport theme from \"../Assets/theme\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\n\r\nconst rootURL = \"http://localhost:5000/api\";\r\n\r\nfunction TestsGrid(props) {\r\n  const [tests, setTests] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const auth = useContext(AuthContext);\r\n  const { authState } = auth;\r\n  console.log(authState);\r\n  // const { authState } = auth;\r\n  // const user = authState.userInfo;\r\n\r\n  const getStudentTests = async (user) => {\r\n    console.log(\"getting tests from db..\");\r\n    setIsLoading(true);\r\n    const response = await axios\r\n      .get(`${rootURL}/students/${user.id}/due`)\r\n      .catch((err) => console.log(err));\r\n\r\n    if (response) {\r\n      setTests(response.data);\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const { setShowHeader } = React.useContext(AppContext);\r\n  const { url } = useRouteMatch();\r\n  // setShowHeader(false);\r\n  // useEffect(() => {\r\n  //   getStudentTests();\r\n  //   console.log(tests);\r\n  // }, []);\r\n\r\n  const testClicked = (e) => {\r\n    console.log(\"clicked card with id \" + e.target.id);\r\n    const clickedTest = tests.find((test) => test.id == e.target.id);\r\n    props.parentCallBack(clickedTest);\r\n    // e.preventDefault();\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Wrapper>\r\n        {\" \"}\r\n        <div>\r\n          <h1>Tests are loading..</h1>\r\n        </div>\r\n      </Wrapper>\r\n    );\r\n  }\r\n  return (\r\n    <Wrapper>\r\n      {\" \"}\r\n      {/* <div> */}\r\n      {/* <h1>Test programate</h1> */}\r\n      {/* <TestsContainer> */}\r\n      {tests.map((test) => (\r\n        <div key={test.id}>\r\n          <Link to={`${url}/takeTest`} onClick={testClicked}>\r\n            <StyledCard id={test.id}>{test.titlu}</StyledCard>\r\n          </Link>\r\n        </div>\r\n      ))}\r\n      {/* </TestsContainer> */}\r\n      {/* </div> */}\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  width: 50%;\r\n  a {\r\n    text-decoration: none;\r\n  }\r\n  position: fixed;\r\n  // // align-items: center;\r\n  // // justify-content: center;\r\n  // font-size: 1rem;\r\n  background: ${theme.mainGrey};\r\n  margin-left: 30%;\r\n  margin-top: 10em;\r\n  overflow-y: auto;\r\n`;\r\n\r\nconst TestsContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst StyledCard = styled(Card)`\r\n  // width: 20vw;\r\n  margin-top: 1%;\r\n  margin-bottom: 1%;\r\n`;\r\n\r\nexport default withRouter(TestsGrid);\r\n"]},"metadata":{},"sourceType":"module"}