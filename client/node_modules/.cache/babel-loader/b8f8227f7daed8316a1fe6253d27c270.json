{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joseph\\\\Desktop\\\\BcThesis\\\\licenta_aplicatie\\\\code-puls\\\\client\\\\src\\\\components\\\\TestsTable.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from \"react\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport styled from \"styled-components\";\nimport theme from \"../Assets/theme\";\nimport { Card } from \"./defaultComponents\";\nimport { AppContext, AuthContext } from \"../context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledTableCell = withStyles(() => ({\n  head: {\n    backgroundColor: theme.Grey1,\n    color: \"black\"\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\nconst StyledTableRow = withStyles(() => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.mainGrey\n    }\n  }\n}))(TableRow);\nconst useStyles = makeStyles({\n  table: {// minWidth: 500,\n    // marginInline: 200,\n    // minHeight: 200,\n  }\n});\nconst studentColumns = [\"Titlu\", \"Materie\", \"Limbaj\", \"Deadline\"];\nconst teacherColumns = [\"Nume\", \"Prenume\", \"Grupa\", \"Titlu Test\", \"Materie\", \"Limbaj\", \"Deadline\"];\nconst studentDataColumns = [\"titlu\", \"id_materie\", \"limbaj\", \"deadline\"];\nconst teacherDataColumns = [\"nume\", \"prenume\", \"grupa\", \"titlu\", \"id_materie\", \"limbaj\", \"deadline\"];\n\nfunction TestsTable(props) {\n  _s();\n\n  const user = useContext(AuthContext).authState.userInfo;\n  const redirectURL = user.tip === \"student\" ? \"tests/takeTest\" : \"tests/evaluateTest\";\n  const [columns, setColumns] = useState([]);\n  const [dataColumns, setDataColumns] = useState([]);\n  const {\n    judge0Languges\n  } = useContext(AppContext);\n  const classes = useStyles();\n\n  function rowClicked(e) {\n    props.callback(e.target.id);\n    e.preventDefault();\n  }\n\n  useEffect(() => {\n    if (user.tip === \"student\") {\n      setColumns(studentColumns);\n      setDataColumns(studentDataColumns);\n    } else {\n      setColumns(teacherColumns);\n      setDataColumns(teacherDataColumns);\n    }\n\n    console.log(props.data);\n  }, [props.data]);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(StyledCard, {\n      children: [/*#__PURE__*/_jsxDEV(TableTitle, {\n        children: user.type === \"student\" ? \"Teste programate\" : \"Teste de corectat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        className: \"tableContainer\",\n        children: [/*#__PURE__*/_jsxDEV(Table, {\n          className: classes.table,\n          \"aria-label\": \"customized table\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: columns.map((item, index) => /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: index !== 0 ? \"center\" : \"\",\n              children: item\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: props.data.map((item, index) => /*#__PURE__*/_jsxDEV(StyledTableRow, {\n            children: dataColumns.map((column, cindex) => /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              children: item[column]\n            }, cindex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 19\n            }, this))\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TestsTable, \"cjAW3I5ouGgxB2iVU7MHn2XYWvc=\", false, function () {\n  return [useStyles];\n});\n\n_c = TestsTable;\nconst TableTitle = styled.div`\n  font-style: \"Roboto\";\n  color: ${theme.mainBlack};\n  font-size: 1.3rem;\n  font-weight: 500;\n  margin: 1rem;\n  margin-left: 2rem;\n`;\n_c2 = TableTitle;\nconst StyledCard = styled(Card)`\n  padding: 0;\n`;\n_c3 = StyledCard;\nconst Wrapper = styled.div`\n  //   width: 100%;\n  //   height: 100%;\n  .tableContainer {\n    max-width: 50vw;\n  }\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-left: 20vw;\n  margin-top: 20vh;\n`;\n_c4 = Wrapper;\nexport default TestsTable;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"TestsTable\");\n$RefreshReg$(_c2, \"TableTitle\");\n$RefreshReg$(_c3, \"StyledCard\");\n$RefreshReg$(_c4, \"Wrapper\");","map":{"version":3,"sources":["C:/Users/Joseph/Desktop/BcThesis/licenta_aplicatie/code-puls/client/src/components/TestsTable.js"],"names":["useState","useEffect","useContext","withStyles","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","styled","theme","Card","AppContext","AuthContext","StyledTableCell","head","backgroundColor","Grey1","color","body","fontSize","StyledTableRow","root","mainGrey","useStyles","table","studentColumns","teacherColumns","studentDataColumns","teacherDataColumns","TestsTable","props","user","authState","userInfo","redirectURL","tip","columns","setColumns","dataColumns","setDataColumns","judge0Languges","classes","rowClicked","e","callback","target","id","preventDefault","console","log","data","type","map","item","index","column","cindex","TableTitle","div","mainBlack","StyledCard","Wrapper"],"mappings":"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","sourcesContent":["import { useState, useEffect, useContext } from \"react\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport styled from \"styled-components\";\r\nimport theme from \"../Assets/theme\";\r\nimport { Card } from \"./defaultComponents\";\r\nimport { AppContext, AuthContext } from \"../context\";\r\n\r\nconst StyledTableCell = withStyles(() => ({\r\n  head: {\r\n    backgroundColor: theme.Grey1,\r\n    color: \"black\",\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles(() => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.mainGrey,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    // minWidth: 500,\r\n    // marginInline: 200,\r\n    // minHeight: 200,\r\n  },\r\n});\r\n\r\nconst studentColumns = [\"Titlu\", \"Materie\", \"Limbaj\", \"Deadline\"];\r\nconst teacherColumns = [\r\n  \"Nume\",\r\n  \"Prenume\",\r\n  \"Grupa\",\r\n  \"Titlu Test\",\r\n  \"Materie\",\r\n  \"Limbaj\",\r\n  \"Deadline\",\r\n];\r\n\r\nconst studentDataColumns = [\"titlu\", \"id_materie\", \"limbaj\", \"deadline\"];\r\n\r\nconst teacherDataColumns = [\r\n  \"nume\",\r\n  \"prenume\",\r\n  \"grupa\",\r\n  \"titlu\",\r\n  \"id_materie\",\r\n  \"limbaj\",\r\n  \"deadline\",\r\n];\r\n\r\nfunction TestsTable(props) {\r\n  const user = useContext(AuthContext).authState.userInfo;\r\n  const redirectURL =\r\n    user.tip === \"student\" ? \"tests/takeTest\" : \"tests/evaluateTest\";\r\n  const [columns, setColumns] = useState([]);\r\n  const [dataColumns, setDataColumns] = useState([]);\r\n  const { judge0Languges } = useContext(AppContext);\r\n  const classes = useStyles();\r\n\r\n  function rowClicked(e) {\r\n    props.callback(e.target.id);\r\n    e.preventDefault();\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (user.tip === \"student\") {\r\n      setColumns(studentColumns);\r\n      setDataColumns(studentDataColumns);\r\n    } else {\r\n      setColumns(teacherColumns);\r\n      setDataColumns(teacherDataColumns);\r\n    }\r\n    console.log(props.data);\r\n  }, [props.data]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <StyledCard>\r\n        <TableTitle>\r\n          {user.type === \"student\" ? \"Teste programate\" : \"Teste de corectat\"}\r\n        </TableTitle>\r\n        <TableContainer className=\"tableContainer\">\r\n          <Table\r\n            className={classes.table}\r\n            aria-label=\"customized table\"\r\n          ></Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((item, index) => (\r\n                <StyledTableCell\r\n                  key={index}\r\n                  align={index !== 0 ? \"center\" : \"\"}\r\n                >\r\n                  {item}\r\n                </StyledTableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {props.data.map((item, index) => (\r\n              <StyledTableRow key={index}>\r\n                {dataColumns.map((column, cindex) => (\r\n                  <StyledTableCell key={cindex}>{item[column]}</StyledTableCell>\r\n                ))}\r\n                {/* <StyledTableCell id={item.id} onClick={rowClicked}>\r\n                  <a href=\"tests/takeTest\" onClick={(e) => e.preventDefault()}>\r\n                    {item.titlu}\r\n                  </a>\r\n                </StyledTableCell>\r\n\r\n                <StyledTableCell align=\"center\">\r\n                  {item.id_materie}\r\n                </StyledTableCell>\r\n                <StyledTableCell align=\"center\">\r\n                  {getLanguage(item.id_limbaj_programare, judge0Languges)}\r\n                </StyledTableCell>\r\n                <StyledTableCell align=\"center\">\r\n                  {parseDateTime(item.deadline)}\r\n                </StyledTableCell> */}\r\n              </StyledTableRow>\r\n            ))}\r\n          </TableBody>\r\n        </TableContainer>\r\n      </StyledCard>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst TableTitle = styled.div`\r\n  font-style: \"Roboto\";\r\n  color: ${theme.mainBlack};\r\n  font-size: 1.3rem;\r\n  font-weight: 500;\r\n  margin: 1rem;\r\n  margin-left: 2rem;\r\n`;\r\n\r\nconst StyledCard = styled(Card)`\r\n  padding: 0;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  //   width: 100%;\r\n  //   height: 100%;\r\n  .tableContainer {\r\n    max-width: 50vw;\r\n  }\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-left: 20vw;\r\n  margin-top: 20vh;\r\n`;\r\n\r\nexport default TestsTable;\r\n"]},"metadata":{},"sourceType":"module"}