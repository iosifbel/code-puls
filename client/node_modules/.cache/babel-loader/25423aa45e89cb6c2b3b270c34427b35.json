{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joseph\\\\Desktop\\\\BcThesis\\\\licenta_aplicatie\\\\code-puls\\\\client\\\\src\\\\pages\\\\addTest.js\",\n    _s = $RefreshSig$();\n\nimport styled from \"styled-components\";\nimport { Form, Col } from \"react-bootstrap\";\nimport { AppContext } from \"../context/context\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button } from \"../components/defaultComponents\";\nimport theme from \"../Assets/theme\";\nimport { Loader } from \"../components\";\nimport axios from \"axios\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst rootURL = \"http://localhost:5000/api\";\n\nfunction AddTest() {\n  _s();\n\n  const {\n    judge0Languges,\n    isLoading,\n    setIsLoading\n  } = React.useContext(AppContext);\n  const [subjects, setSubjects] = useState([]);\n  const [groups, setGroups] = useState();\n  const [areGroupsLoading, setAreGroupsLoading] = useState(true); //form controlled input fields\n\n  const [selectedSubject, setSelectedSubject] = useState(-1);\n  const [selectedGroup, setSelectedGroup] = useState();\n  const [code, setCode] = useState();\n  const [expectedAnswer, setExpectedAnswer] = useState();\n  const [date, setDate] = useState(new Date()); //onMount\n\n  useEffect(() => {\n    getSubjects();\n  }, []);\n\n  function subjectChanged(e) {\n    let id = e.target.value;\n    setSelectedSubject(e.target.value);\n\n    if (id > 0) {\n      getGroups(e.target.value);\n    }\n  }\n\n  async function getGroups(subjectId) {\n    console.log(\"getting groups from db...\");\n    setAreGroupsLoading(true);\n    const response = await axios({\n      method: \"get\",\n      url: `${rootURL}/subjects/${subjectId}/groups`\n    }).catch(err => console.log(err));\n\n    if (response) {\n      console.log(response.data);\n      setGroups(response.data);\n    }\n\n    setAreGroupsLoading(false);\n  }\n\n  async function getSubjects() {\n    console.log(\"getting subjects from db...\");\n    setIsLoading(true);\n    const response = await axios({\n      method: \"get\",\n      url: `${rootURL}/teachers/1/subjects`\n    }).catch(err => console.log(err));\n\n    if (response) {\n      console.log(response.data);\n      setSubjects(response.data);\n    }\n\n    setIsLoading(false);\n  }\n\n  if (isLoading) {\n    console.log(\"is loading..\");\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(FormTitle, {\n      children: \"Adaug\\u0103 Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          controlId: \"subjects\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Materie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            onChange: e => subjectChanged(e),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: -1,\n              children: \"Selecteaz\\u0103\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 19\n            }, this), subjects.map(subject => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: subject.id,\n              id: subject.id,\n              children: subject.descriere\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 23\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          controlId: \"StudentGroups\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Grupa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            children: [areGroupsLoading && selectedSubject == -1 && /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"nicio grupa pentru materia selectat\\u0103\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 21\n            }, this), !areGroupsLoading && groups && selectedSubject > 0 && groups.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: item.grupa,\n              children: item.grupa\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 23\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"programmingLanguages\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Limbaj de programare\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"select\",\n          children: judge0Languges.map(language => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: language.name,\n            children: language.name\n          }, language.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"Problem\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Problem\\u0103\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"textarea\",\n          rows: 10\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            placeholder: \"Rezultat a\\u0219teptat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(DatePicker, {\n            wrapperClassName: \"datepicker\",\n            selected: date,\n            onChange: date => setDate(date),\n            showTimeSelect: true,\n            timeFormat: \"HH:mm\",\n            timeIntervals: 15,\n            timeCaption: \"Timp\",\n            dateFormat: \"MMMM d, yyyy h:mm aa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n        className: \"justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(SendBtn, {\n          primary: true,\n          children: \"Trimite\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddTest, \"rPjovSdCFobxfMgFTodV4A7+OZI=\");\n\n_c = AddTest;\nconst SendBtn = styled(Button)`\nbackground: ${theme.mainBlue};\ncolor: white;\nmargin-top: 2em;\n&:hover {\n  background: ${theme.mainBlue};;\n  color: white;\n  font-weight: normal;\n}\n\n`;\n_c2 = SendBtn;\nconst FormTitle = styled.p`\n  display: flex;\n  justify-content: center;\n  font-size: 2em;\n  margin-bottom : 2em;\n`;\n_c3 = FormTitle;\nconst Wrapper = styled.section`\ndisplay: flex;\nflex-direction: column;\n\n\nmargin-left: 20%;\nheight: 100%; \nmargin-top : 5%;\nflex-wrap: nowrap\n\ndiv {\n  width: 100%\n  align-items: center;\n}\n\n\n`;\n_c4 = Wrapper;\nexport default AddTest;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"AddTest\");\n$RefreshReg$(_c2, \"SendBtn\");\n$RefreshReg$(_c3, \"FormTitle\");\n$RefreshReg$(_c4, \"Wrapper\");","map":{"version":3,"sources":["C:/Users/Joseph/Desktop/BcThesis/licenta_aplicatie/code-puls/client/src/pages/addTest.js"],"names":["styled","Form","Col","AppContext","React","useState","useEffect","Button","theme","Loader","axios","DatePicker","rootURL","AddTest","judge0Languges","isLoading","setIsLoading","useContext","subjects","setSubjects","groups","setGroups","areGroupsLoading","setAreGroupsLoading","selectedSubject","setSelectedSubject","selectedGroup","setSelectedGroup","code","setCode","expectedAnswer","setExpectedAnswer","date","setDate","Date","getSubjects","subjectChanged","e","id","target","value","getGroups","subjectId","console","log","response","method","url","catch","err","data","map","subject","descriere","item","grupa","language","name","SendBtn","mainBlue","FormTitle","p","Wrapper","section"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,SAAQC,IAAR,EAAcC,GAAd,QAAwB,iBAAxB;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,MAAR,QAAqB,iCAArB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,4CAAP;;AAKA,MAAMC,OAAO,GAAG,2BAAhB;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AACjB,QAAM;AAACC,IAAAA,cAAD;AAAiBC,IAAAA,SAAjB;AAA4BC,IAAAA;AAA5B,MAA4CZ,KAAK,CAACa,UAAN,CAAiBd,UAAjB,CAAlD;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACe,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,EAApC;AACA,QAAM,CAACiB,gBAAD,EAAmBC,mBAAnB,IAA0ClB,QAAQ,CAAC,IAAD,CAAxD,CAJiB,CAMjB;;AACA,QAAM,CAACmB,eAAD,EAAkBC,kBAAlB,IAAwCpB,QAAQ,CAAC,CAAC,CAAF,CAAtD;AACA,QAAM,CAACqB,aAAD,EAAgBC,gBAAhB,IAAoCtB,QAAQ,EAAlD;AACA,QAAM,CAACuB,IAAD,EAAOC,OAAP,IAAkBxB,QAAQ,EAAhC;AACA,QAAM,CAACyB,cAAD,EAAiBC,iBAAjB,IAAsC1B,QAAQ,EAApD;AACA,QAAM,CAAC2B,IAAD,EAAOC,OAAP,IAAkB5B,QAAQ,CAAC,IAAI6B,IAAJ,EAAD,CAAhC,CAXiB,CAajB;;AACA5B,EAAAA,SAAS,CAAC,MAAM;AACd6B,IAAAA,WAAW;AACZ,GAFQ,EAEP,EAFO,CAAT;;AAIA,WAASC,cAAT,CAAyBC,CAAzB,EAA2B;AACzB,QAAIC,EAAE,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAlB;AACAf,IAAAA,kBAAkB,CAACY,CAAC,CAACE,MAAF,CAASC,KAAV,CAAlB;;AACA,QAAGF,EAAE,GAAG,CAAR,EAAW;AACPG,MAAAA,SAAS,CAACJ,CAAC,CAACE,MAAF,CAASC,KAAV,CAAT;AACH;AAEF;;AAID,iBAAeC,SAAf,CAAyBC,SAAzB,EAAoC;AAClCC,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACArB,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACA,UAAMsB,QAAQ,GAAI,MAAMnC,KAAK,CAAC;AAC1BoC,MAAAA,MAAM,EAAG,KADiB;AAE1BC,MAAAA,GAAG,EAAI,GAAEnC,OAAQ,aAAY8B,SAAU;AAFb,KAAD,CAAL,CAKvBM,KALuB,CAKhBC,GAAD,IAASN,OAAO,CAACC,GAAR,CAAYK,GAAZ,CALQ,CAAxB;;AAOA,QAAGJ,QAAH,EAAa;AACTF,MAAAA,OAAO,CAACC,GAAR,CAAYC,QAAQ,CAACK,IAArB;AACA7B,MAAAA,SAAS,CAACwB,QAAQ,CAACK,IAAV,CAAT;AACH;;AACD3B,IAAAA,mBAAmB,CAAC,KAAD,CAAnB;AAED;;AAED,iBAAeY,WAAf,GAA6B;AAC3BQ,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACA5B,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,UAAM6B,QAAQ,GAAI,MAAMnC,KAAK,CAAC;AAC1BoC,MAAAA,MAAM,EAAG,KADiB;AAE1BC,MAAAA,GAAG,EAAI,GAAEnC,OAAQ;AAFS,KAAD,CAAL,CAKvBoC,KALuB,CAKhBC,GAAD,IAASN,OAAO,CAACC,GAAR,CAAYK,GAAZ,CALQ,CAAxB;;AAOA,QAAGJ,QAAH,EAAa;AACTF,MAAAA,OAAO,CAACC,GAAR,CAAYC,QAAQ,CAACK,IAArB;AACA/B,MAAAA,WAAW,CAAC0B,QAAQ,CAACK,IAAV,CAAX;AACH;;AACDlC,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;;AAED,MAAGD,SAAH,EAAa;AACX4B,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,wBAAO,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE,QAAC,OAAD;AAAA,4BAEI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,IAAD;AAAA,8BACE,QAAC,IAAD,CAAM,GAAN;AAAA,gCAEI,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,EAAE,EAAE1C,GAAhB;AAAqB,UAAA,SAAS,EAAC,UAA/B;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,YAAA,EAAE,EAAC,QADL;AAEE,YAAA,QAAQ,EAAGmC,CAAC,IAAID,cAAc,CAACC,CAAD,CAFhC;AAAA,oCAGE;AAAQ,cAAA,KAAK,EAAE,CAAC,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,EAIGnB,QAAQ,CAACiC,GAAT,CAAcC,OAAD,iBACV;AACA,cAAA,KAAK,EAAEA,OAAO,CAACd,EADf;AAEA,cAAA,EAAE,EAAEc,OAAO,CAACd,EAFZ;AAAA,wBAGKc,OAAO,CAACC;AAHb;AAAA;AAAA;AAAA;AAAA,oBADH,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAmBI,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,EAAE,EAAEnD,GAAhB;AAAqB,UAAA,SAAS,EAAC,eAA/B;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AAAc,YAAA,EAAE,EAAC,QAAjB;AAAA,uBACGoB,gBAAgB,IAAIE,eAAe,IAAI,CAAC,CAAxC,iBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,EAIG,CAACF,gBAAD,IAAqBF,MAArB,IAA+BI,eAAe,GAAG,CAAjD,IACCJ,MAAM,CAAC+B,GAAP,CAAYG,IAAD,iBACT;AAAQ,cAAA,KAAK,EAAEA,IAAI,CAACC,KAApB;AAAA,wBAA4BD,IAAI,CAACC;AAAjC;AAAA;AAAA;AAAA;AAAA,oBADF,CALJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAuCE,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,sBAAtB;AAAA,gCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,EAAE,EAAC,QAAjB;AAAA,oBACGzC,cAAc,CAACqC,GAAf,CAAoBK,QAAD,iBAClB;AAAQ,YAAA,KAAK,EAAEA,QAAQ,CAACC,IAAxB;AAAA,sBAAiDD,QAAQ,CAACC;AAA1D,aAAmCD,QAAQ,CAAClB,EAA5C;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAvCF,eA+CE,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,SAAtB;AAAA,gCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,EAAE,EAAC,UAAjB;AAA4B,UAAA,IAAI,EAAE;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cA/CF,eAmDE,QAAC,IAAD,CAAM,GAAN;AAAA,gCACE,QAAC,GAAD;AAAA,iCAAK,QAAC,IAAD,CAAM,OAAN;AAAc,YAAA,WAAW,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,GAAD;AAAA,iCAEA,QAAC,UAAD;AACE,YAAA,gBAAgB,EAAC,YADnB;AAEE,YAAA,QAAQ,EAAEN,IAFZ;AAGE,YAAA,QAAQ,EAAGA,IAAD,IAAUC,OAAO,CAACD,IAAD,CAH7B;AAIE,YAAA,cAAc,MAJhB;AAKE,YAAA,UAAU,EAAC,OALb;AAME,YAAA,aAAa,EAAE,EANjB;AAOE,YAAA,WAAW,EAAC,MAPd;AAQE,YAAA,UAAU,EAAC;AARb;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAnDF,eAqEE,QAAC,IAAD,CAAM,GAAN;AAAU,QAAA,SAAS,EAAC,wBAApB;AAAA,+BACA,QAAC,OAAD;AAAS,UAAA,OAAO,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cArEF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiFD;;GAtJQnB,O;;KAAAA,O;AA0JT,MAAM6C,OAAO,GAAG1D,MAAM,CAACO,MAAD,CAAS;AAC/B,cAAcC,KAAK,CAACmD,QAAS;AAC7B;AACA;AACA;AACA,gBAAgBnD,KAAK,CAACmD,QAAS;AAC/B;AACA;AACA;AACA;AACA,CAVA;MAAMD,O;AAYN,MAAME,SAAS,GAAG5D,MAAM,CAAC6D,CAAE;AAC3B;AACA;AACA;AACA;AACA,CALA;MAAMD,S;AAQN,MAAME,OAAO,GAAG9D,MAAM,CAAC+D,OAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhBA;MAAMD,O;AAkBN,eAAejD,OAAf","sourcesContent":["import styled from \"styled-components\";\r\nimport {Form, Col} from \"react-bootstrap\"\r\nimport { AppContext } from \"../context/context\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport {Button} from \"../components/defaultComponents\"\r\nimport theme from \"../Assets/theme\";\r\nimport { Loader } from \"../components\";\r\nimport axios from \"axios\";\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n\r\n\r\n\r\nconst rootURL = \"http://localhost:5000/api\";\r\n\r\nfunction AddTest() {\r\n  const {judge0Languges, isLoading, setIsLoading} = React.useContext(AppContext)\r\n  const [subjects, setSubjects] = useState([]);\r\n  const [groups, setGroups] = useState();\r\n  const [areGroupsLoading, setAreGroupsLoading] = useState(true);\r\n\r\n  //form controlled input fields\r\n  const [selectedSubject, setSelectedSubject] = useState(-1)\r\n  const [selectedGroup, setSelectedGroup] = useState();\r\n  const [code, setCode] = useState();\r\n  const [expectedAnswer, setExpectedAnswer] = useState();\r\n  const [date, setDate] = useState(new Date());\r\n\r\n  //onMount\r\n  useEffect(() => {\r\n    getSubjects();\r\n  },[])\r\n\r\n  function subjectChanged (e){  \r\n    let id = e.target.value;\r\n    setSelectedSubject(e.target.value)\r\n    if(id > 0) {        \r\n        getGroups(e.target.value)\r\n    }  \r\n    \r\n  }\r\n\r\n  \r\n\r\n  async function getGroups(subjectId) {\r\n    console.log(\"getting groups from db...\");\r\n    setAreGroupsLoading(true)\r\n    const response  = await axios({\r\n        method : \"get\",\r\n        url : `${rootURL}/subjects/${subjectId}/groups`,\r\n        \r\n    })\r\n    .catch((err) => console.log(err));\r\n\r\n    if(response) {\r\n        console.log(response.data)  \r\n        setGroups(response.data);      \r\n    }\r\n    setAreGroupsLoading(false);\r\n    \r\n  }\r\n\r\n  async function getSubjects() {\r\n    console.log(\"getting subjects from db...\");\r\n    setIsLoading(true); \r\n    const response  = await axios({\r\n        method : \"get\",\r\n        url : `${rootURL}/teachers/1/subjects`,\r\n        \r\n    })\r\n    .catch((err) => console.log(err));\r\n\r\n    if(response) {\r\n        console.log(response.data)  \r\n        setSubjects(response.data);          \r\n    }\r\n    setIsLoading(false);\r\n  }\r\n  \r\n  if(isLoading){\r\n    console.log(\"is loading..\")\r\n    return(<Loader></Loader>)\r\n  }\r\n  \r\n  return (\r\n    <Wrapper>    \r\n    \r\n        <FormTitle>Adaugă Test</FormTitle>\r\n        <Form>\r\n          <Form.Row>\r\n           \r\n              <Form.Group as={Col} controlId=\"subjects\">\r\n                <Form.Label>Materie</Form.Label>\r\n                <Form.Control \r\n                  as=\"select\" \r\n                  onChange={(e => subjectChanged(e))}>\r\n                  <option value={-1}>Selectează</option>\r\n                  {subjects.map((subject) => (\r\n                      <option \r\n                      value={subject.id} \r\n                      id={subject.id}>\r\n                          {subject.descriere}\r\n                      </option>\r\n                    ))}\r\n                </Form.Control>\r\n              </Form.Group>\r\n          \r\n         \r\n              <Form.Group as={Col} controlId=\"StudentGroups\">\r\n                <Form.Label>Grupa</Form.Label>\r\n                <Form.Control as=\"select\">\r\n                  {areGroupsLoading && selectedSubject == -1 && (\r\n                    <option>nicio grupa pentru materia selectată</option>\r\n                  )}\r\n                  {!areGroupsLoading && groups && selectedSubject > 0 &&(\r\n                    groups.map((item) => (\r\n                      <option value={item.grupa}>{item.grupa}</option>\r\n                    ))\r\n                  )}\r\n                </Form.Control>\r\n              </Form.Group>       \r\n           \r\n          </Form.Row>\r\n\r\n         \r\n\r\n         \r\n          <Form.Group controlId=\"programmingLanguages\">\r\n            <Form.Label>Limbaj de programare</Form.Label>\r\n            <Form.Control as=\"select\" >\r\n              {judge0Languges.map((language) => (\r\n                <option value={language.name} key={language.id}>{language.name}</option>\r\n              ))}\r\n            </Form.Control>\r\n          </Form.Group>         \r\n          <Form.Group controlId=\"Problem\">\r\n            <Form.Label>Problemă</Form.Label>\r\n            <Form.Control as=\"textarea\" rows={10} />\r\n          </Form.Group>\r\n          <Form.Row>\r\n            <Col><Form.Control placeholder=\"Rezultat așteptat\" /></Col>\r\n            <Col>\r\n          \r\n            <DatePicker\r\n              wrapperClassName=\"datepicker\"\r\n              selected={date}                        \r\n              onChange={(date) => setDate(date)}\r\n              showTimeSelect\r\n              timeFormat=\"HH:mm\"\r\n              timeIntervals={15}\r\n              timeCaption=\"Timp\"\r\n              dateFormat=\"MMMM d, yyyy h:mm aa\" \r\n              ></DatePicker>\r\n             \r\n            </Col>\r\n          </Form.Row>\r\n          \r\n          <Form.Row className=\"justify-content-center\">\r\n          <SendBtn primary>Trimite</SendBtn>\r\n          </Form.Row>\r\n          \r\n        </Form>\r\n    \r\n    </Wrapper>\r\n  );\r\n}\r\n\r\n\r\n\r\nconst SendBtn = styled(Button)`\r\nbackground: ${theme.mainBlue};\r\ncolor: white;\r\nmargin-top: 2em;\r\n&:hover {\r\n  background: ${theme.mainBlue};;\r\n  color: white;\r\n  font-weight: normal;\r\n}\r\n\r\n`;\r\n\r\nconst FormTitle = styled.p`\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 2em;\r\n  margin-bottom : 2em;\r\n`;\r\n\r\n\r\nconst Wrapper = styled.section`\r\ndisplay: flex;\r\nflex-direction: column;\r\n\r\n\r\nmargin-left: 20%;\r\nheight: 100%; \r\nmargin-top : 5%;\r\nflex-wrap: nowrap\r\n\r\ndiv {\r\n  width: 100%\r\n  align-items: center;\r\n}\r\n\r\n\r\n`;\r\n\r\nexport default AddTest;\r\n"]},"metadata":{},"sourceType":"module"}