{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joseph\\\\Desktop\\\\BcThesis\\\\licenta_aplicatie\\\\code-puls\\\\client\\\\src\\\\components\\\\CodeEditor.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport AceEditor from \"react-ace\";\nimport { AppContext } from \"../context/context\";\nimport \"ace-builds/src-noconflict/theme-tomorrow\";\nimport \"ace-builds/src-noconflict/ext-language_tools\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CodeEditor(props) {\n  _s();\n\n  require(`ace-builds/src-noconflict/mode-${props.language}`);\n\n  require(`ace-builds/src-noconflict/snippets/${props.language}`);\n\n  const {\n    setCodeEditorText,\n    codeEditorText\n  } = React.useContext(AppContext);\n\n  function onChange(newValue) {\n    setCodeEditorText(newValue);\n    props.callback(newValue);\n  } // useEffect(() => {\n  //   console.log(\"frumos\");\n  //   console.log(props.defaultCode);\n  // }, [props.defaultCode]);\n\n\n  return /*#__PURE__*/_jsxDEV(AceEditor, {\n    width: \"undefined\",\n    height: \"20em\",\n    mode: `${props.language}`,\n    theme: \"tomorrow\",\n    onChange: onChange,\n    name: \"UNIQUE_ID_OF_DIV\",\n    fontSize: 20,\n    defaultValue: props.defaultCode,\n    value: props.defaultCode,\n    showPrintMargin: true,\n    showGutter: true,\n    wrapEnabled: true,\n    highlightActiveLine: false,\n    setOptions: {\n      useWorker: false,\n      enableBasicAutocompletion: true,\n      enableLiveAutocompletion: true,\n      enableSnippets: true,\n      showLineNumbers: true,\n      tabSize: 4,\n      highlightActiveLine: true\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CodeEditor, \"+iDcrE1hsdA8bIrP1NxHSalqUWY=\");\n\n_c = CodeEditor;\nexport default CodeEditor;\n\nvar _c;\n\n$RefreshReg$(_c, \"CodeEditor\");","map":{"version":3,"sources":["C:/Users/Joseph/Desktop/BcThesis/licenta_aplicatie/code-puls/client/src/components/CodeEditor.js"],"names":["React","useEffect","useState","AceEditor","AppContext","CodeEditor","props","require","language","setCodeEditorText","codeEditorText","useContext","onChange","newValue","callback","defaultCode","useWorker","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","highlightActiveLine"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,SAASC,UAAT,QAA2B,oBAA3B;AAEA,OAAO,0CAAP;AACA,OAAO,8CAAP;;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACzBC,EAAAA,OAAO,CAAE,kCAAiCD,KAAK,CAACE,QAAS,EAAlD,CAAP;;AACAD,EAAAA,OAAO,CAAE,sCAAqCD,KAAK,CAACE,QAAS,EAAtD,CAAP;;AAEA,QAAM;AAAEC,IAAAA,iBAAF;AAAqBC,IAAAA;AAArB,MAAwCV,KAAK,CAACW,UAAN,CAAiBP,UAAjB,CAA9C;;AAEA,WAASQ,QAAT,CAAkBC,QAAlB,EAA4B;AAC1BJ,IAAAA,iBAAiB,CAACI,QAAD,CAAjB;AACAP,IAAAA,KAAK,CAACQ,QAAN,CAAeD,QAAf;AACD,GATwB,CAWzB;AACA;AACA;AACA;;;AAEA,sBACE,QAAC,SAAD;AACE,IAAA,KAAK,EAAC,WADR;AAEE,IAAA,MAAM,EAAC,MAFT;AAGE,IAAA,IAAI,EAAG,GAAEP,KAAK,CAACE,QAAS,EAH1B;AAIE,IAAA,KAAK,EAAC,UAJR;AAKE,IAAA,QAAQ,EAAEI,QALZ;AAME,IAAA,IAAI,EAAC,kBANP;AAOE,IAAA,QAAQ,EAAE,EAPZ;AAQE,IAAA,YAAY,EAAEN,KAAK,CAACS,WARtB;AASE,IAAA,KAAK,EAAET,KAAK,CAACS,WATf;AAUE,IAAA,eAAe,EAAE,IAVnB;AAWE,IAAA,UAAU,EAAE,IAXd;AAYE,IAAA,WAAW,EAAE,IAZf;AAaE,IAAA,mBAAmB,EAAE,KAbvB;AAcE,IAAA,UAAU,EAAE;AACVC,MAAAA,SAAS,EAAE,KADD;AAEVC,MAAAA,yBAAyB,EAAE,IAFjB;AAGVC,MAAAA,wBAAwB,EAAE,IAHhB;AAIVC,MAAAA,cAAc,EAAE,IAJN;AAKVC,MAAAA,eAAe,EAAE,IALP;AAMVC,MAAAA,OAAO,EAAE,CANC;AAOVC,MAAAA,mBAAmB,EAAE;AAPX;AAdd;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GA1CQjB,U;;KAAAA,U;AA4CT,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport AceEditor from \"react-ace\";\r\nimport { AppContext } from \"../context/context\";\r\n\r\nimport \"ace-builds/src-noconflict/theme-tomorrow\";\r\nimport \"ace-builds/src-noconflict/ext-language_tools\";\r\n\r\nfunction CodeEditor(props) {\r\n  require(`ace-builds/src-noconflict/mode-${props.language}`);\r\n  require(`ace-builds/src-noconflict/snippets/${props.language}`);\r\n\r\n  const { setCodeEditorText, codeEditorText } = React.useContext(AppContext);\r\n\r\n  function onChange(newValue) {\r\n    setCodeEditorText(newValue);\r\n    props.callback(newValue);\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   console.log(\"frumos\");\r\n  //   console.log(props.defaultCode);\r\n  // }, [props.defaultCode]);\r\n\r\n  return (\r\n    <AceEditor\r\n      width=\"undefined\"\r\n      height=\"20em\"\r\n      mode={`${props.language}`}\r\n      theme=\"tomorrow\"\r\n      onChange={onChange}\r\n      name=\"UNIQUE_ID_OF_DIV\"\r\n      fontSize={20}\r\n      defaultValue={props.defaultCode}\r\n      value={props.defaultCode}\r\n      showPrintMargin={true}\r\n      showGutter={true}\r\n      wrapEnabled={true}\r\n      highlightActiveLine={false}\r\n      setOptions={{\r\n        useWorker: false,\r\n        enableBasicAutocompletion: true,\r\n        enableLiveAutocompletion: true,\r\n        enableSnippets: true,\r\n        showLineNumbers: true,\r\n        tabSize: 4,\r\n        highlightActiveLine: true,\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default CodeEditor;\r\n"]},"metadata":{},"sourceType":"module"}