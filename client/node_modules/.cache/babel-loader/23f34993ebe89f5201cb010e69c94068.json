{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joseph\\\\Desktop\\\\BcThesis\\\\licenta_aplicatie\\\\code-puls\\\\client\\\\src\\\\components\\\\QuestionSlider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst QuestionSlider = props => {\n  _s();\n\n  const [question, setQuestion] = useState();\n\n  function clickHandler(e) {\n    console.log(props.questions[e.target.id]);\n    setQuestion(currentQuestion);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: props.questions.map((element, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          id: index,\n          onClick: clickHandler,\n          children: `Întrebarea ${index + 1}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), question && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: question.descriere\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(QuestionSlider, \"d+UijU6LSSOIzAeV7YNYUV88yk8=\");\n\n_c = QuestionSlider;\nexport default QuestionSlider;\nconst Wrapper = styled.div`\n  li {\n    font-family: \"Roboto\", sans-serif;\n    font-weight: bold;\n    color: red;\n    /*  background-color: #404040; */\n    float: left;\n    position: relative;\n    padding: 10px 20px;\n    overflow: hidden;\n  }\n\n  li::after {\n    background-color: red;\n    content: \"\";\n    width: 0;\n    height: 3px;\n    left: 0;\n    bottom: 0;\n    /* transition: width 0.35s ease 0s; */\n    position: absolute;\n  }\n\n  li:hover::after {\n    width: 100%;\n  }\n  ul {\n    list-style: none;\n    padding: 0;\n    margin: 0;\n  }\n`;\n_c2 = Wrapper;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"QuestionSlider\");\n$RefreshReg$(_c2, \"Wrapper\");","map":{"version":3,"sources":["C:/Users/Joseph/Desktop/BcThesis/licenta_aplicatie/code-puls/client/src/components/QuestionSlider.js"],"names":["React","useState","styled","QuestionSlider","props","question","setQuestion","clickHandler","e","console","log","questions","target","id","currentQuestion","map","element","index","descriere","Wrapper","div"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAChC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,EAAxC;;AACA,WAASM,YAAT,CAAsBC,CAAtB,EAAyB;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACO,SAAN,CAAgBH,CAAC,CAACI,MAAF,CAASC,EAAzB,CAAZ;AACAP,IAAAA,WAAW,CAACQ,eAAD,CAAX;AACD;;AACD,sBACE;AAAA,2BACE,QAAC,OAAD;AAAA,8BACE;AAAA,kBACGV,KAAK,CAACO,SAAN,CAAgBI,GAAhB,CAAoB,CAACC,OAAD,EAAUC,KAAV,kBACnB;AAAI,UAAA,EAAE,EAAEA,KAAR;AAAe,UAAA,OAAO,EAAEV,YAAxB;AAAA,oBACI,cAAaU,KAAK,GAAG,CAAE;AAD3B;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cADF,EAQGZ,QAAQ,iBAAI;AAAA,kBAAIA,QAAQ,CAACa;AAAb;AAAA;AAAA;AAAA;AAAA,cARf;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAcD,CApBD;;GAAMf,c;;KAAAA,c;AAsBN,eAAeA,cAAf;AAEA,MAAMgB,OAAO,GAAGjB,MAAM,CAACkB,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA/BA;MAAMD,O","sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst QuestionSlider = (props) => {\r\n  const [question, setQuestion] = useState();\r\n  function clickHandler(e) {\r\n    console.log(props.questions[e.target.id]);\r\n    setQuestion(currentQuestion);\r\n  }\r\n  return (\r\n    <>\r\n      <Wrapper>\r\n        <ul>\r\n          {props.questions.map((element, index) => (\r\n            <li id={index} onClick={clickHandler}>\r\n              {`Întrebarea ${index + 1}`}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        {question && <p>{question.descriere}</p>}\r\n      </Wrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QuestionSlider;\r\n\r\nconst Wrapper = styled.div`\r\n  li {\r\n    font-family: \"Roboto\", sans-serif;\r\n    font-weight: bold;\r\n    color: red;\r\n    /*  background-color: #404040; */\r\n    float: left;\r\n    position: relative;\r\n    padding: 10px 20px;\r\n    overflow: hidden;\r\n  }\r\n\r\n  li::after {\r\n    background-color: red;\r\n    content: \"\";\r\n    width: 0;\r\n    height: 3px;\r\n    left: 0;\r\n    bottom: 0;\r\n    /* transition: width 0.35s ease 0s; */\r\n    position: absolute;\r\n  }\r\n\r\n  li:hover::after {\r\n    width: 100%;\r\n  }\r\n  ul {\r\n    list-style: none;\r\n    padding: 0;\r\n    margin: 0;\r\n  }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}