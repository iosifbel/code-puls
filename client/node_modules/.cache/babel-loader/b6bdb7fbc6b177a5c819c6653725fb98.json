{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joseph\\\\Desktop\\\\BcThesis\\\\licenta_aplicatie\\\\code-puls\\\\client\\\\src\\\\pages\\\\addTest.js\",\n    _s = $RefreshSig$();\n\nimport styled from \"styled-components\";\nimport { Form, Col } from \"react-bootstrap\";\nimport { AppContext } from \"../context/context\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button } from \"../components/defaultComponents\";\nimport theme from \"../Assets/theme\";\nimport { Loader } from \"../components\";\nimport axios from \"axios\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst rootURL = \"http://localhost:5000/api\";\n\nfunction AddTest() {\n  _s();\n\n  const {\n    judge0Languges,\n    isLoading,\n    setIsLoading\n  } = React.useContext(AppContext);\n  const [subjects, setSubjects] = useState([]);\n  const [groups, setGroups] = useState();\n  const [areGroupsLoading, setAreGroupsLoading] = useState(true); //form controlled input fields\n\n  const [selectedSubject, setSelectedSubject] = useState(-1);\n  const [selectedGroup, setSelectedGroup] = useState();\n  const [language, setLanguage] = useState(judge0Languges[0]);\n  const [code, setCode] = useState();\n  const [expectedAnswer, setExpectedAnswer] = useState();\n  const [date, setDate] = useState(new Date()); //onMount\n\n  useEffect(() => {\n    getSubjects();\n  }, []);\n\n  function subjectChanged(id) {\n    setSelectedSubject(id);\n\n    if (id > 0) {\n      getGroups(id);\n      setGroups(groups[0]);\n    }\n  }\n\n  async function getGroups(subjectId) {\n    console.log(\"getting groups from db...\");\n    setAreGroupsLoading(true);\n    const response = await axios({\n      method: \"get\",\n      url: `${rootURL}/subjects/${subjectId}/groups`\n    }).catch(err => console.log(err));\n\n    if (response) {\n      console.log(response.data);\n      setGroups(response.data);\n    }\n\n    setAreGroupsLoading(false);\n  }\n\n  async function getSubjects() {\n    console.log(\"getting subjects from db...\");\n    setIsLoading(true);\n    const response = await axios({\n      method: \"get\",\n      url: `${rootURL}/teachers/1/subjects`\n    }).catch(err => console.log(err));\n\n    if (response) {\n      console.log(response.data);\n      setSubjects(response.data);\n    }\n\n    setIsLoading(false);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const test = {\n      selectedSubject,\n      selectedGroup,\n      language,\n      code,\n      expectedAnswer,\n      date\n    };\n    console.log(test);\n  }\n\n  if (isLoading) {\n    console.log(\"is loading..\");\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(FormTitle, {\n      children: \"Adaug\\u0103 Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          controlId: \"subjects\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Materie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            onChange: e => subjectChanged(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: -1,\n              children: \"Selecteaz\\u0103\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 19\n            }, this), subjects.map(subject => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: subject.id,\n              id: subject.id,\n              children: subject.descriere\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 23\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          controlId: \"StudentGroups\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Grupa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            onChange: e => setSelectedGroup(e.target.value),\n            children: [areGroupsLoading && selectedSubject == -1 && /*#__PURE__*/_jsxDEV(\"option\", {\n              value: -1,\n              children: \"nicio grupa pentru materia selectat\\u0103\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 21\n            }, this), !areGroupsLoading && groups && selectedSubject > 0 && groups.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: item.grupa,\n              children: item.grupa\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 23\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"programmingLanguages\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Limbaj de programare\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"select\",\n          onChange: e => setLanguage(e.target.value),\n          children: judge0Languges.map(language => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: language.id,\n            children: language.name\n          }, language.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"Problem\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Problem\\u0103\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"textarea\",\n          rows: 10,\n          onChange: e => setCode(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            placeholder: \"Rezultat a\\u0219teptat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(DatePicker, {\n            wrapperClassName: \"datepicker\",\n            customInput: /*#__PURE__*/_jsxDEV(ExampleCustomInput, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 30\n            }, this),\n            selected: date,\n            onChange: date => setDate(date),\n            showTimeSelect: true,\n            timeFormat: \"HH:mm\",\n            timeIntervals: 15,\n            timeCaption: \"Timp\",\n            dateFormat: \"MMMM d, yyyy h:mm aa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n        className: \"justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(SendBtn, {\n          primary: true,\n          onClick: e => handleSubmit(e),\n          children: \"Trimite\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddTest, \"X0p3FNGMIfnV5OmMA9NguIUEvpk=\");\n\n_c = AddTest;\nconst ExampleCustomInput = /*#__PURE__*/React.forwardRef(_c2 = ({\n  value,\n  onClick\n}, ref) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"timePickerBox\",\n  onClick: onClick,\n  ref: ref,\n  children: value\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 177,\n  columnNumber: 3\n}, this));\n_c3 = ExampleCustomInput;\nconst SendBtn = styled(Button)`\nbackground: ${theme.mainBlue};\ncolor: white;\nmargin-top: 2em;\n&:hover {\n  background: ${theme.mainBlue};;\n  color: white;\n  font-weight: normal;\n}\n\n`;\n_c4 = SendBtn;\nconst FormTitle = styled.p`\n  display: flex;\n  justify-content: center;\n  font-size: 2em;\n  margin-bottom : 2em;\n`;\n_c5 = FormTitle;\nconst Wrapper = styled.section`\ndisplay: flex;\nflex-direction: column;\nwidth: 35%;\n\nmargin-left: 45%;\nheight: 100%; \nmargin-top : 5%;\n\n\n\n\n\n`;\n_c6 = Wrapper;\nexport default AddTest;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"AddTest\");\n$RefreshReg$(_c2, \"ExampleCustomInput$React.forwardRef\");\n$RefreshReg$(_c3, \"ExampleCustomInput\");\n$RefreshReg$(_c4, \"SendBtn\");\n$RefreshReg$(_c5, \"FormTitle\");\n$RefreshReg$(_c6, \"Wrapper\");","map":{"version":3,"sources":["C:/Users/Joseph/Desktop/BcThesis/licenta_aplicatie/code-puls/client/src/pages/addTest.js"],"names":["styled","Form","Col","AppContext","React","useState","useEffect","Button","theme","Loader","axios","DatePicker","rootURL","AddTest","judge0Languges","isLoading","setIsLoading","useContext","subjects","setSubjects","groups","setGroups","areGroupsLoading","setAreGroupsLoading","selectedSubject","setSelectedSubject","selectedGroup","setSelectedGroup","language","setLanguage","code","setCode","expectedAnswer","setExpectedAnswer","date","setDate","Date","getSubjects","subjectChanged","id","getGroups","subjectId","console","log","response","method","url","catch","err","data","handleSubmit","e","preventDefault","test","target","value","map","subject","descriere","item","grupa","name","ExampleCustomInput","forwardRef","onClick","ref","SendBtn","mainBlue","FormTitle","p","Wrapper","section"],"mappings":"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","sourcesContent":["import styled from \"styled-components\";\r\nimport {Form, Col} from \"react-bootstrap\"\r\nimport { AppContext } from \"../context/context\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport {Button} from \"../components/defaultComponents\"\r\nimport theme from \"../Assets/theme\";\r\nimport { Loader } from \"../components\";\r\nimport axios from \"axios\";\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n\r\n\r\n\r\nconst rootURL = \"http://localhost:5000/api\";\r\n\r\nfunction AddTest() {\r\n  const {judge0Languges, isLoading, setIsLoading} = React.useContext(AppContext)\r\n  const [subjects, setSubjects] = useState([]);\r\n  const [groups, setGroups] = useState();\r\n  const [areGroupsLoading, setAreGroupsLoading] = useState(true);\r\n\r\n  //form controlled input fields\r\n  const [selectedSubject, setSelectedSubject] = useState(-1)\r\n  const [selectedGroup, setSelectedGroup] = useState();\r\n  const [language, setLanguage] = useState(judge0Languges[0]);\r\n  const [code, setCode] = useState();\r\n  const [expectedAnswer, setExpectedAnswer] = useState();\r\n  const [date, setDate] = useState(new Date());\r\n\r\n  //onMount\r\n  useEffect(() => {\r\n    getSubjects();\r\n  },[])\r\n\r\n  function subjectChanged (id){  \r\n    \r\n    setSelectedSubject(id)\r\n    if(id > 0) {        \r\n        getGroups(id)\r\n        setGroups(groups[0]);\r\n    }  \r\n    \r\n  }\r\n  async function getGroups(subjectId) {\r\n    console.log(\"getting groups from db...\");\r\n    setAreGroupsLoading(true)\r\n    const response  = await axios({\r\n        method : \"get\",\r\n        url : `${rootURL}/subjects/${subjectId}/groups`,\r\n        \r\n    })\r\n    .catch((err) => console.log(err));\r\n\r\n    if(response) {\r\n        console.log(response.data)  \r\n        setGroups(response.data);      \r\n    }\r\n    setAreGroupsLoading(false);\r\n    \r\n  }\r\n\r\n  async function getSubjects() {\r\n    console.log(\"getting subjects from db...\");\r\n    setIsLoading(true); \r\n    const response  = await axios({\r\n        method : \"get\",\r\n        url : `${rootURL}/teachers/1/subjects`,\r\n        \r\n    })\r\n    .catch((err) => console.log(err));\r\n\r\n    if(response) {\r\n        console.log(response.data)  \r\n        setSubjects(response.data);          \r\n    }\r\n    setIsLoading(false);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    const test = {selectedSubject, selectedGroup, language, code, expectedAnswer, date}\r\n    console.log(test);\r\n    \r\n  }\r\n  \r\n  if(isLoading){\r\n    console.log(\"is loading..\")\r\n    return(<Loader></Loader>)\r\n  }\r\n  \r\n  return (\r\n    <Wrapper>    \r\n    \r\n        <FormTitle>Adaugă Test</FormTitle>\r\n        <Form>\r\n          <Form.Row>           \r\n              <Form.Group as={Col} controlId=\"subjects\">\r\n                <Form.Label>Materie</Form.Label>\r\n                <Form.Control \r\n                  as=\"select\" \r\n                  onChange={(e => subjectChanged(e.target.value))}>\r\n                  <option value={-1}>Selectează</option>\r\n                  {subjects.map((subject) => (\r\n                      <option \r\n                      value={subject.id} \r\n                      id={subject.id}>\r\n                          {subject.descriere}\r\n                      </option>\r\n                    ))}\r\n                </Form.Control>\r\n              </Form.Group>\r\n          \r\n         \r\n              <Form.Group as={Col} controlId=\"StudentGroups\">\r\n                <Form.Label>Grupa</Form.Label>\r\n                <Form.Control as=\"select\"\r\n                onChange={(e => setSelectedGroup(e.target.value))}>\r\n                  {areGroupsLoading && selectedSubject == -1 && (\r\n                    <option value={-1}>nicio grupa pentru materia selectată</option>\r\n                  )}\r\n                  {!areGroupsLoading && groups && selectedSubject > 0 &&(\r\n                    groups.map((item) => (\r\n                      <option value={item.grupa}>{item.grupa}</option>\r\n                    ))\r\n                  )}\r\n                </Form.Control>\r\n              </Form.Group> \r\n          </Form.Row>\r\n\r\n\r\n          <Form.Group controlId=\"programmingLanguages\">\r\n            <Form.Label>Limbaj de programare</Form.Label>\r\n            <Form.Control as=\"select\" \r\n            onChange={(e => setLanguage(e.target.value))}>\r\n              {judge0Languges.map((language) => (\r\n                <option value={language.id} key={language.id}>{language.name}</option>\r\n              ))}\r\n            </Form.Control>\r\n          </Form.Group>         \r\n          <Form.Group controlId=\"Problem\">\r\n            <Form.Label>Problemă</Form.Label>\r\n            <Form.Control as=\"textarea\" rows={10}             \r\n            onChange ={(e => setCode(e.target.value))}/>\r\n          </Form.Group>\r\n          <Form.Row>\r\n            <Col><Form.Control placeholder=\"Rezultat așteptat\" /></Col>\r\n            <Col>\r\n          \r\n              <DatePicker\r\n                wrapperClassName=\"datepicker\"\r\n                customInput={<ExampleCustomInput />}\r\n                selected={date}                        \r\n                onChange={(date) => setDate(date)}\r\n                showTimeSelect\r\n                timeFormat=\"HH:mm\"\r\n                timeIntervals={15}\r\n                timeCaption=\"Timp\"\r\n                dateFormat=\"MMMM d, yyyy h:mm aa\" \r\n                />\r\n             \r\n            </Col>\r\n          </Form.Row>\r\n          \r\n          <Form.Row className=\"justify-content-center\">\r\n          <SendBtn primary onClick={(e => handleSubmit(e))}>Trimite</SendBtn>\r\n          </Form.Row>\r\n          \r\n        </Form>\r\n    \r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst ExampleCustomInput = React.forwardRef(({ value, onClick }, ref) => (\r\n  <div className=\"timePickerBox\" onClick={onClick} ref={ref}>\r\n    {value}\r\n  </div>\r\n));\r\n\r\n\r\n\r\nconst SendBtn = styled(Button)`\r\nbackground: ${theme.mainBlue};\r\ncolor: white;\r\nmargin-top: 2em;\r\n&:hover {\r\n  background: ${theme.mainBlue};;\r\n  color: white;\r\n  font-weight: normal;\r\n}\r\n\r\n`;\r\n\r\nconst FormTitle = styled.p`\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 2em;\r\n  margin-bottom : 2em;\r\n`;\r\n\r\n\r\nconst Wrapper = styled.section`\r\ndisplay: flex;\r\nflex-direction: column;\r\nwidth: 35%;\r\n\r\nmargin-left: 45%;\r\nheight: 100%; \r\nmargin-top : 5%;\r\n\r\n\r\n\r\n\r\n\r\n`;\r\n\r\nexport default AddTest;\r\n"]},"metadata":{},"sourceType":"module"}