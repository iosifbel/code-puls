{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joseph\\\\Desktop\\\\BcThesis\\\\licenta_aplicatie\\\\code-puls\\\\client\\\\src\\\\pages\\\\addTest.js\",\n    _s = $RefreshSig$();\n\nimport styled from \"styled-components\";\nimport { Form, Col } from \"react-bootstrap\";\nimport { AppContext } from \"../context/context\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button } from \"../components/defaultComponents\";\nimport theme from \"../Assets/theme\";\nimport { Loader } from \"../components\";\nimport axios from \"axios\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\"; // import \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst rootURL = \"http://localhost:5000/api\";\n\nfunction AddTest() {\n  _s();\n\n  const {\n    judge0Languges,\n    isLoading,\n    setIsLoading\n  } = React.useContext(AppContext);\n  const [subjects, setSubjects] = useState([]);\n  const [groups, setGroups] = useState();\n  const [areGroupsLoading, setAreGroupsLoading] = useState(true); //form controlled input fields\n\n  const [selectedSubject, setSelectedSubject] = useState(-1);\n  const [selectedGroup, setSelectedGroup] = useState();\n  const [language, setLanguage] = useState(judge0Languges[0].id);\n  const [code, setCode] = useState();\n  const [expectedAnswer, setExpectedAnswer] = useState(\"\");\n  const [date, setDate] = useState(new Date()); //onMount\n\n  useEffect(() => {\n    getSubjects();\n  }, []);\n\n  function subjectChanged(id) {\n    setSelectedSubject(id);\n\n    if (id > 0) {\n      getGroups(id);\n    }\n  }\n\n  async function getGroups(subjectId) {\n    console.log(\"getting groups from db...\");\n    setAreGroupsLoading(true);\n    const response = await axios({\n      method: \"get\",\n      url: `${rootURL}/subjects/${subjectId}/groups`\n    }).catch(err => console.log(err));\n\n    if (response) {\n      console.log(response.data);\n      setGroups(response.data);\n      setSelectedGroup(response.data[0].grupa);\n    }\n\n    setAreGroupsLoading(false);\n  }\n\n  async function getSubjects() {\n    console.log(\"getting subjects from db...\");\n    setIsLoading(true);\n    const response = await axios({\n      method: \"get\",\n      url: `${rootURL}/teachers/1/subjects`\n    }).catch(err => console.log(err));\n\n    if (response) {\n      console.log(response.data);\n      setSubjects(response.data);\n    }\n\n    setIsLoading(false);\n  } //   async function postTest(test) {\n  //     console.log(\"posting assignment...\");\n  //     setIsLoading(true);\n  //     console.log(test.source_cod)\n  //     const response  = await axios({\n  //         method : \"post\",\n  //         url : `${rootURL}/questions/assess/${test.questionId}/${test.id}/1`,\n  //         data: judgeData\n  //     })\n  //     .catch((err) => console.log(err));\n  //     if(response) {\n  //         console.log(response.data)\n  //         setJudgeResponse(response.data);\n  //     }\n  //     setIsLoading(false);\n  // }\n\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const test = {\n      selectedSubject,\n      selectedGroup,\n      language,\n      code,\n      expectedAnswer,\n      date\n    }; //   const test = {\n    //     titlu : title,\n    //     deadline : date,\n    //     id_materie : test.id_materie,\n    //     id_limbaj_programare: test.id_limbaj_programare,\n    //     grupa: test.grupa,\n    // }\n  }\n\n  if (isLoading) {\n    console.log(\"is loading..\");\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(FormTitle, {\n      children: \"Adaug\\u0103 Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          controlId: \"subjects\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Materie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            onChange: e => subjectChanged(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: -1,\n              children: \"Selecteaz\\u0103\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this), subjects.map(subject => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: subject.id,\n              id: subject.id,\n              children: subject.descriere\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          controlId: \"StudentGroups\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Grupa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            onChange: e => setSelectedGroup(e.target.value),\n            children: [areGroupsLoading && selectedSubject == -1 && /*#__PURE__*/_jsxDEV(\"option\", {\n              value: -1,\n              children: \"nicio grupa pentru materia selectat\\u0103\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this), !areGroupsLoading && groups && selectedSubject > 0 && groups.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: item.grupa,\n              children: item.grupa\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"programmingLanguages\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Limbaj de programare\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"select\",\n          onChange: e => setLanguage(e.target.value),\n          children: judge0Languges.map(language => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: language.id,\n            children: language.name\n          }, language.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"Problem\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Problem\\u0103\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"textarea\",\n          rows: 10,\n          onChange: e => setCode(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            placeholder: \"Rezultat a\\u0219teptat\",\n            value: expectedAnswer,\n            onChange: e => setExpectedAnswer(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(DatePicker, {\n            wrapperClassName: \"datepicker\",\n            customInput: /*#__PURE__*/_jsxDEV(ExampleCustomInput, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 28\n            }, this),\n            selected: date,\n            onChange: date => setDate(date),\n            showTimeSelect: true,\n            timeFormat: \"HH:mm\",\n            timeIntervals: 15,\n            timeCaption: \"Timp\",\n            dateFormat: \"MMMM d, yyyy h:mm aa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n        className: \"justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(SendBtn, {\n          primary: true,\n          onClick: e => handleSubmit(e),\n          children: \"Trimite\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddTest, \"f30DsEXCJWBFjeSEnQ4bvRnlLiE=\");\n\n_c = AddTest;\nconst ExampleCustomInput = /*#__PURE__*/React.forwardRef(_c2 = ({\n  value,\n  onClick\n}, ref) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"timePickerBox\",\n  onClick: onClick,\n  ref: ref,\n  children: value\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 209,\n  columnNumber: 3\n}, this));\n_c3 = ExampleCustomInput;\nconst SendBtn = styled(Button)`\n  background: ${theme.mainBlue};\n  color: white;\n  margin-top: 2em;\n  &:hover {\n    background: ${theme.mainBlue};\n    color: white;\n    font-weight: normal;\n  }\n`;\n_c4 = SendBtn;\nconst FormTitle = styled.p`\n  display: flex;\n  justify-content: center;\n  font-size: 2em;\n  margin-bottom: 2em;\n`;\n_c5 = FormTitle;\nconst Wrapper = styled.section`\n  display: flex;\n  flex-direction: column;\n  width: 35%;\n  margin-left: 45%;\n  height: 100%;\n  margin-top: 5%;\n`;\n_c6 = Wrapper;\nexport default AddTest;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"AddTest\");\n$RefreshReg$(_c2, \"ExampleCustomInput$React.forwardRef\");\n$RefreshReg$(_c3, \"ExampleCustomInput\");\n$RefreshReg$(_c4, \"SendBtn\");\n$RefreshReg$(_c5, \"FormTitle\");\n$RefreshReg$(_c6, \"Wrapper\");","map":{"version":3,"sources":["C:/Users/Joseph/Desktop/BcThesis/licenta_aplicatie/code-puls/client/src/pages/addTest.js"],"names":["styled","Form","Col","AppContext","React","useState","useEffect","Button","theme","Loader","axios","DatePicker","rootURL","AddTest","judge0Languges","isLoading","setIsLoading","useContext","subjects","setSubjects","groups","setGroups","areGroupsLoading","setAreGroupsLoading","selectedSubject","setSelectedSubject","selectedGroup","setSelectedGroup","language","setLanguage","id","code","setCode","expectedAnswer","setExpectedAnswer","date","setDate","Date","getSubjects","subjectChanged","getGroups","subjectId","console","log","response","method","url","catch","err","data","grupa","handleSubmit","e","preventDefault","test","target","value","map","subject","descriere","item","name","ExampleCustomInput","forwardRef","onClick","ref","SendBtn","mainBlue","FormTitle","p","Wrapper","section"],"mappings":"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","sourcesContent":["import styled from \"styled-components\";\r\nimport { Form, Col } from \"react-bootstrap\";\r\nimport { AppContext } from \"../context/context\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Button } from \"../components/defaultComponents\";\r\nimport theme from \"../Assets/theme\";\r\nimport { Loader } from \"../components\";\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst rootURL = \"http://localhost:5000/api\";\r\n\r\nfunction AddTest() {\r\n  const { judge0Languges, isLoading, setIsLoading } =\r\n    React.useContext(AppContext);\r\n  const [subjects, setSubjects] = useState([]);\r\n  const [groups, setGroups] = useState();\r\n  const [areGroupsLoading, setAreGroupsLoading] = useState(true);\r\n\r\n  //form controlled input fields\r\n  const [selectedSubject, setSelectedSubject] = useState(-1);\r\n  const [selectedGroup, setSelectedGroup] = useState();\r\n  const [language, setLanguage] = useState(judge0Languges[0].id);\r\n  const [code, setCode] = useState();\r\n  const [expectedAnswer, setExpectedAnswer] = useState(\"\");\r\n  const [date, setDate] = useState(new Date());\r\n\r\n  //onMount\r\n  useEffect(() => {\r\n    getSubjects();\r\n  }, []);\r\n\r\n  function subjectChanged(id) {\r\n    setSelectedSubject(id);\r\n    if (id > 0) {\r\n      getGroups(id);\r\n    }\r\n  }\r\n  async function getGroups(subjectId) {\r\n    console.log(\"getting groups from db...\");\r\n    setAreGroupsLoading(true);\r\n    const response = await axios({\r\n      method: \"get\",\r\n      url: `${rootURL}/subjects/${subjectId}/groups`,\r\n    }).catch((err) => console.log(err));\r\n\r\n    if (response) {\r\n      console.log(response.data);\r\n      setGroups(response.data);\r\n      setSelectedGroup(response.data[0].grupa);\r\n    }\r\n    setAreGroupsLoading(false);\r\n  }\r\n\r\n  async function getSubjects() {\r\n    console.log(\"getting subjects from db...\");\r\n    setIsLoading(true);\r\n    const response = await axios({\r\n      method: \"get\",\r\n      url: `${rootURL}/teachers/1/subjects`,\r\n    }).catch((err) => console.log(err));\r\n\r\n    if (response) {\r\n      console.log(response.data);\r\n      setSubjects(response.data);\r\n    }\r\n    setIsLoading(false);\r\n  }\r\n\r\n  //   async function postTest(test) {\r\n  //     console.log(\"posting assignment...\");\r\n  //     setIsLoading(true);\r\n\r\n  //     console.log(test.source_cod)\r\n  //     const response  = await axios({\r\n  //         method : \"post\",\r\n  //         url : `${rootURL}/questions/assess/${test.questionId}/${test.id}/1`,\r\n  //         data: judgeData\r\n  //     })\r\n  //     .catch((err) => console.log(err));\r\n\r\n  //     if(response) {\r\n  //         console.log(response.data)\r\n  //         setJudgeResponse(response.data);\r\n  //     }\r\n  //     setIsLoading(false);\r\n  // }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    const test = {\r\n      selectedSubject,\r\n      selectedGroup,\r\n      language,\r\n      code,\r\n      expectedAnswer,\r\n      date,\r\n    };\r\n    //   const test = {\r\n    //     titlu : title,\r\n    //     deadline : date,\r\n    //     id_materie : test.id_materie,\r\n    //     id_limbaj_programare: test.id_limbaj_programare,\r\n    //     grupa: test.grupa,\r\n    // }\r\n  }\r\n\r\n  if (isLoading) {\r\n    console.log(\"is loading..\");\r\n    return <Loader></Loader>;\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <FormTitle>Adaugă Test</FormTitle>\r\n      <Form>\r\n        <Form.Row>\r\n          <Form.Group as={Col} controlId=\"subjects\">\r\n            <Form.Label>Materie</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              onChange={(e) => subjectChanged(e.target.value)}\r\n            >\r\n              <option value={-1}>Selectează</option>\r\n              {subjects.map((subject) => (\r\n                <option value={subject.id} id={subject.id}>\r\n                  {subject.descriere}\r\n                </option>\r\n              ))}\r\n            </Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Col} controlId=\"StudentGroups\">\r\n            <Form.Label>Grupa</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              onChange={(e) => setSelectedGroup(e.target.value)}\r\n            >\r\n              {areGroupsLoading && selectedSubject == -1 && (\r\n                <option value={-1}>nicio grupa pentru materia selectată</option>\r\n              )}\r\n              {!areGroupsLoading &&\r\n                groups &&\r\n                selectedSubject > 0 &&\r\n                groups.map((item) => (\r\n                  <option value={item.grupa}>{item.grupa}</option>\r\n                ))}\r\n            </Form.Control>\r\n          </Form.Group>\r\n        </Form.Row>\r\n\r\n        <Form.Group controlId=\"programmingLanguages\">\r\n          <Form.Label>Limbaj de programare</Form.Label>\r\n          <Form.Control\r\n            as=\"select\"\r\n            onChange={(e) => setLanguage(e.target.value)}\r\n          >\r\n            {judge0Languges.map((language) => (\r\n              <option value={language.id} key={language.id}>\r\n                {language.name}\r\n              </option>\r\n            ))}\r\n          </Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"Problem\">\r\n          <Form.Label>Problemă</Form.Label>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            rows={10}\r\n            onChange={(e) => setCode(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Row>\r\n          <Col>\r\n            <Form.Control\r\n              placeholder=\"Rezultat așteptat\"\r\n              value={expectedAnswer}\r\n              onChange={(e) => setExpectedAnswer(e.target.value)}\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <DatePicker\r\n              wrapperClassName=\"datepicker\"\r\n              customInput={<ExampleCustomInput />}\r\n              selected={date}\r\n              onChange={(date) => setDate(date)}\r\n              showTimeSelect\r\n              timeFormat=\"HH:mm\"\r\n              timeIntervals={15}\r\n              timeCaption=\"Timp\"\r\n              dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n            />\r\n          </Col>\r\n        </Form.Row>\r\n\r\n        <Form.Row className=\"justify-content-center\">\r\n          <SendBtn primary onClick={(e) => handleSubmit(e)}>\r\n            Trimite\r\n          </SendBtn>\r\n        </Form.Row>\r\n      </Form>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst ExampleCustomInput = React.forwardRef(({ value, onClick }, ref) => (\r\n  <div className=\"timePickerBox\" onClick={onClick} ref={ref}>\r\n    {value}\r\n  </div>\r\n));\r\n\r\nconst SendBtn = styled(Button)`\r\n  background: ${theme.mainBlue};\r\n  color: white;\r\n  margin-top: 2em;\r\n  &:hover {\r\n    background: ${theme.mainBlue};\r\n    color: white;\r\n    font-weight: normal;\r\n  }\r\n`;\r\n\r\nconst FormTitle = styled.p`\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 2em;\r\n  margin-bottom: 2em;\r\n`;\r\n\r\nconst Wrapper = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 35%;\r\n  margin-left: 45%;\r\n  height: 100%;\r\n  margin-top: 5%;\r\n`;\r\n\r\nexport default AddTest;\r\n"]},"metadata":{},"sourceType":"module"}