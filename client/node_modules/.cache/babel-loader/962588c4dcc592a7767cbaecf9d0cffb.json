{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joseph\\\\Desktop\\\\BcThesis\\\\licenta_aplicatie\\\\code-puls\\\\client\\\\src\\\\pages\\\\takeTest.js\",\n    _s = $RefreshSig$();\n\nimport { Card, Button } from \"../components/defaultComponents\";\nimport { CodeEditor, Loader, QuestionSlider, AlertBar } from \"../components\";\nimport styled from \"styled-components\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { AppContext } from \"../context/context\";\nimport DefaultCode from \"../components/defaultCodeData\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst rootURL = \"http://localhost:5000/api\";\n\nfunction TakeTest() {\n  _s();\n\n  // console.log(\"salut\");\n  const {\n    setShowNavbar,\n    setShowHeader\n  } = useContext(AppContext);\n  setShowNavbar(false);\n  setShowHeader(true); //get current User\n\n  const auth = useContext(AuthContext);\n  const {\n    authState\n  } = auth;\n  const user = authState.userInfo; //get current test\n\n  const [test, setTest] = useState();\n  const {\n    testState,\n    testQuestions,\n    getTestQuestions,\n    isLoading,\n    aceLanguages,\n    encode,\n    decode,\n    removeTestInProgress\n  } = React.useContext(AppContext);\n  const [language, setLanguage] = useState(\"javascript\");\n  const [stdout, setStdout] = useState(\" \");\n  const [compileError, setCompileError] = useState();\n  const [testCaseStatus, setTestCaseStatus] = useState(\" \");\n  const [judgeResponse, setJudgeResponse] = useState();\n  const [isConsoleLoading, setIsConsoleLoading] = useState(false);\n  const [isSubmitLoading, setIsSubmitLoading] = useState(false);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [currentQuestion, setCurrentQuestion] = useState();\n  const [codeEditorText, setCodeEditorText] = useState([]);\n  const [currentCodeEditorText, setCurrentCodeEditorText] = useState();\n  const [alert, setAlert] = useState({\n    open: false,\n    severity: \"success\",\n    message: \"\"\n  }); //onMount\n\n  useEffect(() => {\n    // console.log(testState);\n    setTest(testState); // console.log(\"onMount\");\n    // console.log(test.id);\n  }, []);\n  useEffect(() => {\n    if (test) {\n      getTestQuestions(test.id); // console.log(testQuestions);\n\n      const aceLanguage = aceLanguages.find(language => language.id == test.id_limbaj_programare);\n\n      if (aceLanguage) {\n        setLanguage(aceLanguage.name);\n      }\n    }\n  }, [test]);\n  useEffect(() => {\n    setCurrentQuestion(testQuestions[0]);\n  }, [testQuestions]); //Initialize codeEditor with default code\n\n  useEffect(() => {\n    if (testQuestions && test) {\n      const defaultCode = DefaultCode.find(item => item.id == test.id_limbaj_programare);\n\n      if (defaultCode) {\n        let array = [];\n        testQuestions.map(element => {\n          array.push(defaultCode.code);\n        });\n        setCodeEditorText(array);\n      }\n    }\n  }, [testQuestions], [test]); //When judgeResponse change\n\n  useEffect(() => {\n    if (judgeResponse) {\n      console.log(\"judge response changed\");\n      setStdout(decode(judgeResponse.stdout));\n      setTestCaseStatus(judgeResponse.status.description);\n      setCompileError(decode(judgeResponse.compile_output));\n    }\n  }, [judgeResponse]);\n\n  function questionChanged(question, index) {\n    // console.log(testQuestions);\n    // console.log(question);\n    setCurrentQuestionIndex(index);\n    setCurrentQuestion(question);\n  }\n\n  function codeEditorTextChanged(text) {\n    console.log(text);\n    let temp_state = [...codeEditorText];\n\n    if (codeEditorText.length > currentQuestionIndex) {\n      temp_state[currentQuestionIndex] = text;\n    } else {\n      temp_state.push(text);\n    }\n\n    setCodeEditorText(temp_state);\n    setCurrentCodeEditorText(text);\n  }\n\n  const getJudgeAssessment = async test => {\n    console.log(\"getting assessment from judge...\");\n    setIsConsoleLoading(true);\n    const judgeData = {\n      source_code: test.source_code,\n      language_id: test.language_id,\n      stdin: test.stdin\n    }; // console.log(test.source_cod);\n\n    const response = await axios({\n      method: \"post\",\n      url: `${rootURL}/questions/assess/${test.questionId}/${test.id}/${user.id}`,\n      data: judgeData\n    }).catch(err => console.log(err));\n\n    if (response) {\n      console.log(response.data);\n      setJudgeResponse(response.data);\n    }\n\n    setIsConsoleLoading(false);\n  };\n\n  function executaBtnHandler() {\n    if (!isConsoleLoading) {\n      console.log(\"buton executa apasat\");\n      const question = {\n        id: test.id,\n        questionId: currentQuestion.id,\n        source_code: encode(codeEditorText[currentQuestionIndex]),\n        language_id: test.id_limbaj_programare,\n        stdin: \"\"\n      };\n      console.log(question);\n      getJudgeAssessment(question);\n    }\n  }\n\n  function handleSendBtn() {\n    if (!isSubmitLoading) {\n      const submission = {\n        test_id: test.id,\n        language_id: test.id_limbaj_programare,\n        stdin: \"\",\n        questions: [],\n        deadline: \"ceva\"\n      };\n      codeEditorText.forEach((code, index) => {\n        const question = {\n          questionId: testQuestions[index].id,\n          source_code: encode(code)\n        };\n        submission.questions.push(question);\n      }); // console.log(submission);\n\n      postSubmission(submission);\n    }\n  }\n\n  async function postSubmission(submission) {\n    // console.log(test.id);\n    setIsSubmitLoading(true);\n\n    try {\n      const response = await axios({\n        method: \"post\",\n        url: `${rootURL}/assignments/sendSubmission/${user.id}/${submission.test_id}`,\n        data: submission\n      });\n\n      if (response) {\n        // console.log(response.data);\n        if (response.status === 200) {\n          setAlert({\n            open: true,\n            severity: \"success\",\n            message: response.data.message\n          });\n          console.log(\"ceva\");\n          removeTestInProgress();\n        } else {\n          setAlert({\n            open: true,\n            severity: \"warning\",\n            message: response.data.message\n          });\n        }\n      }\n\n      setIsSubmitLoading(false);\n    } catch (error) {\n      console.log(error.response.data.message);\n      setAlert({\n        open: true,\n        severity: \"error\",\n        message: error.response.data.message\n      });\n    }\n  } // useEffect(() => {\n  //   console.log(codeEditorText);\n  // }, [codeEditorText]);\n\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(AlertBar, {\n        open: alert.open,\n        severity: alert.severity,\n        message: alert.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProblemCard, {\n        children: /*#__PURE__*/_jsxDEV(QuestionSlider, {\n          questions: testQuestions,\n          callback: questionChanged\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditorCard, {\n        children: /*#__PURE__*/_jsxDEV(CodeEditor, {\n          language: language,\n          value: codeEditorText[currentQuestionIndex],\n          defaultCode: currentCodeEditorText,\n          callback: codeEditorTextChanged\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ExecuteBtn, {\n        primary: true,\n        onClick: executaBtnHandler,\n        children: \"Executa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ConsoleCard, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Output:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this), !isConsoleLoading && stdout && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: stdout\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 45\n          }, this), isConsoleLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Test Case Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this), !isConsoleLoading && testCaseStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: testCaseStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 53\n          }, this), isConsoleLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), !isConsoleLoading && compileError && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Compile Error:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: compileError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SubmitBtn, {\n        secondary: true,\n        onClick: handleSendBtn,\n        children: isSubmitLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 30\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Trimite\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 54\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 231,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TakeTest, \"TyHhQBahdHCqw04JRClHiRo8lls=\");\n\n_c = TakeTest;\nconst Wrapper = styled.section`\n  display: grid;\n  height: 100%;\n  width: 100%;\n  max-height: 700px;\n  grid-template-columns: repeat(2, 1fr);\n  grid-template-rows: repeat(10, 1fr);\n  grid-template-areas:\n    \"A    B\"\n    \"A    B\"\n    \"A    B\"\n    \"A    B\"\n    \"A    B\"\n    \"A    B\"\n    \"A    D\"\n    \"A    C\"\n    \"A    C\"\n    \"A    E\";\n  grid-column-gap: 2em;\n`;\n_c2 = Wrapper;\nconst ProblemCard = styled(Card)`\n  grid-area: A;\n  overflow: auto;\n  margin-left: 2em;\n`;\n_c3 = ProblemCard;\nconst EditorCard = styled(Card)`\n  grid-area: B;\n  margin-right: 2em;\n  margin-top: 3em;\n  align-items: streched\n  justify-items : streched;\n  \n`;\n_c4 = EditorCard;\nconst ConsoleCard = styled(Card)`\n  grid-area: C;\n  margin-right: 2em;\n  position: relative;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  overflow: auto;\n  flex-wrap: wrap;\n`;\n_c5 = ConsoleCard;\nconst ExecuteBtn = styled(Button)`\n  height: 50px;\n  width: 150px;\n  grid-are: D;\n  justify-self: start;\n  align-self: center;\n`;\n_c6 = ExecuteBtn;\nconst SubmitBtn = styled(Button)`\n  height: 50px;\n  width: 150px;\n  grid-are: E;\n  justify-self: end;\n  align-self: center;\n  margin-right: 2em;\n`;\n_c7 = SubmitBtn;\nexport default TakeTest;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"TakeTest\");\n$RefreshReg$(_c2, \"Wrapper\");\n$RefreshReg$(_c3, \"ProblemCard\");\n$RefreshReg$(_c4, \"EditorCard\");\n$RefreshReg$(_c5, \"ConsoleCard\");\n$RefreshReg$(_c6, \"ExecuteBtn\");\n$RefreshReg$(_c7, \"SubmitBtn\");","map":{"version":3,"sources":["C:/Users/Joseph/Desktop/BcThesis/licenta_aplicatie/code-puls/client/src/pages/takeTest.js"],"names":["Card","Button","CodeEditor","Loader","QuestionSlider","AlertBar","styled","React","useEffect","useState","useContext","AuthContext","AppContext","DefaultCode","axios","rootURL","TakeTest","setShowNavbar","setShowHeader","auth","authState","user","userInfo","test","setTest","testState","testQuestions","getTestQuestions","isLoading","aceLanguages","encode","decode","removeTestInProgress","language","setLanguage","stdout","setStdout","compileError","setCompileError","testCaseStatus","setTestCaseStatus","judgeResponse","setJudgeResponse","isConsoleLoading","setIsConsoleLoading","isSubmitLoading","setIsSubmitLoading","currentQuestionIndex","setCurrentQuestionIndex","currentQuestion","setCurrentQuestion","codeEditorText","setCodeEditorText","currentCodeEditorText","setCurrentCodeEditorText","alert","setAlert","open","severity","message","id","aceLanguage","find","id_limbaj_programare","name","defaultCode","item","array","map","element","push","code","console","log","status","description","compile_output","questionChanged","question","index","codeEditorTextChanged","text","temp_state","length","getJudgeAssessment","judgeData","source_code","language_id","stdin","response","method","url","questionId","data","catch","err","executaBtnHandler","handleSendBtn","submission","test_id","questions","deadline","forEach","postSubmission","error","Wrapper","section","ProblemCard","EditorCard","ConsoleCard","ExecuteBtn","SubmitBtn"],"mappings":"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","sourcesContent":["import { Card, Button } from \"../components/defaultComponents\";\r\nimport { CodeEditor, Loader, QuestionSlider, AlertBar } from \"../components\";\r\nimport styled from \"styled-components\";\r\nimport React, { useEffect, useState, useContext } from \"react\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport { AppContext } from \"../context/context\";\r\nimport DefaultCode from \"../components/defaultCodeData\";\r\nimport axios from \"axios\";\r\n\r\nconst rootURL = \"http://localhost:5000/api\";\r\n\r\nfunction TakeTest() {\r\n  // console.log(\"salut\");\r\n  const { setShowNavbar, setShowHeader } = useContext(AppContext);\r\n  setShowNavbar(false);\r\n  setShowHeader(true);\r\n\r\n  //get current User\r\n  const auth = useContext(AuthContext);\r\n  const { authState } = auth;\r\n  const user = authState.userInfo;\r\n\r\n  //get current test\r\n  const [test, setTest] = useState();\r\n\r\n  const {\r\n    testState,\r\n    testQuestions,\r\n    getTestQuestions,\r\n    isLoading,\r\n    aceLanguages,\r\n    encode,\r\n    decode,\r\n    removeTestInProgress,\r\n  } = React.useContext(AppContext);\r\n\r\n  const [language, setLanguage] = useState(\"javascript\");\r\n  const [stdout, setStdout] = useState(\" \");\r\n  const [compileError, setCompileError] = useState();\r\n  const [testCaseStatus, setTestCaseStatus] = useState(\" \");\r\n  const [judgeResponse, setJudgeResponse] = useState();\r\n  const [isConsoleLoading, setIsConsoleLoading] = useState(false);\r\n  const [isSubmitLoading, setIsSubmitLoading] = useState(false);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [currentQuestion, setCurrentQuestion] = useState();\r\n  const [codeEditorText, setCodeEditorText] = useState([]);\r\n  const [currentCodeEditorText, setCurrentCodeEditorText] = useState();\r\n  const [alert, setAlert] = useState({\r\n    open: false,\r\n    severity: \"success\",\r\n    message: \"\",\r\n  });\r\n\r\n  //onMount\r\n  useEffect(() => {\r\n    // console.log(testState);\r\n    setTest(testState);\r\n    // console.log(\"onMount\");\r\n    // console.log(test.id);\r\n  }, []);\r\n  useEffect(() => {\r\n    if (test) {\r\n      getTestQuestions(test.id);\r\n      // console.log(testQuestions);\r\n      const aceLanguage = aceLanguages.find(\r\n        (language) => language.id == test.id_limbaj_programare\r\n      );\r\n      if (aceLanguage) {\r\n        setLanguage(aceLanguage.name);\r\n      }\r\n    }\r\n  }, [test]);\r\n\r\n  useEffect(() => {\r\n    setCurrentQuestion(testQuestions[0]);\r\n  }, [testQuestions]);\r\n\r\n  //Initialize codeEditor with default code\r\n  useEffect(\r\n    () => {\r\n      if (testQuestions && test) {\r\n        const defaultCode = DefaultCode.find(\r\n          (item) => item.id == test.id_limbaj_programare\r\n        );\r\n        if (defaultCode) {\r\n          let array = [];\r\n          testQuestions.map((element) => {\r\n            array.push(defaultCode.code);\r\n          });\r\n          setCodeEditorText(array);\r\n        }\r\n      }\r\n    },\r\n    [testQuestions],\r\n    [test]\r\n  );\r\n\r\n  //When judgeResponse change\r\n  useEffect(() => {\r\n    if (judgeResponse) {\r\n      console.log(\"judge response changed\");\r\n      setStdout(decode(judgeResponse.stdout));\r\n      setTestCaseStatus(judgeResponse.status.description);\r\n      setCompileError(decode(judgeResponse.compile_output));\r\n    }\r\n  }, [judgeResponse]);\r\n\r\n  function questionChanged(question, index) {\r\n    // console.log(testQuestions);\r\n    // console.log(question);\r\n    setCurrentQuestionIndex(index);\r\n    setCurrentQuestion(question);\r\n  }\r\n  function codeEditorTextChanged(text) {\r\n    console.log(text);\r\n\r\n    let temp_state = [...codeEditorText];\r\n\r\n    if (codeEditorText.length > currentQuestionIndex) {\r\n      temp_state[currentQuestionIndex] = text;\r\n    } else {\r\n      temp_state.push(text);\r\n    }\r\n    setCodeEditorText(temp_state);\r\n    setCurrentCodeEditorText(text);\r\n  }\r\n\r\n  const getJudgeAssessment = async (test) => {\r\n    console.log(\"getting assessment from judge...\");\r\n    setIsConsoleLoading(true);\r\n    const judgeData = {\r\n      source_code: test.source_code,\r\n      language_id: test.language_id,\r\n      stdin: test.stdin,\r\n    };\r\n    // console.log(test.source_cod);\r\n    const response = await axios({\r\n      method: \"post\",\r\n      url: `${rootURL}/questions/assess/${test.questionId}/${test.id}/${user.id}`,\r\n      data: judgeData,\r\n    }).catch((err) => console.log(err));\r\n\r\n    if (response) {\r\n      console.log(response.data);\r\n      setJudgeResponse(response.data);\r\n    }\r\n    setIsConsoleLoading(false);\r\n  };\r\n  function executaBtnHandler() {\r\n    if (!isConsoleLoading) {\r\n      console.log(\"buton executa apasat\");\r\n      const question = {\r\n        id: test.id,\r\n        questionId: currentQuestion.id,\r\n        source_code: encode(codeEditorText[currentQuestionIndex]),\r\n        language_id: test.id_limbaj_programare,\r\n        stdin: \"\",\r\n      };\r\n      console.log(question);\r\n      getJudgeAssessment(question);\r\n    }\r\n  }\r\n  function handleSendBtn() {\r\n    if (!isSubmitLoading) {\r\n      const submission = {\r\n        test_id: test.id,\r\n        language_id: test.id_limbaj_programare,\r\n        stdin: \"\",\r\n        questions: [],\r\n        deadline: \"ceva\",\r\n      };\r\n\r\n      codeEditorText.forEach((code, index) => {\r\n        const question = {\r\n          questionId: testQuestions[index].id,\r\n          source_code: encode(code),\r\n        };\r\n        submission.questions.push(question);\r\n      });\r\n      // console.log(submission);\r\n      postSubmission(submission);\r\n    }\r\n  }\r\n\r\n  async function postSubmission(submission) {\r\n    // console.log(test.id);\r\n    setIsSubmitLoading(true);\r\n    try {\r\n      const response = await axios({\r\n        method: \"post\",\r\n        url: `${rootURL}/assignments/sendSubmission/${user.id}/${submission.test_id}`,\r\n        data: submission,\r\n      });\r\n      if (response) {\r\n        // console.log(response.data);\r\n        if (response.status === 200) {\r\n          setAlert({\r\n            open: true,\r\n            severity: \"success\",\r\n            message: response.data.message,\r\n          });\r\n          console.log(\"ceva\");\r\n          removeTestInProgress();\r\n        } else {\r\n          setAlert({\r\n            open: true,\r\n            severity: \"warning\",\r\n            message: response.data.message,\r\n          });\r\n        }\r\n      }\r\n      setIsSubmitLoading(false);\r\n    } catch (error) {\r\n      console.log(error.response.data.message);\r\n      setAlert({\r\n        open: true,\r\n        severity: \"error\",\r\n        message: error.response.data.message,\r\n      });\r\n    }\r\n  }\r\n  // useEffect(() => {\r\n  //   console.log(codeEditorText);\r\n  // }, [codeEditorText]);\r\n\r\n  if (isLoading) {\r\n    return <Loader></Loader>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Wrapper>\r\n        <AlertBar\r\n          open={alert.open}\r\n          severity={alert.severity}\r\n          message={alert.message}\r\n        />\r\n        <ProblemCard>\r\n          <QuestionSlider\r\n            questions={testQuestions}\r\n            callback={questionChanged}\r\n          ></QuestionSlider>\r\n        </ProblemCard>\r\n        <EditorCard>\r\n          <CodeEditor\r\n            language={language}\r\n            value={codeEditorText[currentQuestionIndex]}\r\n            defaultCode={currentCodeEditorText}\r\n            callback={codeEditorTextChanged}\r\n          ></CodeEditor>\r\n        </EditorCard>\r\n        <ExecuteBtn primary onClick={executaBtnHandler}>\r\n          Executa\r\n        </ExecuteBtn>\r\n        <ConsoleCard>\r\n          <div>\r\n            {\" \"}\r\n            <p>Output:</p>\r\n            {!isConsoleLoading && stdout && <p>{stdout}</p>}\r\n            {isConsoleLoading && <p>Loading...</p>}\r\n          </div>\r\n          <div>\r\n            <p>Test Case Status:</p>\r\n            {!isConsoleLoading && testCaseStatus && <p>{testCaseStatus}</p>}\r\n            {isConsoleLoading && <p>Loading...</p>}\r\n          </div>\r\n          {!isConsoleLoading && compileError && (\r\n            <div>\r\n              <div>\r\n                <p>Compile Error:</p>\r\n              </div>\r\n              <p>{compileError}</p>\r\n            </div>\r\n          )}\r\n        </ConsoleCard>\r\n        <SubmitBtn secondary onClick={handleSendBtn}>\r\n          {isSubmitLoading ? <div>Loading...</div> : <div>Trimite</div>}\r\n        </SubmitBtn>\r\n      </Wrapper>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.section`\r\n  display: grid;\r\n  height: 100%;\r\n  width: 100%;\r\n  max-height: 700px;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  grid-template-rows: repeat(10, 1fr);\r\n  grid-template-areas:\r\n    \"A    B\"\r\n    \"A    B\"\r\n    \"A    B\"\r\n    \"A    B\"\r\n    \"A    B\"\r\n    \"A    B\"\r\n    \"A    D\"\r\n    \"A    C\"\r\n    \"A    C\"\r\n    \"A    E\";\r\n  grid-column-gap: 2em;\r\n`;\r\nconst ProblemCard = styled(Card)`\r\n  grid-area: A;\r\n  overflow: auto;\r\n  margin-left: 2em;\r\n`;\r\nconst EditorCard = styled(Card)`\r\n  grid-area: B;\r\n  margin-right: 2em;\r\n  margin-top: 3em;\r\n  align-items: streched\r\n  justify-items : streched;\r\n  \r\n`;\r\nconst ConsoleCard = styled(Card)`\r\n  grid-area: C;\r\n  margin-right: 2em;\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  overflow: auto;\r\n  flex-wrap: wrap;\r\n`;\r\nconst ExecuteBtn = styled(Button)`\r\n  height: 50px;\r\n  width: 150px;\r\n  grid-are: D;\r\n  justify-self: start;\r\n  align-self: center;\r\n`;\r\nconst SubmitBtn = styled(Button)`\r\n  height: 50px;\r\n  width: 150px;\r\n  grid-are: E;\r\n  justify-self: end;\r\n  align-self: center;\r\n  margin-right: 2em;\r\n`;\r\n\r\nexport default TakeTest;\r\n"]},"metadata":{},"sourceType":"module"}