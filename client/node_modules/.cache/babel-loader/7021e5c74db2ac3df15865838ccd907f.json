{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joseph\\\\Desktop\\\\BcThesis\\\\licenta_aplicatie\\\\code-puls\\\\client\\\\src\\\\pages\\\\dashboard.js\",\n    _s = $RefreshSig$();\n\nimport styled from \"styled-components\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../context/context\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { Card } from \"../components/defaultComponents\";\nimport { StudentGraph, TeacherGraph } from \"../components\";\nimport { Form } from \"react-bootstrap\";\nimport theme from \"../Assets/theme\";\nimport axios from \"axios\";\nimport { utils } from \"../context\";\nimport { dataGenerator } from \"../components/TeacherGraphGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Dashboard(props) {\n  _s();\n\n  const user = useContext(AuthContext).authState.userInfo;\n  const {\n    setShowHeader,\n    setShowNavbar\n  } = React.useContext(AppContext);\n  setShowHeader(true);\n  setShowNavbar(true);\n  const [scatterDemoData, setScatterDemoData] = useState([]);\n  const [data, setData] = useState();\n  const [subjectOptions, setSubjectOptions] = useState();\n  const [selectedSubject, setSelectedSubject] = useState({\n    id: -1,\n    text: \"\"\n  });\n  const [selectedGroup, setSelectedGroup] = useState();\n  const [groupsOptions, setGroupsOptions] = useState();\n  const [studentGraphData, setStudentGraphData] = useState();\n  const [scatterData, setScatterData] = useState();\n  useEffect(() => {\n    getSubjectOptions();\n\n    if (user.tip === \"profesor\") {\n      setScatterDemoData(dataGenerator(30));\n    }\n  }, []);\n  useEffect(() => {\n    if (user.tip === \"profesor\") {\n      if (selectedSubject && selectedGroup) {\n        getScatterplotGrades(selectedSubject.id, selectedGroup);\n      }\n    } else if (user.tip === \"student\") {\n      if (selectedSubject) {\n        console.log(selectedSubject);\n      }\n    }\n  }, [selectedSubject, selectedGroup]); //   useEffect(()=> {\n  // if(studentGraphData) {\n  // }\n  //   }, [studentGraphData(])\n  // useEffect(() => {\n  //   if (subjectOptions) {\n  //     console.log(subjectOptions);\n  //   }\n  // }, [subjectOptions]);\n\n  function subjectHandler(id) {\n    try {\n      const subjectId = parseInt(id);\n\n      if (subjectId !== -1) {\n        const selectedSubject = subjectOptions.find(item => item.id === subjectId);\n        setSelectedSubject(selectedSubject);\n\n        if (user.tip === \"profesor\") {\n          getGroupsOptions(selectedSubject.id);\n        } else if (user.tip === \"student\") {\n          getSubjectTests(selectedSubject.id);\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function groupsHandler(groupId) {\n    if (groupId !== \"-1\") {\n      setSelectedGroup(groupId);\n    }\n  }\n\n  const getScatterplotGrades = async (subjectId, group) => {\n    try {\n      const url = `${utils.rootURL}/grades/scatterplot/${subjectId}/${group}`;\n      const {\n        data\n      } = await axios.get(url);\n      console.log(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getSubjectTests = async subjectId => {\n    const tests = [];\n\n    try {\n      const url = `${utils.rootURL}/students/${user.id}/grades/${subjectId}`;\n      const {\n        data\n      } = await axios.get(url);\n\n      if (data) {\n        data.forEach(item => {\n          const date = new Date(item.deadline);\n          item.date = `${date.getDate()}/${parseInt(date.getMonth()) + 1}`;\n          item.grade = item.nota;\n          tests.push(item);\n        });\n      }\n\n      setStudentGraphData(tests);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getGroupsOptions = async subjectId => {\n    try {\n      const url = `${utils.rootURL}/subjects/${subjectId}/groups`;\n      const {\n        data\n      } = await axios.get(url); // console.log(url);\n\n      const options = []; // console.log(data);\n\n      data.forEach(item => {\n        options.push(item.grupa);\n      });\n      setGroupsOptions(options);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getSubjectOptions = async () => {\n    try {\n      if (user) {\n        let url = `${utils.rootURL}`;\n\n        if (user.tip === \"student\") {\n          url += `/students/${user.id}/subjects`;\n        } else if (user.tip === \"profesor\") {\n          url += `/teachers/${user.id}/subjects`;\n        }\n\n        const {\n          data\n        } = await axios.get(url); // setData(data);\n        // console.log(data);\n\n        const subjectOptions = [];\n        data.forEach(item => {\n          subjectOptions.push({\n            id: item.id,\n            text: item.descriere\n          });\n        });\n        setSubjectOptions(subjectOptions);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(GreetingsCard, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Buna \", user.nume, \",\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Cum te sim\\u021Bi ast\\u0103zi?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"graphCardsContainer\",\n      children: [/*#__PURE__*/_jsxDEV(GraphCard, {\n        className: \"align-items-center justify-content-center\",\n        children: user.tip === \"student\" ? /*#__PURE__*/_jsxDEV(StudentGraph, {\n          subject: selectedSubject.text,\n          data: studentGraphData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(TeacherGraph, {\n          data: scatterDemoData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GraphInputCard, {\n        className: \"align-items-center justify-content-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formTitle\",\n          children: \"Alege setarile graficului\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            className: \"Forminput\",\n            onChange: e => subjectHandler(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: -1,\n              children: \"Selecteaz\\u0103 materia\"\n            }, -1, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this), subjectOptions && subjectOptions.length > 0 && subjectOptions.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: item.id,\n              children: item.text\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), user.tip === \"profesor\" && /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            className: \"Forminput\",\n            onChange: e => groupsHandler(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: -1,\n              children: \"Selecteaz\\u0103 grupa\"\n            }, -1, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 17\n            }, this), groupsOptions && groupsOptions.length > 0 && groupsOptions.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: item,\n              children: item\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dashboard, \"oCOJZQ7R38LeNcQX5vlBld/OUh0=\");\n\n_c = Dashboard;\nconst GraphInputCard = styled(Card)`\n  flex-grow: 1;\n  // .Forminput {\n  //   min-width: 5rem;\n  // }\n  padding: 5rem;\n\n  .formTitle {\n    margin-bottom: 1rem;\n    font-size: 1.2rem;\n  }\n`;\n_c2 = GraphInputCard;\nconst GraphCard = styled(Card)`\n  flex-grow: 2;\n  margin-right: 1rem;\n`;\n_c3 = GraphCard;\nconst GreetingsCard = styled(Card)`\n  width: 100%;\n  margin-bottom: 1rem;\n  h1 {\n    font-weight: normal;\n    font-size: 1.5rem;\n    margin-bottom: 1rem;\n  }\n\n  h2 {\n    font-weight: normal;\n    font-size: 1rem;\n  }\n`;\n_c4 = GreetingsCard;\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-left: 25vw;\n  margin-top: 20vh;\n  margin-right: 10vw;\n  margin-bottom: 10vh;\n  height: 53vh;\n  align-items: center;\n  justify-content: center;\n  font-size: 1rem;\n  color: ${theme.mainBlack};\n  .graphCardsContainer {\n    flex-grow: 1;\n    width: 100%;\n    display: flex;\n    height: auto;\n  }\n`;\n_c5 = Wrapper;\nexport default Dashboard;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Dashboard\");\n$RefreshReg$(_c2, \"GraphInputCard\");\n$RefreshReg$(_c3, \"GraphCard\");\n$RefreshReg$(_c4, \"GreetingsCard\");\n$RefreshReg$(_c5, \"Wrapper\");","map":{"version":3,"sources":["C:/Users/Joseph/Desktop/BcThesis/licenta_aplicatie/code-puls/client/src/pages/dashboard.js"],"names":["styled","React","useContext","useEffect","useState","AppContext","AuthContext","Card","StudentGraph","TeacherGraph","Form","theme","axios","utils","dataGenerator","Dashboard","props","user","authState","userInfo","setShowHeader","setShowNavbar","scatterDemoData","setScatterDemoData","data","setData","subjectOptions","setSubjectOptions","selectedSubject","setSelectedSubject","id","text","selectedGroup","setSelectedGroup","groupsOptions","setGroupsOptions","studentGraphData","setStudentGraphData","scatterData","setScatterData","getSubjectOptions","tip","getScatterplotGrades","console","log","subjectHandler","subjectId","parseInt","find","item","getGroupsOptions","getSubjectTests","error","groupsHandler","groupId","group","url","rootURL","get","tests","forEach","date","Date","deadline","getDate","getMonth","grade","nota","push","options","grupa","descriere","nume","e","target","value","length","map","index","GraphInputCard","GraphCard","GreetingsCard","Wrapper","div","mainBlack"],"mappings":"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","sourcesContent":["import styled from \"styled-components\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { AppContext } from \"../context/context\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport { Card } from \"../components/defaultComponents\";\r\nimport { StudentGraph, TeacherGraph } from \"../components\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport theme from \"../Assets/theme\";\r\nimport axios from \"axios\";\r\nimport { utils } from \"../context\";\r\nimport { dataGenerator } from \"../components/TeacherGraphGenerator\";\r\n\r\nfunction Dashboard(props) {\r\n  const user = useContext(AuthContext).authState.userInfo;\r\n  const { setShowHeader, setShowNavbar } = React.useContext(AppContext);\r\n  setShowHeader(true);\r\n  setShowNavbar(true);\r\n\r\n  const [scatterDemoData, setScatterDemoData] = useState([]);\r\n  const [data, setData] = useState();\r\n  const [subjectOptions, setSubjectOptions] = useState();\r\n  const [selectedSubject, setSelectedSubject] = useState({ id: -1, text: \"\" });\r\n  const [selectedGroup, setSelectedGroup] = useState();\r\n  const [groupsOptions, setGroupsOptions] = useState();\r\n  const [studentGraphData, setStudentGraphData] = useState();\r\n  const [scatterData, setScatterData] = useState();\r\n\r\n  useEffect(() => {\r\n    getSubjectOptions();\r\n    if (user.tip === \"profesor\") {\r\n      setScatterDemoData(dataGenerator(30));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (user.tip === \"profesor\") {\r\n      if (selectedSubject && selectedGroup) {\r\n        getScatterplotGrades(selectedSubject.id, selectedGroup);\r\n      }\r\n    } else if (user.tip === \"student\") {\r\n      if (selectedSubject) {\r\n        console.log(selectedSubject);\r\n      }\r\n    }\r\n  }, [selectedSubject, selectedGroup]);\r\n\r\n  //   useEffect(()=> {\r\n  // if(studentGraphData) {\r\n\r\n  // }\r\n  //   }, [studentGraphData(])\r\n\r\n  // useEffect(() => {\r\n  //   if (subjectOptions) {\r\n  //     console.log(subjectOptions);\r\n  //   }\r\n  // }, [subjectOptions]);\r\n\r\n  function subjectHandler(id) {\r\n    try {\r\n      const subjectId = parseInt(id);\r\n      if (subjectId !== -1) {\r\n        const selectedSubject = subjectOptions.find(\r\n          (item) => item.id === subjectId\r\n        );\r\n        setSelectedSubject(selectedSubject);\r\n\r\n        if (user.tip === \"profesor\") {\r\n          getGroupsOptions(selectedSubject.id);\r\n        } else if (user.tip === \"student\") {\r\n          getSubjectTests(selectedSubject.id);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  function groupsHandler(groupId) {\r\n    if (groupId !== \"-1\") {\r\n      setSelectedGroup(groupId);\r\n    }\r\n  }\r\n\r\n  const getScatterplotGrades = async (subjectId, group) => {\r\n    try {\r\n      const url = `${utils.rootURL}/grades/scatterplot/${subjectId}/${group}`;\r\n      const { data } = await axios.get(url);\r\n\r\n      console.log(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getSubjectTests = async (subjectId) => {\r\n    const tests = [];\r\n    try {\r\n      const url = `${utils.rootURL}/students/${user.id}/grades/${subjectId}`;\r\n      const { data } = await axios.get(url);\r\n      if (data) {\r\n        data.forEach((item) => {\r\n          const date = new Date(item.deadline);\r\n          item.date = `${date.getDate()}/${parseInt(date.getMonth()) + 1}`;\r\n          item.grade = item.nota;\r\n          tests.push(item);\r\n        });\r\n      }\r\n      setStudentGraphData(tests);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getGroupsOptions = async (subjectId) => {\r\n    try {\r\n      const url = `${utils.rootURL}/subjects/${subjectId}/groups`;\r\n\r\n      const { data } = await axios.get(url);\r\n      // console.log(url);\r\n\r\n      const options = [];\r\n      // console.log(data);\r\n\r\n      data.forEach((item) => {\r\n        options.push(item.grupa);\r\n      });\r\n      setGroupsOptions(options);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getSubjectOptions = async () => {\r\n    try {\r\n      if (user) {\r\n        let url = `${utils.rootURL}`;\r\n\r\n        if (user.tip === \"student\") {\r\n          url += `/students/${user.id}/subjects`;\r\n        } else if (user.tip === \"profesor\") {\r\n          url += `/teachers/${user.id}/subjects`;\r\n        }\r\n\r\n        const { data } = await axios.get(url);\r\n        // setData(data);\r\n        // console.log(data);\r\n\r\n        const subjectOptions = [];\r\n\r\n        data.forEach((item) => {\r\n          subjectOptions.push({ id: item.id, text: item.descriere });\r\n        });\r\n        setSubjectOptions(subjectOptions);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <GreetingsCard>\r\n        <h1>Buna {user.nume},</h1>\r\n        <h2>Cum te simți astăzi?</h2>\r\n      </GreetingsCard>\r\n      <div className=\"graphCardsContainer\">\r\n        <GraphCard className=\"align-items-center justify-content-center\">\r\n          {user.tip === \"student\" ? (\r\n            <StudentGraph\r\n              subject={selectedSubject.text}\r\n              data={studentGraphData}\r\n            ></StudentGraph>\r\n          ) : (\r\n            <TeacherGraph data={scatterDemoData}></TeacherGraph>\r\n          )}\r\n        </GraphCard>\r\n        <GraphInputCard className=\"align-items-center justify-content-center\">\r\n          <div className=\"formTitle\">Alege setarile graficului</div>\r\n          <Form.Group>\r\n            {/* <Form.Label>Alege materia</Form.Label> */}\r\n            <Form.Control\r\n              as=\"select\"\r\n              className=\"Forminput\"\r\n              onChange={(e) => subjectHandler(e.target.value)}\r\n            >\r\n              <option key={-1} value={-1}>\r\n                Selectează materia\r\n              </option>\r\n              {subjectOptions &&\r\n                subjectOptions.length > 0 &&\r\n                subjectOptions.map((item, index) => (\r\n                  <option key={index} value={item.id}>\r\n                    {item.text}\r\n                  </option>\r\n                ))}\r\n            </Form.Control>\r\n          </Form.Group>\r\n          {user.tip === \"profesor\" && (\r\n            <Form.Group>\r\n              {/* <Form.Label>Alege grupa</Form.Label> */}\r\n              <Form.Control\r\n                as=\"select\"\r\n                className=\"Forminput\"\r\n                onChange={(e) => groupsHandler(e.target.value)}\r\n              >\r\n                <option key={-1} value={-1}>\r\n                  Selectează grupa\r\n                </option>\r\n                {groupsOptions &&\r\n                  groupsOptions.length > 0 &&\r\n                  groupsOptions.map((item, index) => (\r\n                    <option key={index} value={item}>\r\n                      {item}\r\n                    </option>\r\n                  ))}\r\n              </Form.Control>\r\n            </Form.Group>\r\n          )}\r\n        </GraphInputCard>\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n}\r\nconst GraphInputCard = styled(Card)`\r\n  flex-grow: 1;\r\n  // .Forminput {\r\n  //   min-width: 5rem;\r\n  // }\r\n  padding: 5rem;\r\n\r\n  .formTitle {\r\n    margin-bottom: 1rem;\r\n    font-size: 1.2rem;\r\n  }\r\n`;\r\nconst GraphCard = styled(Card)`\r\n  flex-grow: 2;\r\n  margin-right: 1rem;\r\n`;\r\nconst GreetingsCard = styled(Card)`\r\n  width: 100%;\r\n  margin-bottom: 1rem;\r\n  h1 {\r\n    font-weight: normal;\r\n    font-size: 1.5rem;\r\n    margin-bottom: 1rem;\r\n  }\r\n\r\n  h2 {\r\n    font-weight: normal;\r\n    font-size: 1rem;\r\n  }\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-left: 25vw;\r\n  margin-top: 20vh;\r\n  margin-right: 10vw;\r\n  margin-bottom: 10vh;\r\n  height: 53vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 1rem;\r\n  color: ${theme.mainBlack};\r\n  .graphCardsContainer {\r\n    flex-grow: 1;\r\n    width: 100%;\r\n    display: flex;\r\n    height: auto;\r\n  }\r\n`;\r\n\r\nexport default Dashboard;\r\n"]},"metadata":{},"sourceType":"module"}