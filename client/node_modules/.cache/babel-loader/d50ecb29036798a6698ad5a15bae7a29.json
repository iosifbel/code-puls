{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joseph\\\\Desktop\\\\BcThesis\\\\licenta_aplicatie\\\\code-puls\\\\client\\\\src\\\\components\\\\testsGrid.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport { AppContext } from \"../context/context\";\nimport { Card } from \"../components/defaultComponents\";\nimport { Loader } from \"./\";\nimport { Route, Link, useRouteMatch, withRouter, Redirect } from \"react-router-dom\";\nimport theme from \"../Assets/theme\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst rootURL = \"http://localhost:5000/api\";\n\nfunction TestsGrid(props) {\n  _s();\n\n  // const { testInProgress, setTestInProgress } = useContext(AppContext);\n  // setShowHeader(true);\n  const auth = useContext(AuthContext);\n  const {\n    authState\n  } = auth;\n  const user = authState.userInfo;\n  const {\n    url\n  } = useRouteMatch();\n  const [tests, setTests] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [clickedTest, setClickedTest] = useState();\n  useEffect(() => {\n    getStudentTests(user);\n  }, []);\n  useEffect(() => {\n    console.log(tests);\n  }, [tests]);\n\n  const getStudentTests = async user => {\n    console.log(\"getting tests from db..\");\n    setIsLoading(true);\n    const response = await axios.get(`${rootURL}/students/${user.id}/due`).catch(err => console.log(err));\n\n    if (response) {\n      setTests(response.data);\n    }\n\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    if (clickedTest) {\n      setTestInProgress(clickedTest);\n      console.log(testInProgress);\n    }\n  }, [clickedTest]);\n\n  const testClicked = e => {\n    if (testInProgress.id < 0) {\n      console.log(\"clicked card with id \" + e.target.id);\n      const clickedTest = tests.find(test => test.id == e.target.id); // props.parentCallBack(clickedTest);\n\n      setClickedTest(clickedTest);\n      e.preventDefault();\n    } else {\n      console.log(\"test already in progress\");\n      console.log(testInProgress);\n      e.preventDefault();\n    }\n  };\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [clickedTest && /*#__PURE__*/_jsxDEV(Redirect, {\n      to: `${url}/takeTest`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: tests.map(test => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(StyledCard, {\n          id: test.id,\n          onClick: testClicked,\n          children: test.titlu\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)\n      }, test.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TestsGrid, \"SMWe0Dng2rLQBSGKdmIlTzGXYb4=\", false, function () {\n  return [useRouteMatch];\n});\n\n_c = TestsGrid;\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  width: 50%;\n  a {\n    text-decoration: none;\n  }\n  position: fixed;\n  // // align-items: center;\n  // // justify-content: center;\n  // font-size: 1rem;\n  background: ${theme.mainGrey};\n  overflow-y: auto;\n`;\n_c2 = Wrapper;\nconst TestsContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  font-size: 1rem;\n`;\nconst StyledCard = styled(Card)`\n  cursor: pointer;\n  // width: 20vw;\n  margin-top: 1%;\n  margin-bottom: 1%;\n`;\n_c3 = StyledCard;\nexport default _c4 = withRouter(TestsGrid);\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"TestsGrid\");\n$RefreshReg$(_c2, \"Wrapper\");\n$RefreshReg$(_c3, \"StyledCard\");\n$RefreshReg$(_c4, \"%default%\");","map":{"version":3,"sources":["C:/Users/Joseph/Desktop/BcThesis/licenta_aplicatie/code-puls/client/src/components/testsGrid.js"],"names":["React","useEffect","useState","useContext","axios","styled","AppContext","Card","Loader","Route","Link","useRouteMatch","withRouter","Redirect","theme","AuthContext","rootURL","TestsGrid","props","auth","authState","user","userInfo","url","tests","setTests","isLoading","setIsLoading","clickedTest","setClickedTest","getStudentTests","console","log","response","get","id","catch","err","data","setTestInProgress","testInProgress","testClicked","e","target","find","test","preventDefault","map","titlu","Wrapper","div","mainGrey","TestsContainer","StyledCard"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { AppContext } from \"../context/context\";\r\nimport { Card } from \"../components/defaultComponents\";\r\nimport { Loader } from \"./\";\r\nimport {\r\n  Route,\r\n  Link,\r\n  useRouteMatch,\r\n  withRouter,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport theme from \"../Assets/theme\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\n\r\nconst rootURL = \"http://localhost:5000/api\";\r\n\r\nfunction TestsGrid(props) {\r\n  // const { testInProgress, setTestInProgress } = useContext(AppContext);\r\n  // setShowHeader(true);\r\n\r\n  const auth = useContext(AuthContext);\r\n  const { authState } = auth;\r\n  const user = authState.userInfo;\r\n\r\n  const { url } = useRouteMatch();\r\n\r\n  const [tests, setTests] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [clickedTest, setClickedTest] = useState();\r\n\r\n  useEffect(() => {\r\n    getStudentTests(user);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(tests);\r\n  }, [tests]);\r\n\r\n  const getStudentTests = async (user) => {\r\n    console.log(\"getting tests from db..\");\r\n    setIsLoading(true);\r\n    const response = await axios\r\n      .get(`${rootURL}/students/${user.id}/due`)\r\n      .catch((err) => console.log(err));\r\n\r\n    if (response) {\r\n      setTests(response.data);\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (clickedTest) {\r\n      setTestInProgress(clickedTest);\r\n      console.log(testInProgress);\r\n    }\r\n  }, [clickedTest]);\r\n\r\n  const testClicked = (e) => {\r\n    if (testInProgress.id < 0) {\r\n      console.log(\"clicked card with id \" + e.target.id);\r\n      const clickedTest = tests.find((test) => test.id == e.target.id);\r\n      // props.parentCallBack(clickedTest);\r\n      setClickedTest(clickedTest);\r\n      e.preventDefault();\r\n    } else {\r\n      console.log(\"test already in progress\");\r\n      console.log(testInProgress);\r\n      e.preventDefault();\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <Loader></Loader>;\r\n  }\r\n  return (\r\n    <>\r\n      {clickedTest && <Redirect to={`${url}/takeTest`} />}\r\n      <Wrapper>\r\n        {tests.map((test) => (\r\n          <div key={test.id}>\r\n            {/* <Link onClick=> */}\r\n            <StyledCard id={test.id} onClick={testClicked}>\r\n              {test.titlu}\r\n            </StyledCard>\r\n            {/* </Link> */}\r\n          </div>\r\n        ))}\r\n      </Wrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  width: 50%;\r\n  a {\r\n    text-decoration: none;\r\n  }\r\n  position: fixed;\r\n  // // align-items: center;\r\n  // // justify-content: center;\r\n  // font-size: 1rem;\r\n  background: ${theme.mainGrey};\r\n  overflow-y: auto;\r\n`;\r\n\r\nconst TestsContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst StyledCard = styled(Card)`\r\n  cursor: pointer;\r\n  // width: 20vw;\r\n  margin-top: 1%;\r\n  margin-bottom: 1%;\r\n`;\r\n\r\nexport default withRouter(TestsGrid);\r\n"]},"metadata":{},"sourceType":"module"}