{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joseph\\\\Desktop\\\\BcThesis\\\\licenta_aplicatie\\\\code-puls\\\\client\\\\src\\\\pages\\\\tests.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from \"react\";\nimport { Route, Switch, withRouter, Redirect, useRouteMatch, useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { TakeTest } from \".\";\nimport { TestsGrid, TestsTable, Loader } from \"../components/\";\nimport { AppContext, AuthContext, utils } from \"../context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst rootURL = utils.rootURL;\n\nfunction Tests() {\n  _s();\n\n  const user = useContext(AuthContext).authState.userInfo; // const { authState } = auth;\n  // const user = authState.userInfo;\n\n  const [tests, setTests] = useState();\n  const [isLoading, setIsLoading] = useState(true);\n  const {\n    path\n  } = useRouteMatch();\n  const {\n    testInProgress,\n    setTestInProgress\n  } = useContext(AppContext); // const { setShowNavbar } = useContext(AppContext);\n  // setShowNavbar(false);\n  // const handleCallback = (childData) => {\n  //   setTestInProgress(childData);\n  // };\n  // useEffect(() => {\n  //   console.log(testInProgress);\n  // }, [testInProgress]);\n\n  useEffect(() => {\n    getStudentDueTests(user, setIsLoading, setTests);\n  }, []);\n  useEffect(() => {\n    console.log(tests);\n  }, [tests]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: `/tests/takeTest`,\n        children: /*#__PURE__*/_jsxDEV(TakeTest, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/tests\" // exact={true}\n        ,\n        render: props => /*#__PURE__*/_jsxDEV(TestsTable, {\n          title: \"Teste Programate\",\n          data: tests\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Tests, \"oITzTlh1a2xnyPTS2TcGHYKnsIM=\", false, function () {\n  return [useRouteMatch];\n});\n\n_c = Tests;\n\nconst getStudentDueTests = async (user, setIsLoading, setTests) => {\n  console.log(\"getting tests from db..\");\n  setIsLoading(true);\n  const response = await axios.get(`${rootURL}/students/${user.id}/due`).catch(err => console.log(err));\n\n  if (response) {\n    setTests(response.data);\n  }\n\n  setIsLoading(false);\n};\n\nexport default Tests;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tests\");","map":{"version":3,"sources":["C:/Users/Joseph/Desktop/BcThesis/licenta_aplicatie/code-puls/client/src/pages/tests.js"],"names":["useContext","useEffect","useState","Route","Switch","withRouter","Redirect","useRouteMatch","useLocation","axios","TakeTest","TestsGrid","TestsTable","Loader","AppContext","AuthContext","utils","rootURL","Tests","user","authState","userInfo","tests","setTests","isLoading","setIsLoading","path","testInProgress","setTestInProgress","getStudentDueTests","console","log","props","response","get","id","catch","err","data"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AACA,SACEC,KADF,EAEEC,MAFF,EAGEC,UAHF,EAIEC,QAJF,EAKEC,aALF,EAMEC,WANF,QAOO,kBAPP;AAQA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,GAAzB;AACA,SAASC,SAAT,EAAoBC,UAApB,EAAgCC,MAAhC,QAA8C,gBAA9C;AACA,SAASC,UAAT,EAAqBC,WAArB,EAAkCC,KAAlC,QAA+C,YAA/C;;;AAEA,MAAMC,OAAO,GAAGD,KAAK,CAACC,OAAtB;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACf,QAAMC,IAAI,GAAGnB,UAAU,CAACe,WAAD,CAAV,CAAwBK,SAAxB,CAAkCC,QAA/C,CADe,CAGf;AACA;;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ,EAAlC;AACA,QAAM,CAACsB,SAAD,EAAYC,YAAZ,IAA4BvB,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM;AAAEwB,IAAAA;AAAF,MAAWnB,aAAa,EAA9B;AACA,QAAM;AAAEoB,IAAAA,cAAF;AAAkBC,IAAAA;AAAlB,MAAwC5B,UAAU,CAACc,UAAD,CAAxD,CARe,CAUf;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACd4B,IAAAA,kBAAkB,CAACV,IAAD,EAAOM,YAAP,EAAqBF,QAArB,CAAlB;AACD,GAFQ,EAEN,EAFM,CAAT;AAIAtB,EAAAA,SAAS,CAAC,MAAM;AACd6B,IAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AACD,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;AAIA,sBACE;AAAA,cACGE,SAAS,gBACR,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADQ,gBAGR,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAG,iBAAd;AAAA,+BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,QADP,CAEE;AAFF;AAGE,QAAA,MAAM,EAAGQ,KAAD,iBACN,QAAC,UAAD;AAAY,UAAA,KAAK,EAAC,kBAAlB;AAAqC,UAAA,IAAI,EAAEV;AAA3C;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ,mBADF;AAqBD;;GAlDQJ,K;UAOUX,a;;;KAPVW,K;;AAoDT,MAAMW,kBAAkB,GAAG,OAAOV,IAAP,EAAaM,YAAb,EAA2BF,QAA3B,KAAwC;AACjEO,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AAEAN,EAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,QAAMQ,QAAQ,GAAG,MAAMxB,KAAK,CACzByB,GADoB,CACf,GAAEjB,OAAQ,aAAYE,IAAI,CAACgB,EAAG,MADf,EAEpBC,KAFoB,CAEbC,GAAD,IAASP,OAAO,CAACC,GAAR,CAAYM,GAAZ,CAFK,CAAvB;;AAIA,MAAIJ,QAAJ,EAAc;AACZV,IAAAA,QAAQ,CAACU,QAAQ,CAACK,IAAV,CAAR;AACD;;AACDb,EAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,CAZD;;AAcA,eAAeP,KAAf","sourcesContent":["import { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  Route,\r\n  Switch,\r\n  withRouter,\r\n  Redirect,\r\n  useRouteMatch,\r\n  useLocation,\r\n} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { TakeTest } from \".\";\r\nimport { TestsGrid, TestsTable, Loader } from \"../components/\";\r\nimport { AppContext, AuthContext, utils } from \"../context\";\r\n\r\nconst rootURL = utils.rootURL;\r\n\r\nfunction Tests() {\r\n  const user = useContext(AuthContext).authState.userInfo;\r\n\r\n  // const { authState } = auth;\r\n  // const user = authState.userInfo;\r\n  const [tests, setTests] = useState();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const { path } = useRouteMatch();\r\n  const { testInProgress, setTestInProgress } = useContext(AppContext);\r\n\r\n  // const { setShowNavbar } = useContext(AppContext);\r\n  // setShowNavbar(false);\r\n\r\n  // const handleCallback = (childData) => {\r\n\r\n  //   setTestInProgress(childData);\r\n  // };\r\n  // useEffect(() => {\r\n  //   console.log(testInProgress);\r\n  // }, [testInProgress]);\r\n\r\n  useEffect(() => {\r\n    getStudentDueTests(user, setIsLoading, setTests);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(tests);\r\n  }, [tests]);\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <Loader></Loader>\r\n      ) : (\r\n        <Switch>\r\n          <Route path={`/tests/takeTest`}>\r\n            <TakeTest></TakeTest>\r\n          </Route>\r\n\r\n          <Route\r\n            path=\"/tests\"\r\n            // exact={true}\r\n            render={(props) => (\r\n              <TestsTable title=\"Teste Programate\" data={tests}></TestsTable>\r\n            )}\r\n          />\r\n        </Switch>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst getStudentDueTests = async (user, setIsLoading, setTests) => {\r\n  console.log(\"getting tests from db..\");\r\n\r\n  setIsLoading(true);\r\n  const response = await axios\r\n    .get(`${rootURL}/students/${user.id}/due`)\r\n    .catch((err) => console.log(err));\r\n\r\n  if (response) {\r\n    setTests(response.data);\r\n  }\r\n  setIsLoading(false);\r\n};\r\n\r\nexport default Tests;\r\n"]},"metadata":{},"sourceType":"module"}