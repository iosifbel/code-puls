{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joseph\\\\Desktop\\\\BcThesis\\\\licenta_aplicatie\\\\code-puls\\\\client\\\\src\\\\pages\\\\register.js\",\n    _s = $RefreshSig$();\n\nimport { Link } from \"react-router-dom\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { AppContext } from \"../context/context\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { Card, Button } from \"../components/defaultComponents\";\nimport { FormSuccess, FormError } from \"../components\";\nimport styled from \"styled-components\";\nimport { Form, Col } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport theme from \"../Assets/theme\";\nimport { Formik, useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport axios from \"axios\";\nimport { ImSpinner3 } from \"react-icons/im\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst rootURL = \"http://localhost:5000/api\";\n\nfunction Register() {\n  _s();\n\n  const {\n    setShowNavbar,\n    setShowHeader\n  } = useContext(AppContext);\n  const authContext = useContext(AuthContext);\n  setShowNavbar(false);\n  setShowHeader(false);\n  const [type, setType] = useState(\"student\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [registerSuccess, setRegisterSuccess] = useState();\n  const [registerError, setRegisterError] = useState();\n  const [redirectOnRegister, setRedirectOnRegister] = useState(false);\n  const schema = yup.object().shape({\n    firstName: yup.string().required(\"Niciun nume introdus\"),\n    // .matches(/^[aA-zZ\\s]+$/, \"Doar litere\"),\n    lastName: yup.string().required(\"Niciun nume introdus\"),\n    // .matches(/^[aA-zZ\\s]+$/, \"Doar litere\"),\n    email: yup.string().matches(type === \"student\" ? /(@stud.ase.ro)/ : /(@ie.ase.ro)/, \"Adresă nepotrivită pentru tipul de utilizator\", {\n      excludeEmptyString: true\n    }).email(\"Adresă de email invalidă\").required(\"Nicio adresă de email\"),\n    password: yup.string().required(\"Nicio parolă introdusă\")\n  });\n\n  async function register(user) {\n    console.log(user);\n    setIsLoading(true);\n    const response = await axios({\n      method: \"post\",\n      url: `${rootURL}/auth/register`,\n      data: user\n    }).catch(err => {\n      // console.log(err.response.data.message);\n      setRegisterError(err.response.data.message);\n      setRegisterSuccess(null);\n    });\n\n    if (response) {\n      // console.log(response.data);\n      authContext.setAuthState(response.data);\n      setRegisterSuccess(response.data.message);\n      setRegisterError(null);\n      setTimeout(() => {\n        setRedirectOnRegister(true);\n      }, 1500);\n    }\n\n    setIsLoading(false);\n  }\n\n  function submitHandler(user) {\n    console.log(\"submitted\");\n    user.type = type;\n    register(user);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [redirectOnRegister && /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: /*#__PURE__*/_jsxDEV(FormCard, {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          validationSchema: schema // onSubmit={(values) => {\n          //   alert(JSON.stringify(values, null, 2));\n          // }}\n          ,\n          onSubmit: values => {\n            submitHandler(values);\n          },\n          initialValues: {\n            firstName: \"\",\n            lastName: \"\",\n            email: \"\",\n            password: \"\"\n          },\n          children: ({\n            handleSubmit,\n            handleChange,\n            handleBlur,\n            values,\n            touched,\n            isValid,\n            errors\n          }) => /*#__PURE__*/_jsxDEV(Form, {\n            noValidate: true,\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Nume\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                name: \"lastName\",\n                type: \"lastName\",\n                value: values.lastName,\n                placeholder: \"Introdu numele\",\n                onChange: handleChange,\n                onBlur: handleBlur,\n                isValid: touched.lastName && !errors.lastName,\n                isInvalid: touched.lastName && !!errors.lastName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: errors.lastName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Prenume\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                name: \"firstName\",\n                type: \"firstName\",\n                value: values.firstName,\n                placeholder: \"Introdu prenumele\",\n                onChange: handleChange,\n                onBlur: handleBlur,\n                isValid: touched.firstName && !errors.firstName,\n                isInvalid: touched.firstName && !!errors.firstName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: errors.firstName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formBasicEmail\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Adres\\u0103 de email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                name: \"email\",\n                type: \"email\",\n                value: values.email,\n                onBlur: handleBlur,\n                onChange: handleChange,\n                placeholder: \"Introdu email\",\n                isValid: touched.email && !errors.email,\n                isInvalid: touched.email && !!errors.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: errors.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formBasicPassword\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Parol\\u0103\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                name: \"password\",\n                type: \"password\",\n                value: values.password,\n                placeholder: \"Introdu Parola\",\n                onChange: handleChange,\n                onBlur: handleBlur,\n                isValid: touched.password && !errors.password,\n                isInvalid: touched.password && !!errors.password\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: errors.password\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formBasicCheckbox\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Tip cont\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"select\" // name=\"type\"\n                // value={type}\n                ,\n                onChange: e => setType(e.target.value) // onChange={(e) => setType(e.target.value)}\n                // onBlur={handleBlur}\n                ,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"student\",\n                  children: \"Student\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"teacher\",\n                  children: \"Profesor\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: /*#__PURE__*/_jsxDEV(LoginBtn, {\n                variant: \"secondary\",\n                type: \"submit\",\n                children: isLoading ? /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"loadingContainer\",\n                  children: [/*#__PURE__*/_jsxDEV(ImSpinner3, {\n                    className: \"icon-spin\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 190,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"loadingText\",\n                    children: \"Se \\xEEncarc\\u0103...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 191,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Creeaz\\u0103 cont\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"alreadyHaveContainer\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Ai deja un cont?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/login\",\n                className: \"loginText\",\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Register, \"PbDSo6mX+PnMaUmA/bn3Ehpjtxc=\");\n\n_c = Register;\nconst Wrapper = styled.div`\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  // .loginLink {\n  //   text-decoration: none;\n  // }\n  a {\n    text-decoration: none;\n  }\n`;\n_c2 = Wrapper;\nconst FormCard = styled(Card)`\n  width: 30em;\n  min-height 32em;\n\n  .loadingContainer {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    .loadingText {      \n      font-family: Roboto\n      margin-left: 2em;\n    }\n\n    .icon-spin {\n      margin-right: 0.5em;\n      -webkit-animation: icon-spin 2s infinite linear;\n              animation: icon-spin 2s infinite linear;\n    }\n    \n    @-webkit-keyframes icon-spin {\n      0% {\n        -webkit-transform: rotate(0deg);\n                transform: rotate(0deg);\n      }\n      100% {\n        -webkit-transform: rotate(359deg);\n                transform: rotate(359deg);\n      }\n    }\n    \n    @keyframes icon-spin {\n      0% {\n        -webkit-transform: rotate(0deg);\n                transform: rotate(0deg);\n      }\n      100% {\n        -webkit-transform: rotate(359deg);\n                transform: rotate(359deg);\n      }\n    }\n  }\n\n\n .alreadyHaveContainer {\n   font-size: 0.9rem;\n   color: ${theme.Grey1};   \n  font-style: normal;\n  font-weight: bold;\n   background: white;\n   display: flex;\n   direction: row;\n\n   .loginText{\n     margin-left: 0.5em;\n     font-weight: normal;\n   }\n   \n }\n\n`;\n_c3 = FormCard;\nconst LoginBtn = styled(Button)`\n  background: ${theme.mainOrange};\n  color: white;\n  margin: 0;\n  margin-top: 2em;\n  font-size: 1rem;\n  font-weight: bold;\n  height: 2em;\n  width: 20em;\n  width: 100%;\n  border: none;\n\n  &:hover {\n    background: ${theme.mainOrange};\n    color: white;\n  }\n`;\n_c4 = LoginBtn;\nexport default Register;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Register\");\n$RefreshReg$(_c2, \"Wrapper\");\n$RefreshReg$(_c3, \"FormCard\");\n$RefreshReg$(_c4, \"LoginBtn\");","map":{"version":3,"sources":["C:/Users/Joseph/Desktop/BcThesis/licenta_aplicatie/code-puls/client/src/pages/register.js"],"names":["Link","React","useEffect","useState","useContext","AppContext","AuthContext","Card","Button","FormSuccess","FormError","styled","Form","Col","theme","Formik","useFormik","yup","axios","ImSpinner3","rootURL","Register","setShowNavbar","setShowHeader","authContext","type","setType","isLoading","setIsLoading","registerSuccess","setRegisterSuccess","registerError","setRegisterError","redirectOnRegister","setRedirectOnRegister","schema","object","shape","firstName","string","required","lastName","email","matches","excludeEmptyString","password","register","user","console","log","response","method","url","data","catch","err","message","setAuthState","setTimeout","submitHandler","values","handleSubmit","handleChange","handleBlur","touched","isValid","errors","e","target","value","Wrapper","div","FormCard","Grey1","LoginBtn","mainOrange"],"mappings":"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","sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport React, { useEffect, useState, useContext } from \"react\";\r\nimport { AppContext } from \"../context/context\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport { Card, Button } from \"../components/defaultComponents\";\r\nimport { FormSuccess, FormError } from \"../components\";\r\nimport styled from \"styled-components\";\r\nimport { Form, Col } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport theme from \"../Assets/theme\";\r\nimport { Formik, useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport { ImSpinner3 } from \"react-icons/im\";\r\n\r\nconst rootURL = \"http://localhost:5000/api\";\r\n\r\nfunction Register() {\r\n  const { setShowNavbar, setShowHeader } = useContext(AppContext);\r\n  const authContext = useContext(AuthContext);\r\n  setShowNavbar(false);\r\n  setShowHeader(false);\r\n  const [type, setType] = useState(\"student\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [registerSuccess, setRegisterSuccess] = useState();\r\n  const [registerError, setRegisterError] = useState();\r\n  const [redirectOnRegister, setRedirectOnRegister] = useState(false);\r\n\r\n  const schema = yup.object().shape({\r\n    firstName: yup.string().required(\"Niciun nume introdus\"),\r\n    // .matches(/^[aA-zZ\\s]+$/, \"Doar litere\"),\r\n    lastName: yup.string().required(\"Niciun nume introdus\"),\r\n    // .matches(/^[aA-zZ\\s]+$/, \"Doar litere\"),\r\n    email: yup\r\n      .string()\r\n      .matches(\r\n        type === \"student\" ? /(@stud.ase.ro)/ : /(@ie.ase.ro)/,\r\n        \"Adresă nepotrivită pentru tipul de utilizator\",\r\n        {\r\n          excludeEmptyString: true,\r\n        }\r\n      )\r\n      .email(\"Adresă de email invalidă\")\r\n      .required(\"Nicio adresă de email\"),\r\n    password: yup.string().required(\"Nicio parolă introdusă\"),\r\n  });\r\n\r\n  async function register(user) {\r\n    console.log(user);\r\n    setIsLoading(true);\r\n    const response = await axios({\r\n      method: \"post\",\r\n      url: `${rootURL}/auth/register`,\r\n      data: user,\r\n    }).catch((err) => {\r\n      // console.log(err.response.data.message);\r\n      setRegisterError(err.response.data.message);\r\n      setRegisterSuccess(null);\r\n    });\r\n    if (response) {\r\n      // console.log(response.data);\r\n      authContext.setAuthState(response.data);\r\n      setRegisterSuccess(response.data.message);\r\n      setRegisterError(null);\r\n      setTimeout(() => {\r\n        setRedirectOnRegister(true);\r\n      }, 1500);\r\n    }\r\n    setIsLoading(false);\r\n  }\r\n\r\n  function submitHandler(user) {\r\n    console.log(\"submitted\");\r\n    user.type = type;\r\n    register(user);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {redirectOnRegister && <Redirect to=\"/dashboard\" />}\r\n      <Wrapper>\r\n        <FormCard>\r\n          <Formik\r\n            validationSchema={schema}\r\n            // onSubmit={(values) => {\r\n            //   alert(JSON.stringify(values, null, 2));\r\n            // }}\r\n            onSubmit={(values) => {\r\n              submitHandler(values);\r\n            }}\r\n            initialValues={{\r\n              firstName: \"\",\r\n              lastName: \"\",\r\n              email: \"\",\r\n              password: \"\",\r\n            }}\r\n          >\r\n            {({\r\n              handleSubmit,\r\n              handleChange,\r\n              handleBlur,\r\n              values,\r\n              touched,\r\n              isValid,\r\n              errors,\r\n            }) => (\r\n              <Form noValidate onSubmit={handleSubmit}>\r\n                <Form.Group>\r\n                  <Form.Label>Nume</Form.Label>\r\n                  <Form.Control\r\n                    name=\"lastName\"\r\n                    type=\"lastName\"\r\n                    value={values.lastName}\r\n                    placeholder=\"Introdu numele\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    isValid={touched.lastName && !errors.lastName}\r\n                    isInvalid={touched.lastName && !!errors.lastName}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.lastName}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Label>Prenume</Form.Label>\r\n                  <Form.Control\r\n                    name=\"firstName\"\r\n                    type=\"firstName\"\r\n                    value={values.firstName}\r\n                    placeholder=\"Introdu prenumele\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    isValid={touched.firstName && !errors.firstName}\r\n                    isInvalid={touched.firstName && !!errors.firstName}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.firstName}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                  <Form.Label>Adresă de email</Form.Label>\r\n                  <Form.Control\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    value={values.email}\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    placeholder=\"Introdu email\"\r\n                    isValid={touched.email && !errors.email}\r\n                    isInvalid={touched.email && !!errors.email}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.email}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                  <Form.Label>Parolă</Form.Label>\r\n                  <Form.Control\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    value={values.password}\r\n                    placeholder=\"Introdu Parola\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    isValid={touched.password && !errors.password}\r\n                    isInvalid={touched.password && !!errors.password}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.password}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicCheckbox\">\r\n                  <Form.Label>Tip cont</Form.Label>\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    // name=\"type\"\r\n                    // value={type}\r\n                    onChange={(e) => setType(e.target.value)}\r\n                    // onChange={(e) => setType(e.target.value)}\r\n                    // onBlur={handleBlur}\r\n                  >\r\n                    <option value=\"student\">Student</option>\r\n                    <option value=\"teacher\">Profesor</option>\r\n                  </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <LoginBtn variant=\"secondary\" type=\"submit\">\r\n                    {isLoading ? (\r\n                      <span className=\"loadingContainer\">\r\n                        <ImSpinner3 className=\"icon-spin\"></ImSpinner3>\r\n                        <span className=\"loadingText\">Se încarcă...</span>\r\n                      </span>\r\n                    ) : (\r\n                      <p>Creează cont</p>\r\n                    )}\r\n                  </LoginBtn>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"alreadyHaveContainer\">\r\n                  <p>Ai deja un cont?</p>\r\n                  <Link to=\"/login\" className=\"loginText\">\r\n                    Login\r\n                  </Link>\r\n                </Form.Group>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </FormCard>\r\n      </Wrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  height: 100vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  // .loginLink {\r\n  //   text-decoration: none;\r\n  // }\r\n  a {\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\nconst FormCard = styled(Card)`\r\n  width: 30em;\r\n  min-height 32em;\r\n\r\n  .loadingContainer {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    .loadingText {      \r\n      font-family: Roboto\r\n      margin-left: 2em;\r\n    }\r\n\r\n    .icon-spin {\r\n      margin-right: 0.5em;\r\n      -webkit-animation: icon-spin 2s infinite linear;\r\n              animation: icon-spin 2s infinite linear;\r\n    }\r\n    \r\n    @-webkit-keyframes icon-spin {\r\n      0% {\r\n        -webkit-transform: rotate(0deg);\r\n                transform: rotate(0deg);\r\n      }\r\n      100% {\r\n        -webkit-transform: rotate(359deg);\r\n                transform: rotate(359deg);\r\n      }\r\n    }\r\n    \r\n    @keyframes icon-spin {\r\n      0% {\r\n        -webkit-transform: rotate(0deg);\r\n                transform: rotate(0deg);\r\n      }\r\n      100% {\r\n        -webkit-transform: rotate(359deg);\r\n                transform: rotate(359deg);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n .alreadyHaveContainer {\r\n   font-size: 0.9rem;\r\n   color: ${theme.Grey1};   \r\n  font-style: normal;\r\n  font-weight: bold;\r\n   background: white;\r\n   display: flex;\r\n   direction: row;\r\n\r\n   .loginText{\r\n     margin-left: 0.5em;\r\n     font-weight: normal;\r\n   }\r\n   \r\n }\r\n\r\n`;\r\n\r\nconst LoginBtn = styled(Button)`\r\n  background: ${theme.mainOrange};\r\n  color: white;\r\n  margin: 0;\r\n  margin-top: 2em;\r\n  font-size: 1rem;\r\n  font-weight: bold;\r\n  height: 2em;\r\n  width: 20em;\r\n  width: 100%;\r\n  border: none;\r\n\r\n  &:hover {\r\n    background: ${theme.mainOrange};\r\n    color: white;\r\n  }\r\n`;\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}