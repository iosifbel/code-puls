{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joseph\\\\Desktop\\\\BcThesis\\\\licenta_aplicatie\\\\code-puls\\\\client\\\\src\\\\components\\\\QuestionSlider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport theme from \"../Assets/theme\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst QuestionSlider = props => {\n  _s();\n\n  const [question, setQuestion] = useState({\n    descriere: \"\"\n  });\n  const [index, setIndex] = useState(1);\n  useEffect(() => {\n    if (props.questions) {\n      // console.log(props);\n      setQuestion(props.questions[0]);\n    }\n  }, [props.questions]);\n\n  function clickHandler(e) {\n    const currentQuestion = props.questions[e.target.id];\n    let newIndex = 1;\n\n    try {\n      newIndex = parseInt(e.target.id) + 1;\n      setIndex(newIndex);\n      setQuestion(currentQuestion);\n      props.callback(currentQuestion, parseInt(e.target.id));\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Wrapper, {\n      index: index,\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: props.questions.map((element, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          id: index,\n          onClick: clickHandler,\n          children: `Întrebarea ${index + 1}`\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"questionBody\",\n        children: question && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: question.descriere\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 24\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(QuestionSlider, \"c5qyKjpjHawKGcdNbaIsJhWtHv4=\");\n\n_c = QuestionSlider;\nexport default QuestionSlider;\nconst Wrapper = styled.div`\n  margin-bottom: 2rem;\n  .questionBody {\n    width: 100%;\n    max-height: 6rem;\n    overflow: auto;\n  }\n  li {\n    font-family: \"Roboto\", sans-serif;\n    font-weight: normal;\n    font-size: 1rem;\n    color: black;\n    /*  background-color: #404040; */\n    float: left;\n    position: relative;\n    padding: 10px 20px;\n    overflow: hidden;\n    cursor: pointer;\n  }\n\n  li::after {\n    background-color: ${theme.mainBlue};\n    content: \"\";\n    width: 0%;\n    height: 3px;\n    left: 0;\n    bottom: 0;\n    transition: width 0.35s ease 0s;\n    position: absolute;\n  }\n\n  //   li:hover::after {\n  //     width: 100%;\n  //   }\n\n  li:nth-child(${props => props.index}) {\n    font-weight: bold;\n    color: ${theme.mainOrange};\n  }\n\n  li:nth-child(${props => props.index})::after {\n    width: 100%;\n  }\n\n  ul {\n    list-style: none;\n    padding: 0;\n    margin: 0;\n    display: flex;\n    justify-content: center;\n    margin-bottom: 4rem;\n  }\n`;\n_c2 = Wrapper;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"QuestionSlider\");\n$RefreshReg$(_c2, \"Wrapper\");","map":{"version":3,"sources":["C:/Users/Joseph/Desktop/BcThesis/licenta_aplicatie/code-puls/client/src/components/QuestionSlider.js"],"names":["React","useEffect","useState","styled","theme","QuestionSlider","props","question","setQuestion","descriere","index","setIndex","questions","clickHandler","e","currentQuestion","target","id","newIndex","parseInt","callback","error","console","log","map","element","Wrapper","div","mainBlue","mainOrange"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAChC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC;AAAEO,IAAAA,SAAS,EAAE;AAAb,GAAD,CAAxC;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,CAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIK,KAAK,CAACM,SAAV,EAAqB;AACnB;AACAJ,MAAAA,WAAW,CAACF,KAAK,CAACM,SAAN,CAAgB,CAAhB,CAAD,CAAX;AACD;AACF,GALQ,EAKN,CAACN,KAAK,CAACM,SAAP,CALM,CAAT;;AAOA,WAASC,YAAT,CAAsBC,CAAtB,EAAyB;AACvB,UAAMC,eAAe,GAAGT,KAAK,CAACM,SAAN,CAAgBE,CAAC,CAACE,MAAF,CAASC,EAAzB,CAAxB;AACA,QAAIC,QAAQ,GAAG,CAAf;;AACA,QAAI;AACFA,MAAAA,QAAQ,GAAGC,QAAQ,CAACL,CAAC,CAACE,MAAF,CAASC,EAAV,CAAR,GAAwB,CAAnC;AAEAN,MAAAA,QAAQ,CAACO,QAAD,CAAR;AACAV,MAAAA,WAAW,CAACO,eAAD,CAAX;AACAT,MAAAA,KAAK,CAACc,QAAN,CAAeL,eAAf,EAAgCI,QAAQ,CAACL,CAAC,CAACE,MAAF,CAASC,EAAV,CAAxC;AACD,KAND,CAME,OAAOI,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF;;AAED,sBACE;AAAA,2BACE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAEX,KAAhB;AAAA,8BACE;AAAA,kBACGJ,KAAK,CAACM,SAAN,CAAgBY,GAAhB,CAAoB,CAACC,OAAD,EAAUf,KAAV,kBACnB;AAAgB,UAAA,EAAE,EAAEA,KAApB;AAA2B,UAAA,OAAO,EAAEG,YAApC;AAAA,oBACI,cAAaH,KAAK,GAAG,CAAE;AAD3B,WAASA,KAAT;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,kBACGH,QAAQ,iBAAI;AAAA,oBAAIA,QAAQ,CAACE;AAAb;AAAA;AAAA;AAAA;AAAA;AADf;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAgBD,CAzCD;;GAAMJ,c;;KAAAA,c;AA2CN,eAAeA,cAAf;AAEA,MAAMqB,OAAO,GAAGvB,MAAM,CAACwB,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwBvB,KAAK,CAACwB,QAAS;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAkBtB,KAAD,IAAWA,KAAK,CAACI,KAAM;AACxC;AACA,aAAaN,KAAK,CAACyB,UAAW;AAC9B;AACA;AACA,iBAAkBvB,KAAD,IAAWA,KAAK,CAACI,KAAM;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CApDA;MAAMgB,O","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport theme from \"../Assets/theme\";\r\n\r\nconst QuestionSlider = (props) => {\r\n  const [question, setQuestion] = useState({ descriere: \"\" });\r\n  const [index, setIndex] = useState(1);\r\n\r\n  useEffect(() => {\r\n    if (props.questions) {\r\n      // console.log(props);\r\n      setQuestion(props.questions[0]);\r\n    }\r\n  }, [props.questions]);\r\n\r\n  function clickHandler(e) {\r\n    const currentQuestion = props.questions[e.target.id];\r\n    let newIndex = 1;\r\n    try {\r\n      newIndex = parseInt(e.target.id) + 1;\r\n\r\n      setIndex(newIndex);\r\n      setQuestion(currentQuestion);\r\n      props.callback(currentQuestion, parseInt(e.target.id));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Wrapper index={index}>\r\n        <ul>\r\n          {props.questions.map((element, index) => (\r\n            <li key={index} id={index} onClick={clickHandler}>\r\n              {`Întrebarea ${index + 1}`}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <div className=\"questionBody\">\r\n          {question && <p>{question.descriere}</p>}\r\n        </div>\r\n      </Wrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QuestionSlider;\r\n\r\nconst Wrapper = styled.div`\r\n  margin-bottom: 2rem;\r\n  .questionBody {\r\n    width: 100%;\r\n    max-height: 6rem;\r\n    overflow: auto;\r\n  }\r\n  li {\r\n    font-family: \"Roboto\", sans-serif;\r\n    font-weight: normal;\r\n    font-size: 1rem;\r\n    color: black;\r\n    /*  background-color: #404040; */\r\n    float: left;\r\n    position: relative;\r\n    padding: 10px 20px;\r\n    overflow: hidden;\r\n    cursor: pointer;\r\n  }\r\n\r\n  li::after {\r\n    background-color: ${theme.mainBlue};\r\n    content: \"\";\r\n    width: 0%;\r\n    height: 3px;\r\n    left: 0;\r\n    bottom: 0;\r\n    transition: width 0.35s ease 0s;\r\n    position: absolute;\r\n  }\r\n\r\n  //   li:hover::after {\r\n  //     width: 100%;\r\n  //   }\r\n\r\n  li:nth-child(${(props) => props.index}) {\r\n    font-weight: bold;\r\n    color: ${theme.mainOrange};\r\n  }\r\n\r\n  li:nth-child(${(props) => props.index})::after {\r\n    width: 100%;\r\n  }\r\n\r\n  ul {\r\n    list-style: none;\r\n    padding: 0;\r\n    margin: 0;\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-bottom: 4rem;\r\n  }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}