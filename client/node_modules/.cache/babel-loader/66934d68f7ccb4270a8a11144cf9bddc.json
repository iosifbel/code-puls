{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joseph\\\\Desktop\\\\BcThesis\\\\licenta_aplicatie\\\\code-puls\\\\client\\\\src\\\\components\\\\testsGrid.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport { AppContext } from \"../context/context\";\nimport { Card } from \"../components/defaultComponents\";\nimport { Route, Link, useRouteMatch, withRouter, Redirect } from \"react-router-dom\";\nimport theme from \"../Assets/theme\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst rootURL = \"http://localhost:5000/api\";\n\nfunction TestsGrid(props) {\n  _s();\n\n  const {\n    testInProgress,\n    setTestInProgress\n  } = React.useContext(AppContext); // setShowHeader(true);\n\n  const auth = useContext(AuthContext);\n  const {\n    authState\n  } = auth;\n  const user = authState.userInfo;\n  const {\n    url\n  } = useRouteMatch();\n  const [tests, setTests] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [clickedTest, setClickedTest] = useState();\n  useEffect(() => {\n    getStudentTests(user);\n  }, []);\n  useEffect(() => {\n    console.log(tests);\n  }, [tests]);\n\n  const getStudentTests = async user => {\n    console.log(\"getting tests from db..\");\n    setIsLoading(true);\n    const response = await axios.get(`${rootURL}/students/${user.id}/due`).catch(err => console.log(err));\n\n    if (response) {\n      setTests(response.data);\n    }\n\n    setIsLoading(false);\n  };\n\n  const testClicked = e => {\n    if (!testInProgress) {\n      console.log(\"clicked card with id \" + e.target.id);\n      const clickedTest = tests.find(test => test.id == e.target.id); // props.parentCallBack(clickedTest);\n\n      setTestInProgress(clickedTest);\n    } else {\n      console.log(\"test already in progress\");\n      console.log(testInProgress);\n      e.preventDefault();\n    }\n  };\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Tests are loading..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: tests.map(test => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `${url}/takeTest`,\n          onClick: testClicked,\n          children: /*#__PURE__*/_jsxDEV(StyledCard, {\n            id: test.id,\n            children: test.titlu\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)\n      }, test.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(TestsGrid, \"DjTbYqaqeFDB6KStbCD2+jYYuAA=\", false, function () {\n  return [useRouteMatch];\n});\n\n_c = TestsGrid;\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  width: 50%;\n  a {\n    text-decoration: none;\n  }\n  position: fixed;\n  // // align-items: center;\n  // // justify-content: center;\n  // font-size: 1rem;\n  background: ${theme.mainGrey};\n  margin-left: 30%;\n  margin-top: 10em;\n  overflow-y: auto;\n`;\n_c2 = Wrapper;\nconst TestsContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  font-size: 1rem;\n`;\nconst StyledCard = styled(Card)`\n  // width: 20vw;\n  margin-top: 1%;\n  margin-bottom: 1%;\n`;\n_c3 = StyledCard;\nexport default TestsGrid;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"TestsGrid\");\n$RefreshReg$(_c2, \"Wrapper\");\n$RefreshReg$(_c3, \"StyledCard\");","map":{"version":3,"sources":["C:/Users/Joseph/Desktop/BcThesis/licenta_aplicatie/code-puls/client/src/components/testsGrid.js"],"names":["React","useEffect","useState","useContext","axios","styled","AppContext","Card","Route","Link","useRouteMatch","withRouter","Redirect","theme","AuthContext","rootURL","TestsGrid","props","testInProgress","setTestInProgress","auth","authState","user","userInfo","url","tests","setTests","isLoading","setIsLoading","clickedTest","setClickedTest","getStudentTests","console","log","response","get","id","catch","err","data","testClicked","e","target","find","test","preventDefault","map","titlu","Wrapper","div","mainGrey","TestsContainer","StyledCard"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { AppContext } from \"../context/context\";\r\nimport { Card } from \"../components/defaultComponents\";\r\nimport {\r\n  Route,\r\n  Link,\r\n  useRouteMatch,\r\n  withRouter,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport theme from \"../Assets/theme\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\n\r\nconst rootURL = \"http://localhost:5000/api\";\r\n\r\nfunction TestsGrid(props) {\r\n  const { testInProgress, setTestInProgress } = React.useContext(AppContext);\r\n  // setShowHeader(true);\r\n\r\n  const auth = useContext(AuthContext);\r\n  const { authState } = auth;\r\n  const user = authState.userInfo;\r\n\r\n  const { url } = useRouteMatch();\r\n\r\n  const [tests, setTests] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [clickedTest, setClickedTest] = useState();\r\n\r\n  useEffect(() => {\r\n    getStudentTests(user);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(tests);\r\n  }, [tests]);\r\n\r\n  const getStudentTests = async (user) => {\r\n    console.log(\"getting tests from db..\");\r\n    setIsLoading(true);\r\n    const response = await axios\r\n      .get(`${rootURL}/students/${user.id}/due`)\r\n      .catch((err) => console.log(err));\r\n\r\n    if (response) {\r\n      setTests(response.data);\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const testClicked = (e) => {\r\n    if (!testInProgress) {\r\n      console.log(\"clicked card with id \" + e.target.id);\r\n      const clickedTest = tests.find((test) => test.id == e.target.id);\r\n      // props.parentCallBack(clickedTest);\r\n      setTestInProgress(clickedTest);\r\n    } else {\r\n      console.log(\"test already in progress\");\r\n      console.log(testInProgress);\r\n      e.preventDefault();\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Wrapper>\r\n        {\" \"}\r\n        <div>\r\n          <h1>Tests are loading..</h1>\r\n        </div>\r\n      </Wrapper>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      {/* {clickedTest && <Redirect to={`${url}/takeTest`} />} */}\r\n      <Wrapper>\r\n        {tests.map((test) => (\r\n          <div key={test.id}>\r\n            <Link to={`${url}/takeTest`} onClick={testClicked}>\r\n              <StyledCard id={test.id}>{test.titlu}</StyledCard>\r\n            </Link>\r\n          </div>\r\n        ))}\r\n      </Wrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  width: 50%;\r\n  a {\r\n    text-decoration: none;\r\n  }\r\n  position: fixed;\r\n  // // align-items: center;\r\n  // // justify-content: center;\r\n  // font-size: 1rem;\r\n  background: ${theme.mainGrey};\r\n  margin-left: 30%;\r\n  margin-top: 10em;\r\n  overflow-y: auto;\r\n`;\r\n\r\nconst TestsContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst StyledCard = styled(Card)`\r\n  // width: 20vw;\r\n  margin-top: 1%;\r\n  margin-bottom: 1%;\r\n`;\r\n\r\nexport default TestsGrid;\r\n"]},"metadata":{},"sourceType":"module"}