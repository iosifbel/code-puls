{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joseph\\\\Desktop\\\\BcThesis\\\\licenta_aplicatie\\\\code-puls\\\\client\\\\src\\\\pages\\\\takeTest.js\",\n    _s = $RefreshSig$();\n\nimport { Card, Button } from \"../components/defaultComponents\";\nimport { CodeEditor, Loader } from \"../components\";\nimport styled from \"styled-components\";\nimport React, { useEffect, useState } from \"react\";\nimport { AppContext } from \"../context/context\";\nimport DefaultCode from \"../components/defaultCodeData\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst rootURL = \"http://localhost:5000/api\";\n\nfunction TakeTest({\n  test\n}) {\n  _s();\n\n  const {\n    setShowNavbar,\n    setShowHeader\n  } = React.useContext(AppContext);\n  setShowNavbar(false);\n  setShowHeader(true);\n  const {\n    testQuestions,\n    getTestQuestions,\n    isLoading,\n    aceLanguages,\n    codeEditorText,\n    setCodeEditorText,\n    encode,\n    decode\n  } = React.useContext(AppContext);\n  const [language, setLanguage] = useState(\"javascript\");\n  const [stdout, setStdout] = useState(\" \");\n  const [compileError, setCompileError] = useState();\n  const [testCaseStatus, setTestCaseStatus] = useState(\" \");\n  const [judgeResponse, setJudgeResponse] = useState();\n  const [isConsoleLoading, setIsConsoleLoading] = useState(false);\n  useEffect(() => {\n    getTestQuestions(test.id);\n    const aceLanguage = aceLanguages.find(language => language.id == test.id_limbaj_programare);\n\n    if (aceLanguage) {\n      setLanguage(aceLanguage.name);\n    }\n\n    const defaultCode = DefaultCode.find(item => item.id == test.id_limbaj_programare);\n\n    if (defaultCode) {\n      setCodeEditorText(defaultCode.code);\n    }\n\n    console.log(\"onMount\");\n  }, []);\n  useEffect(() => {\n    console.log(\"judge response changed\");\n\n    if (judgeResponse) {\n      setStdout(decode(judgeResponse.stdout));\n      setTestCaseStatus(judgeResponse.status.description);\n      setCompileError(decode(judgeResponse.compile_output));\n    }\n  }, [judgeResponse]);\n\n  function executaBtnHandler() {\n    if (!isConsoleLoading) {\n      console.log(\"buton executa apasat\");\n      const assignment = {\n        id: test.id,\n        questionId: testQuestions[0].id,\n        source_cod: encode(codeEditorText),\n        language_id: test.id_limbaj_programare,\n        stdin: \"\"\n      };\n      console.log(assignment);\n      getJudgeAssessment(assignment);\n    }\n  }\n\n  function getCodeEditorTextCallback(text) {// setCodeEditorText(text);\n  }\n\n  const getJudgeAssessment = async test => {\n    console.log(\"getting assessment from judge...\");\n    setIsConsoleLoading(true);\n    const judgeData = {\n      source_code: test.source_cod,\n      language_id: test.language_id,\n      stdin: test.stdin\n    };\n    console.log(test.source_cod);\n    const response = await axios({\n      method: \"post\",\n      url: `${rootURL}/questions/assess/${test.questionId}/${test.id}/1`,\n      data: judgeData\n    }).catch(err => console.log(err));\n\n    if (response) {\n      console.log(response.data);\n      setJudgeResponse(response.data);\n    }\n\n    setIsConsoleLoading(false);\n  };\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(ProblemCard, {\n        children: testQuestions.map(question => /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: question.descriere\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditorCard, {\n        children: /*#__PURE__*/_jsxDEV(CodeEditor, {\n          language: language\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ExecuteBtn, {\n        primary: true,\n        onClick: executaBtnHandler,\n        children: \"Executa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ConsoleCard, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Output:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), !isConsoleLoading && stdout && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: stdout\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 45\n          }, this), isConsoleLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Test Case Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), !isConsoleLoading && testCaseStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: testCaseStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 53\n          }, this), isConsoleLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), !isConsoleLoading && compileError && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Compile Error:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: compileError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SubmitBtn, {\n        secondary: true,\n        children: \"Trimite\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TakeTest, \"fVO4Ah9GkfeIsvFcltYPg7TyVI4=\");\n\n_c = TakeTest;\nconst Wrapper = styled.section`\n  display: grid;\n  height: 100%;\n  width: 100%;\n  max-height: 80%;\n  grid-template-columns: repeat(2, 1fr);\n  grid-template-rows: repeat(10, 1fr);\n  grid-template-areas:\n    \"A    B\"\n    \"A    B\"\n    \"A    B\"\n    \"A    B\"\n    \"A    B\"\n    \"A    B\"\n    \"A    D\"\n    \"A    C\"\n    \"A    C\"\n    \"A    E\";\n  grid-column-gap: 2em;\n`;\n_c2 = Wrapper;\nconst ProblemCard = styled(Card)`\n  grid-area: A;\n  overflow: auto;\n  margin-left: 2em;\n`;\n_c3 = ProblemCard;\nconst EditorCard = styled(Card)`\n  grid-area: B;\n  margin-right: 2em;\n  margin-top: 3em;\n  align-items: streched\n  justify-items : streched;\n  \n`;\n_c4 = EditorCard;\nconst ConsoleCard = styled(Card)`\n  grid-area: C;\n  margin-right: 2em;\n  position: relative;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  overflow: auto;\n  flex-wrap: wrap;\n`;\n_c5 = ConsoleCard;\nconst ExecuteBtn = styled(Button)`\n  height: 50px;\n  width: 150px;\n  grid-are: D;\n  justify-self: start;\n  align-self: center;\n`;\n_c6 = ExecuteBtn;\nconst SubmitBtn = styled(Button)`\n  height: 50px;\n  width: 150px;\n  grid-are: E;\n  justify-self: end;\n  align-self: center;\n  margin-right: 2em;\n`;\n_c7 = SubmitBtn;\nexport default TakeTest;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"TakeTest\");\n$RefreshReg$(_c2, \"Wrapper\");\n$RefreshReg$(_c3, \"ProblemCard\");\n$RefreshReg$(_c4, \"EditorCard\");\n$RefreshReg$(_c5, \"ConsoleCard\");\n$RefreshReg$(_c6, \"ExecuteBtn\");\n$RefreshReg$(_c7, \"SubmitBtn\");","map":{"version":3,"sources":["C:/Users/Joseph/Desktop/BcThesis/licenta_aplicatie/code-puls/client/src/pages/takeTest.js"],"names":["Card","Button","CodeEditor","Loader","styled","React","useEffect","useState","AppContext","DefaultCode","axios","rootURL","TakeTest","test","setShowNavbar","setShowHeader","useContext","testQuestions","getTestQuestions","isLoading","aceLanguages","codeEditorText","setCodeEditorText","encode","decode","language","setLanguage","stdout","setStdout","compileError","setCompileError","testCaseStatus","setTestCaseStatus","judgeResponse","setJudgeResponse","isConsoleLoading","setIsConsoleLoading","id","aceLanguage","find","id_limbaj_programare","name","defaultCode","item","code","console","log","status","description","compile_output","executaBtnHandler","assignment","questionId","source_cod","language_id","stdin","getJudgeAssessment","getCodeEditorTextCallback","text","judgeData","source_code","response","method","url","data","catch","err","map","question","descriere","Wrapper","section","ProblemCard","EditorCard","ConsoleCard","ExecuteBtn","SubmitBtn"],"mappings":"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","sourcesContent":["import { Card, Button } from \"../components/defaultComponents\";\r\nimport { CodeEditor, Loader } from \"../components\";\r\nimport styled from \"styled-components\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { AppContext } from \"../context/context\";\r\nimport DefaultCode from \"../components/defaultCodeData\";\r\nimport axios from \"axios\";\r\nconst rootURL = \"http://localhost:5000/api\";\r\n\r\nfunction TakeTest({ test }) {\r\n  const { setShowNavbar, setShowHeader } = React.useContext(AppContext);\r\n  setShowNavbar(false);\r\n  setShowHeader(true);\r\n\r\n  const {\r\n    testQuestions,\r\n    getTestQuestions,\r\n    isLoading,\r\n    aceLanguages,\r\n    codeEditorText,\r\n    setCodeEditorText,\r\n    encode,\r\n    decode,\r\n  } = React.useContext(AppContext);\r\n\r\n  const [language, setLanguage] = useState(\"javascript\");\r\n  const [stdout, setStdout] = useState(\" \");\r\n  const [compileError, setCompileError] = useState();\r\n  const [testCaseStatus, setTestCaseStatus] = useState(\" \");\r\n  const [judgeResponse, setJudgeResponse] = useState();\r\n  const [isConsoleLoading, setIsConsoleLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getTestQuestions(test.id);\r\n    const aceLanguage = aceLanguages.find(\r\n      (language) => language.id == test.id_limbaj_programare\r\n    );\r\n    if (aceLanguage) {\r\n      setLanguage(aceLanguage.name);\r\n    }\r\n    const defaultCode = DefaultCode.find(\r\n      (item) => item.id == test.id_limbaj_programare\r\n    );\r\n    if (defaultCode) {\r\n      setCodeEditorText(defaultCode.code);\r\n    }\r\n    console.log(\"onMount\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"judge response changed\");\r\n    if (judgeResponse) {\r\n      setStdout(decode(judgeResponse.stdout));\r\n      setTestCaseStatus(judgeResponse.status.description);\r\n      setCompileError(decode(judgeResponse.compile_output));\r\n    }\r\n  }, [judgeResponse]);\r\n\r\n  function executaBtnHandler() {\r\n    if (!isConsoleLoading) {\r\n      console.log(\"buton executa apasat\");\r\n      const assignment = {\r\n        id: test.id,\r\n        questionId: testQuestions[0].id,\r\n        source_cod: encode(codeEditorText),\r\n        language_id: test.id_limbaj_programare,\r\n        stdin: \"\",\r\n      };\r\n      console.log(assignment);\r\n      getJudgeAssessment(assignment);\r\n    }\r\n  }\r\n\r\n  function getCodeEditorTextCallback(text) {\r\n    // setCodeEditorText(text);\r\n  }\r\n\r\n  const getJudgeAssessment = async (test) => {\r\n    console.log(\"getting assessment from judge...\");\r\n    setIsConsoleLoading(true);\r\n    const judgeData = {\r\n      source_code: test.source_cod,\r\n      language_id: test.language_id,\r\n      stdin: test.stdin,\r\n    };\r\n    console.log(test.source_cod);\r\n    const response = await axios({\r\n      method: \"post\",\r\n      url: `${rootURL}/questions/assess/${test.questionId}/${test.id}/1`,\r\n      data: judgeData,\r\n    }).catch((err) => console.log(err));\r\n\r\n    if (response) {\r\n      console.log(response.data);\r\n      setJudgeResponse(response.data);\r\n    }\r\n    setIsConsoleLoading(false);\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <Loader></Loader>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Wrapper>\r\n        <ProblemCard>\r\n          {testQuestions.map((question) => (\r\n            <h3>{question.descriere}</h3>\r\n          ))}\r\n        </ProblemCard>\r\n        <EditorCard>\r\n          <CodeEditor language={language}></CodeEditor>\r\n        </EditorCard>\r\n        <ExecuteBtn primary onClick={executaBtnHandler}>\r\n          Executa\r\n        </ExecuteBtn>\r\n        <ConsoleCard>\r\n          <div>\r\n            {\" \"}\r\n            <p>Output:</p>\r\n            {!isConsoleLoading && stdout && <p>{stdout}</p>}\r\n            {isConsoleLoading && <p>Loading...</p>}\r\n          </div>\r\n          <div>\r\n            <p>Test Case Status:</p>\r\n            {!isConsoleLoading && testCaseStatus && <p>{testCaseStatus}</p>}\r\n            {isConsoleLoading && <p>Loading...</p>}\r\n          </div>\r\n          {!isConsoleLoading && compileError && (\r\n            <div>\r\n              <div>\r\n                <p>Compile Error:</p>\r\n              </div>\r\n              <p>{compileError}</p>\r\n            </div>\r\n          )}\r\n        </ConsoleCard>\r\n        <SubmitBtn secondary>Trimite</SubmitBtn>\r\n      </Wrapper>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.section`\r\n  display: grid;\r\n  height: 100%;\r\n  width: 100%;\r\n  max-height: 80%;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  grid-template-rows: repeat(10, 1fr);\r\n  grid-template-areas:\r\n    \"A    B\"\r\n    \"A    B\"\r\n    \"A    B\"\r\n    \"A    B\"\r\n    \"A    B\"\r\n    \"A    B\"\r\n    \"A    D\"\r\n    \"A    C\"\r\n    \"A    C\"\r\n    \"A    E\";\r\n  grid-column-gap: 2em;\r\n`;\r\nconst ProblemCard = styled(Card)`\r\n  grid-area: A;\r\n  overflow: auto;\r\n  margin-left: 2em;\r\n`;\r\nconst EditorCard = styled(Card)`\r\n  grid-area: B;\r\n  margin-right: 2em;\r\n  margin-top: 3em;\r\n  align-items: streched\r\n  justify-items : streched;\r\n  \r\n`;\r\nconst ConsoleCard = styled(Card)`\r\n  grid-area: C;\r\n  margin-right: 2em;\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  overflow: auto;\r\n  flex-wrap: wrap;\r\n`;\r\nconst ExecuteBtn = styled(Button)`\r\n  height: 50px;\r\n  width: 150px;\r\n  grid-are: D;\r\n  justify-self: start;\r\n  align-self: center;\r\n`;\r\nconst SubmitBtn = styled(Button)`\r\n  height: 50px;\r\n  width: 150px;\r\n  grid-are: E;\r\n  justify-self: end;\r\n  align-self: center;\r\n  margin-right: 2em;\r\n`;\r\n\r\nexport default TakeTest;\r\n"]},"metadata":{},"sourceType":"module"}