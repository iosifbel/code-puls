[{"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\index.js":"1","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\App.js":"2","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\Navbar.js":"3","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\index.js":"4","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\Assets\\theme.js":"5","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\login.js":"6","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\tests.js":"7","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\register.js":"8","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\dashboard.js":"9","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\error.js":"10","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\history.js":"11","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\settings.js":"12","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\Header.js":"13","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\defaultComponents.js":"14","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\NavbarDataStudent.js":"15","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\NavbarDataTeacher.js":"16","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\context\\context.js":"17","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\takeTest.js":"18","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\CodeEditor.js":"19","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\testsGrid.js":"20","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\index.js":"21","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\defaultCodeData.js":"22","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\addTest.js":"23","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\Loader.js":"24","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\FormSucces.js":"25","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\FormError.js":"26","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\context\\AuthContext.js":"27","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\home.js":"28","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\AvatarDropdown.js":"29","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\QuestionSlider.js":"30","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\TestsTable.js":"31","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\context\\index.js":"32","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\context\\utils.js":"33","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\AlertBar.js":"34"},{"size":501,"mtime":1625831701476,"results":"35","hashOfConfig":"36"},{"size":2416,"mtime":1626247240642,"results":"37","hashOfConfig":"36"},{"size":3406,"mtime":1626244976988,"results":"38","hashOfConfig":"36"},{"size":464,"mtime":1625820735154,"results":"39","hashOfConfig":"36"},{"size":229,"mtime":1626259984397,"results":"40","hashOfConfig":"36"},{"size":8996,"mtime":1625832979274,"results":"41","hashOfConfig":"36"},{"size":2337,"mtime":1626272985065,"results":"42","hashOfConfig":"36"},{"size":9893,"mtime":1625833132094,"results":"43","hashOfConfig":"36"},{"size":784,"mtime":1625844852923,"results":"44","hashOfConfig":"36"},{"size":388,"mtime":1623710186186,"results":"45","hashOfConfig":"36"},{"size":350,"mtime":1624709373621,"results":"46","hashOfConfig":"36"},{"size":343,"mtime":1624709372832,"results":"47","hashOfConfig":"36"},{"size":1013,"mtime":1626243876526,"results":"48","hashOfConfig":"36"},{"size":1183,"mtime":1625834269632,"results":"49","hashOfConfig":"36"},{"size":471,"mtime":1625770721924,"results":"50","hashOfConfig":"36"},{"size":477,"mtime":1625770284872,"results":"51","hashOfConfig":"36"},{"size":3099,"mtime":1626288604794,"results":"52","hashOfConfig":"36"},{"size":9360,"mtime":1626287974307,"results":"53","hashOfConfig":"36"},{"size":1434,"mtime":1626021723608,"results":"54","hashOfConfig":"36"},{"size":3210,"mtime":1626250351348,"results":"55","hashOfConfig":"36"},{"size":489,"mtime":1626279344647,"results":"56","hashOfConfig":"36"},{"size":838,"mtime":1624828708070,"results":"57","hashOfConfig":"36"},{"size":13695,"mtime":1625943220811,"results":"58","hashOfConfig":"36"},{"size":2336,"mtime":1624886094727,"results":"59","hashOfConfig":"36"},{"size":594,"mtime":1625772515928,"results":"60","hashOfConfig":"36"},{"size":613,"mtime":1625772519627,"results":"61","hashOfConfig":"36"},{"size":1864,"mtime":1625840285790,"results":"62","hashOfConfig":"36"},{"size":1042,"mtime":1625821685091,"results":"63","hashOfConfig":"36"},{"size":4314,"mtime":1625845206726,"results":"64","hashOfConfig":"36"},{"size":1927,"mtime":1626285056341,"results":"65","hashOfConfig":"36"},{"size":4057,"mtime":1626270765244,"results":"66","hashOfConfig":"36"},{"size":163,"mtime":1626265693688,"results":"67","hashOfConfig":"36"},{"size":87,"mtime":1626265718363,"results":"68","hashOfConfig":"36"},{"size":759,"mtime":1626284009089,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"12hnw4i",{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"72"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"72"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"72"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"72"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"72"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"72"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"72"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"72"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"72"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\index.js",[],["149","150"],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\App.js",["151","152"],"import \"./Assets/css/default.min.css\";\r\nimport {\r\n  Dashboard,\r\n  Login,\r\n  Register,\r\n  Error,\r\n  Tests,\r\n  Settings,\r\n  History,\r\n  AddTest,\r\n  Home,\r\n  TakeTest,\r\n} from \"./pages\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { useContext } from \"react\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Header from \"./components/Header\";\r\nimport { AuthContext } from \"./context/AuthContext\";\r\n\r\nconst AuthenticatedRoute = (props) => {\r\n  const auth = useContext(AuthContext);\r\n  return (\r\n    <Route\r\n      render={() =>\r\n        auth.isAuthenticated() ? props.children : <Redirect to=\"/\" />\r\n      }\r\n    ></Route>\r\n  );\r\n};\r\n\r\nconst StudentRoute = (props) => {\r\n  const auth = useContext(AuthContext);\r\n  return (\r\n    <Route\r\n      render={() =>\r\n        auth.isAuthenticated() && auth.isStudent() ? (\r\n          props.children\r\n        ) : (\r\n          <Redirect to=\"/\" />\r\n        )\r\n      }\r\n    ></Route>\r\n  );\r\n};\r\n\r\nconst TeacherRoute = (props) => {\r\n  const auth = useContext(AuthContext);\r\n  return (\r\n    <Route\r\n      render={() =>\r\n        auth.isAuthenticated() && auth.isTeacher() ? (\r\n          props.children\r\n        ) : (\r\n          <Redirect to=\"/\" />\r\n        )\r\n      }\r\n    ></Route>\r\n  );\r\n};\r\n\r\nconst UnauthenticatedRoutes = () => (\r\n  <Switch>\r\n    <Route path=\"/login\">\r\n      <Login />\r\n    </Route>\r\n    <Route path=\"/register\">\r\n      <Register />\r\n    </Route>\r\n    <Route exact path=\"/\">\r\n      <Home />\r\n    </Route>\r\n    <Route path=\"*\">\r\n      <Error />\r\n    </Route>\r\n  </Switch>\r\n);\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Header></Header>\r\n      <Navbar></Navbar>\r\n      <Switch>\r\n        <AuthenticatedRoute path=\"/dashboard\">\r\n          <Dashboard type=\"teacher\"></Dashboard>\r\n        </AuthenticatedRoute>\r\n        <AuthenticatedRoute path=\"/tests\">\r\n          <Tests></Tests>\r\n        </AuthenticatedRoute>\r\n        {/* <StudentRoute path=\"/tests/takeTest\">\r\n          <TakeTest></TakeTest>\r\n        </StudentRoute> */}\r\n        <AuthenticatedRoute path=\"/history\">\r\n          <History></History>\r\n        </AuthenticatedRoute>\r\n        <TeacherRoute path=\"/addTest\">\r\n          <AddTest></AddTest>\r\n        </TeacherRoute>\r\n        <AuthenticatedRoute path=\"/settings\">\r\n          <Settings></Settings>\r\n        </AuthenticatedRoute>\r\n        <UnauthenticatedRoutes />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\Navbar.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\index.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\Assets\\theme.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\login.js",["153","154","155","156","157"],"import { Link, Redirect } from \"react-router-dom\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { AppContext } from \"../context/context\";\r\nimport { FormSuccess, FormError } from \"../components\";\r\nimport { Card, Button } from \"../components/defaultComponents\";\r\nimport styled from \"styled-components\";\r\nimport { Form, Col } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport theme from \"../Assets/theme\";\r\nimport { Formik, useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport { ImSpinner3 } from \"react-icons/im\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\n\r\nconst rootURL = \"http://localhost:5000/api\";\r\nfunction Login() {\r\n  const authContext = useContext(AuthContext);\r\n\r\n  const { setShowNavbar, setShowHeader, setAuthenticated, setUser } =\r\n    useContext(AppContext);\r\n  setShowNavbar(false);\r\n  setShowHeader(false);\r\n  const [type, setType] = useState(\"student\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [redirectOnLogin, setRedirectOnLogin] = useState(false);\r\n  const [loginSuccess, setLoginSuccess] = useState();\r\n  const [loginError, setLoginError] = useState();\r\n\r\n  const schema = yup.object().shape({\r\n    email: yup\r\n      .string()\r\n      .matches(\r\n        type === \"student\" ? /(@stud.ase.ro)/ : /(@ie.ase.ro)/,\r\n        \"Adresă nepotrivită pentru tipul de utilizator\",\r\n        {\r\n          excludeEmptyString: true,\r\n        }\r\n      )\r\n      .email(\"Adresă de email invalidă\")\r\n      .required(\"Nicio adresă de email\"),\r\n    password: yup.string().required(\"Nicio parolă introdusă\"),\r\n  });\r\n\r\n  async function login(user) {\r\n    console.log(user);\r\n    setIsLoading(true);\r\n    const response = await axios({\r\n      method: \"post\",\r\n      url: `${rootURL}/auth/login`,\r\n      data: user,\r\n    }).catch((err) => {\r\n      console.log(err.response.data.message);\r\n      setLoginError(err.response.data.message);\r\n      setLoginSuccess(null);\r\n    });\r\n    if (response) {\r\n      // console.log(response.data);\r\n      authContext.setAuthState(response.data);\r\n      setLoginError(null);\r\n      setLoginSuccess(response.data.message);\r\n      setTimeout(() => {\r\n        setRedirectOnLogin(true);\r\n      }, 1500);\r\n    }\r\n\r\n    setIsLoading(false);\r\n  }\r\n\r\n  function submitHandler(user) {\r\n    console.log(\"submitted\");\r\n    user.type = type;\r\n    login(user);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {redirectOnLogin && <Redirect to=\"/dashboard\" />}\r\n      <Wrapper>\r\n        <FormCard>\r\n          <Formik\r\n            validationSchema={schema}\r\n            // onSubmit={(values) => {\r\n            //   alert(JSON.stringify(values, null, 2));\r\n            // }}\r\n            onSubmit={(values) => {\r\n              submitHandler(values);\r\n            }}\r\n            initialValues={{\r\n              email: \"\",\r\n              password: \"\",\r\n            }}\r\n          >\r\n            {({\r\n              handleSubmit,\r\n              handleChange,\r\n              handleBlur,\r\n              values,\r\n              touched,\r\n              isValid,\r\n              errors,\r\n            }) => (\r\n              <Form noValidate onSubmit={handleSubmit}>\r\n                <Form.Group>\r\n                  {loginSuccess && <FormSuccess text={loginSuccess} />}\r\n                  {loginError && <FormError text={loginError} />}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                  <Form.Label>Adresă de email</Form.Label>\r\n                  <Form.Control\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    value={values.email}\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    placeholder=\"Introdu email\"\r\n                    isValid={touched.email && !errors.email}\r\n                    isInvalid={touched.email && !!errors.email}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.email}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                  <Form.Label>Parolă</Form.Label>\r\n                  <Form.Control\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    value={values.password}\r\n                    placeholder=\"Introdu Parola\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    isValid={touched.password && !errors.password}\r\n                    isInvalid={touched.password && !!errors.password}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.password}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicCheckbox\">\r\n                  <Form.Label>Tip cont</Form.Label>\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    // name=\"type\"\r\n                    // value={type}\r\n                    onChange={(e) => setType(e.target.value)}\r\n                    // onChange={(e) => setType(e.target.value)}\r\n                    // onBlur={handleBlur}\r\n                  >\r\n                    <option value=\"student\">Student</option>\r\n                    <option value=\"teacher\">Profesor</option>\r\n                  </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <LoginBtn variant=\"primary\" type=\"submit\">\r\n                    {isLoading ? (\r\n                      <span className=\"loadingContainer\">\r\n                        <ImSpinner3 className=\"icon-spin\"></ImSpinner3>\r\n                        <span className=\"loadingText\">Se încarcă...</span>\r\n                      </span>\r\n                    ) : (\r\n                      <p>Login</p>\r\n                    )}\r\n                    <p>Login</p>\r\n                  </LoginBtn>\r\n                </Form.Group>\r\n\r\n                <div class=\"sau\">\r\n                  <p>\r\n                    <span>sau</span>\r\n                  </p>\r\n                </div>\r\n\r\n                <Form.Group>\r\n                  <Link to=\"/register\" className=\"registerBtnContainer\">\r\n                    <RegisterBtn variant=\"secondary\" type=\"submit\">\r\n                      <p>Creează un cont</p>\r\n                    </RegisterBtn>\r\n                  </Link>\r\n                </Form.Group>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </FormCard>\r\n      </Wrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  height: 100vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  // .loginLink {\r\n  //   text-decoration: none;\r\n  // }\r\n  a {\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\nconst FormCard = styled(Card)`\r\n  width: 30em;\r\n  min-height 32em;\r\n\r\n  .loadingContainer {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    .loadingText {      \r\n      font-family: Roboto\r\n      margin-left: 2em;\r\n    }\r\n\r\n    .icon-spin {\r\n      margin-right: 0.5em;\r\n      -webkit-animation: icon-spin 2s infinite linear;\r\n              animation: icon-spin 2s infinite linear;\r\n    }\r\n    \r\n    @-webkit-keyframes icon-spin {\r\n      0% {\r\n        -webkit-transform: rotate(0deg);\r\n                transform: rotate(0deg);\r\n      }\r\n      100% {\r\n        -webkit-transform: rotate(359deg);\r\n                transform: rotate(359deg);\r\n      }\r\n    }\r\n    \r\n    @keyframes icon-spin {\r\n      0% {\r\n        -webkit-transform: rotate(0deg);\r\n                transform: rotate(0deg);\r\n      }\r\n      100% {\r\n        -webkit-transform: rotate(359deg);\r\n                transform: rotate(359deg);\r\n      }\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  .sau {\r\n    margin-top: 2em;\r\n    margin-bottom: 1em;\r\n    p {\r\n      \r\n      \r\n      width: 100%; \r\n      text-align: center; \r\n      border-bottom: 1px solid ${theme.Grey2}; \r\n      line-height: 0.1em;\r\n      margin: 10px 0 20px; \r\n      \r\n   } \r\n   \r\n   p span { \r\n       background:#fff; \r\n       padding:0 10px; \r\n       font-weight: bold;\r\n       color: ${theme.Grey1}\r\n   }\r\n  }\r\n\r\n`;\r\n\r\nconst LoginBtn = styled(Button)`\r\n  background: ${theme.mainBlue};\r\n  color: white;\r\n  margin-top: 2em;\r\n  font-size: 1rem;\r\n  font-weight: bold;\r\n  height: 2em;\r\n  width: 20em;\r\n  margin-left: 0;\r\n  margin-right: 0;\r\n  width: 100%;\r\n  border: none;\r\n\r\n  &:hover {\r\n    background: ${theme.mainBlue};\r\n    color: white;\r\n  }\r\n`;\r\n\r\nconst RegisterBtn = styled(Button)`\r\n  background: white;\r\n  color: ${theme.mainBlue};\r\n  margin-top: 2em;\r\n  font-size: 1rem;\r\n  font-weight: bold;\r\n  height: 2em;\r\n  width: 20em;\r\n  margin-left: 0;\r\n  margin-right: 0;\r\n  width: 100%;\r\n  border: 1px solid ${theme.Grey1};\r\n  box-sizing: border-box;\r\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.08);\r\n  border-radius: 5px;\r\n\r\n  &:hover {\r\n    background: white;\r\n    color: ${theme.mainBlue};\r\n  }\r\n`;\r\n\r\nexport default Login;\r\n","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\tests.js",["158","159","160","161","162","163"],"import { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  Route,\r\n  Switch,\r\n  withRouter,\r\n  Redirect,\r\n  useRouteMatch,\r\n  useLocation,\r\n} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { TakeTest } from \".\";\r\nimport { TestsGrid, TestsTable, Loader } from \"../components/\";\r\nimport { AppContext, AuthContext, utils } from \"../context\";\r\n\r\nconst rootURL = utils.rootURL;\r\n\r\nfunction Tests() {\r\n  const user = useContext(AuthContext).authState.userInfo;\r\n\r\n  // const { authState } = auth;\r\n  // const user = authState.userInfo;\r\n  const [tests, setTests] = useState();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [redirectToTakeTest, setRedirectToTakeTest] = useState(false);\r\n  const { path } = useRouteMatch();\r\n  const { testState, setTestInProgress } = useContext(AppContext);\r\n\r\n  // const { setShowNavbar } = useContext(AppContext);\r\n  // setShowNavbar(false);\r\n\r\n  const handleCallback = (childData) => {\r\n    const clickedTestId = parseInt(childData);\r\n    const clickedTest = tests.find((item) => item.id === clickedTestId);\r\n    // console.log(clickedTest);\r\n    setTestInProgress(clickedTest);\r\n    setRedirectToTakeTest(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getStudentDueTests(user, setIsLoading, setTests);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(tests);\r\n  }, [tests]);\r\n\r\n  return (\r\n    <>\r\n      {redirectToTakeTest && <Redirect to=\"tests/takeTest\" />}\r\n      {isLoading ? (\r\n        <Loader></Loader>\r\n      ) : (\r\n        <Switch>\r\n          <Route path={`/tests/takeTest`}>\r\n            <TakeTest></TakeTest>\r\n          </Route>\r\n\r\n          <Route\r\n            path=\"/tests\"\r\n            // exact={true}\r\n            render={(props) => (\r\n              <TestsTable\r\n                title=\"Teste Programate\"\r\n                data={tests}\r\n                callback={handleCallback}\r\n              ></TestsTable>\r\n            )}\r\n          />\r\n        </Switch>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst getStudentDueTests = async (user, setIsLoading, setTests) => {\r\n  console.log(\"getting tests from db..\");\r\n\r\n  setIsLoading(true);\r\n  const response = await axios\r\n    .get(`${rootURL}/students/${user.id}/due`)\r\n    .catch((err) => console.log(err));\r\n\r\n  if (response) {\r\n    setTests(response.data);\r\n  }\r\n  setIsLoading(false);\r\n};\r\n\r\nexport default Tests;\r\n","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\register.js",["164","165","166"],"import { Link, Redirect } from \"react-router-dom\";\r\nimport React, { useEffect, useState, useContext } from \"react\";\r\nimport { AppContext } from \"../context/context\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport { Card, Button } from \"../components/defaultComponents\";\r\nimport { FormSuccess, FormError } from \"../components\";\r\nimport styled from \"styled-components\";\r\nimport { Form, Col } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport theme from \"../Assets/theme\";\r\nimport { Formik, useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport { ImSpinner3 } from \"react-icons/im\";\r\n\r\nconst rootURL = \"http://localhost:5000/api\";\r\n\r\nfunction Register() {\r\n  const { setShowNavbar, setShowHeader } = useContext(AppContext);\r\n  const authContext = useContext(AuthContext);\r\n  setShowNavbar(false);\r\n  setShowHeader(false);\r\n  const [type, setType] = useState(\"student\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [registerSuccess, setRegisterSuccess] = useState();\r\n  const [registerError, setRegisterError] = useState();\r\n  const [redirectOnRegister, setRedirectOnRegister] = useState(false);\r\n\r\n  const schema = yup.object().shape({\r\n    firstName: yup.string().required(\"Niciun nume introdus\"),\r\n    // .matches(/^[aA-zZ\\s]+$/, \"Doar litere\"),\r\n    lastName: yup.string().required(\"Niciun nume introdus\"),\r\n    // .matches(/^[aA-zZ\\s]+$/, \"Doar litere\"),\r\n    email: yup\r\n      .string()\r\n      .matches(\r\n        type === \"student\" ? /(@stud.ase.ro)/ : /(@ie.ase.ro)/,\r\n        \"Adresă nepotrivită pentru tipul de utilizator\",\r\n        {\r\n          excludeEmptyString: true,\r\n        }\r\n      )\r\n      .email(\"Adresă de email invalidă\")\r\n      .required(\"Nicio adresă de email\"),\r\n    password: yup.string().required(\"Nicio parolă introdusă\"),\r\n  });\r\n\r\n  async function register(user) {\r\n    console.log(user);\r\n    setIsLoading(true);\r\n    const response = await axios({\r\n      method: \"post\",\r\n      url: `${rootURL}/auth/register`,\r\n      data: user,\r\n    }).catch((err) => {\r\n      // console.log(err.response.data.message);\r\n      setRegisterError(err.response.data.message);\r\n      setRegisterSuccess(null);\r\n    });\r\n    if (response) {\r\n      // console.log(response.data);\r\n      authContext.setAuthState(response.data);\r\n      setRegisterSuccess(response.data.message);\r\n      setRegisterError(null);\r\n      setTimeout(() => {\r\n        setRedirectOnRegister(true);\r\n      }, 1500);\r\n    }\r\n    setIsLoading(false);\r\n  }\r\n\r\n  function submitHandler(user) {\r\n    console.log(\"submitted\");\r\n    user.type = type;\r\n    register(user);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {redirectOnRegister && <Redirect to=\"/dashboard\" />}\r\n      <Wrapper>\r\n        <FormCard>\r\n          <Formik\r\n            validationSchema={schema}\r\n            // onSubmit={(values) => {\r\n            //   alert(JSON.stringify(values, null, 2));\r\n            // }}\r\n            onSubmit={(values) => {\r\n              submitHandler(values);\r\n            }}\r\n            initialValues={{\r\n              firstName: \"\",\r\n              lastName: \"\",\r\n              email: \"\",\r\n              password: \"\",\r\n            }}\r\n          >\r\n            {({\r\n              handleSubmit,\r\n              handleChange,\r\n              handleBlur,\r\n              values,\r\n              touched,\r\n              isValid,\r\n              errors,\r\n            }) => (\r\n              <Form noValidate onSubmit={handleSubmit}>\r\n                <Form.Group>\r\n                  {registerSuccess && <FormSuccess text={registerSuccess} />}\r\n                  {registerError && <FormError text={registerError} />}\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Label>Nume</Form.Label>\r\n                  <Form.Control\r\n                    name=\"lastName\"\r\n                    type=\"lastName\"\r\n                    value={values.lastName}\r\n                    placeholder=\"Introdu numele\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    isValid={touched.lastName && !errors.lastName}\r\n                    isInvalid={touched.lastName && !!errors.lastName}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.lastName}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Label>Prenume</Form.Label>\r\n                  <Form.Control\r\n                    name=\"firstName\"\r\n                    type=\"firstName\"\r\n                    value={values.firstName}\r\n                    placeholder=\"Introdu prenumele\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    isValid={touched.firstName && !errors.firstName}\r\n                    isInvalid={touched.firstName && !!errors.firstName}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.firstName}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                  <Form.Label>Adresă de email</Form.Label>\r\n                  <Form.Control\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    value={values.email}\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    placeholder=\"Introdu email\"\r\n                    isValid={touched.email && !errors.email}\r\n                    isInvalid={touched.email && !!errors.email}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.email}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                  <Form.Label>Parolă</Form.Label>\r\n                  <Form.Control\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    value={values.password}\r\n                    placeholder=\"Introdu Parola\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    isValid={touched.password && !errors.password}\r\n                    isInvalid={touched.password && !!errors.password}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.password}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicCheckbox\">\r\n                  <Form.Label>Tip cont</Form.Label>\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    // name=\"type\"\r\n                    // value={type}\r\n                    onChange={(e) => setType(e.target.value)}\r\n                    // onChange={(e) => setType(e.target.value)}\r\n                    // onBlur={handleBlur}\r\n                  >\r\n                    <option value=\"student\">Student</option>\r\n                    <option value=\"teacher\">Profesor</option>\r\n                  </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <LoginBtn variant=\"secondary\" type=\"submit\">\r\n                    {isLoading ? (\r\n                      <span className=\"loadingContainer\">\r\n                        <ImSpinner3 className=\"icon-spin\"></ImSpinner3>\r\n                        <span className=\"loadingText\">Se încarcă...</span>\r\n                      </span>\r\n                    ) : (\r\n                      <p>Creează cont</p>\r\n                    )}\r\n                  </LoginBtn>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"alreadyHaveContainer\">\r\n                  <p>Ai deja un cont?</p>\r\n                  <Link to=\"/login\" className=\"loginText\">\r\n                    Login\r\n                  </Link>\r\n                </Form.Group>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </FormCard>\r\n      </Wrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  height: 100vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  // .loginLink {\r\n  //   text-decoration: none;\r\n  // }\r\n  a {\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\nconst FormCard = styled(Card)`\r\n  width: 30em;\r\n  min-height 32em;\r\n\r\n  .loadingContainer {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    .loadingText {      \r\n      font-family: Roboto\r\n      margin-left: 2em;\r\n    }\r\n\r\n    .icon-spin {\r\n      margin-right: 0.5em;\r\n      -webkit-animation: icon-spin 2s infinite linear;\r\n              animation: icon-spin 2s infinite linear;\r\n    }\r\n    \r\n    @-webkit-keyframes icon-spin {\r\n      0% {\r\n        -webkit-transform: rotate(0deg);\r\n                transform: rotate(0deg);\r\n      }\r\n      100% {\r\n        -webkit-transform: rotate(359deg);\r\n                transform: rotate(359deg);\r\n      }\r\n    }\r\n    \r\n    @keyframes icon-spin {\r\n      0% {\r\n        -webkit-transform: rotate(0deg);\r\n                transform: rotate(0deg);\r\n      }\r\n      100% {\r\n        -webkit-transform: rotate(359deg);\r\n                transform: rotate(359deg);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n .alreadyHaveContainer {\r\n   font-size: 0.9rem;\r\n   color: ${theme.Grey1};   \r\n  font-style: normal;\r\n  font-weight: bold;\r\n   background: white;\r\n   display: flex;\r\n   direction: row;\r\n\r\n   .loginText{\r\n     margin-left: 0.5em;\r\n     font-weight: normal;\r\n   }\r\n   \r\n }\r\n\r\n`;\r\n\r\nconst LoginBtn = styled(Button)`\r\n  background: ${theme.mainOrange};\r\n  color: white;\r\n  margin: 0;\r\n  margin-top: 2em;\r\n  font-size: 1rem;\r\n  font-weight: bold;\r\n  height: 2em;\r\n  width: 20em;\r\n  width: 100%;\r\n  border: none;\r\n\r\n  &:hover {\r\n    background: ${theme.mainOrange};\r\n    color: white;\r\n  }\r\n`;\r\n\r\nexport default Register;\r\n","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\dashboard.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\error.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\history.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\settings.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\Header.js",["167","168","169","170","171","172","173"],"import { DefaultNavbar } from \"./defaultComponents\";\r\nimport { FaRegUserCircle, FaArrowLeft } from \"react-icons/fa\";\r\nimport { MdMenu } from \"react-icons/md\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport styled from \"styled-components\";\r\nimport logo from \"../Assets/logo.svg\";\r\nimport { useHistory, withRouter } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport { AppContext } from \"../context/context\";\r\nimport AvatarDropdown from \"./AvatarDropdown\";\r\n\r\nfunction Header() {\r\n  const { showHeader } = React.useContext(AppContext);\r\n  const history = useHistory();\r\n  function goBack() {\r\n    history.goBack();\r\n  }\r\n\r\n  return !showHeader ? null : (\r\n    <Wrapper>\r\n      <nav>\r\n        <div>\r\n          <AvatarDropdown></AvatarDropdown>\r\n        </div>\r\n      </nav>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  // justify-content: end;\r\n\r\n  nav {\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n  }\r\n`;\r\n\r\nexport default withRouter(Header);\r\n","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\defaultComponents.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\NavbarDataStudent.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\NavbarDataTeacher.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\context\\context.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\takeTest.js",["174","175","176","177","178","179","180"],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\CodeEditor.js",["181","182","183"],"import React, { useEffect, useState } from \"react\";\r\nimport AceEditor from \"react-ace\";\r\nimport { AppContext } from \"../context/context\";\r\n\r\nimport \"ace-builds/src-noconflict/theme-tomorrow\";\r\nimport \"ace-builds/src-noconflict/ext-language_tools\";\r\n\r\nfunction CodeEditor(props) {\r\n  require(`ace-builds/src-noconflict/mode-${props.language}`);\r\n  require(`ace-builds/src-noconflict/snippets/${props.language}`);\r\n\r\n  const { setCodeEditorText, codeEditorText } = React.useContext(AppContext);\r\n\r\n  function onChange(newValue) {\r\n    setCodeEditorText(newValue);\r\n    props.callback(newValue);\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   console.log(\"frumos\");\r\n  //   console.log(props.defaultCode);\r\n  // }, [props.defaultCode]);\r\n\r\n  return (\r\n    <AceEditor\r\n      width=\"undefined\"\r\n      height=\"20em\"\r\n      mode={`${props.language}`}\r\n      theme=\"tomorrow\"\r\n      onChange={onChange}\r\n      name=\"UNIQUE_ID_OF_DIV\"\r\n      fontSize={20}\r\n      // defaultValue={props.defaultCode}\r\n      value={props.value}\r\n      showPrintMargin={true}\r\n      showGutter={true}\r\n      wrapEnabled={true}\r\n      highlightActiveLine={false}\r\n      setOptions={{\r\n        useWorker: false,\r\n        enableBasicAutocompletion: true,\r\n        enableLiveAutocompletion: true,\r\n        enableSnippets: true,\r\n        showLineNumbers: true,\r\n        tabSize: 4,\r\n        highlightActiveLine: true,\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default CodeEditor;\r\n","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\testsGrid.js",["184","185","186","187","188","189"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { AppContext } from \"../context/context\";\r\nimport { Card } from \"../components/defaultComponents\";\r\nimport {\r\n  Route,\r\n  Link,\r\n  useRouteMatch,\r\n  withRouter,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport theme from \"../Assets/theme\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\n\r\nconst rootURL = \"http://localhost:5000/api\";\r\n\r\nfunction TestsGrid(props) {\r\n  const { testInProgress, setTestInProgress } = useContext(AppContext);\r\n  // setShowHeader(true);\r\n\r\n  const auth = useContext(AuthContext);\r\n  const { authState } = auth;\r\n  const user = authState.userInfo;\r\n\r\n  const { url } = useRouteMatch();\r\n\r\n  const [tests, setTests] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [clickedTest, setClickedTest] = useState();\r\n\r\n  useEffect(() => {\r\n    getStudentTests(user);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(tests);\r\n  }, [tests]);\r\n\r\n  const getStudentTests = async (user) => {\r\n    console.log(\"getting tests from db..\");\r\n    setIsLoading(true);\r\n    const response = await axios\r\n      .get(`${rootURL}/students/${user.id}/due`)\r\n      .catch((err) => console.log(err));\r\n\r\n    if (response) {\r\n      setTests(response.data);\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (clickedTest) {\r\n      setTestInProgress(clickedTest);\r\n      console.log(testInProgress);\r\n    }\r\n  }, [clickedTest]);\r\n\r\n  const testClicked = (e) => {\r\n    if (testInProgress.id < 0) {\r\n      console.log(\"clicked card with id \" + e.target.id);\r\n      const clickedTest = tests.find((test) => test.id == e.target.id);\r\n      // props.parentCallBack(clickedTest);\r\n      setClickedTest(clickedTest);\r\n      e.preventDefault();\r\n    } else {\r\n      console.log(\"test already in progress\");\r\n      console.log(testInProgress);\r\n      e.preventDefault();\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Wrapper>\r\n        {\" \"}\r\n        <div>\r\n          <h1>Tests are loading..</h1>\r\n        </div>\r\n      </Wrapper>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      {clickedTest && <Redirect to={`${url}/takeTest`} />}\r\n      <Wrapper>\r\n        {tests.map((test) => (\r\n          <div key={test.id}>\r\n            {/* <Link onClick=> */}\r\n            <StyledCard id={test.id} onClick={testClicked}>\r\n              {test.titlu}\r\n            </StyledCard>\r\n            {/* </Link> */}\r\n          </div>\r\n        ))}\r\n      </Wrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  width: 50%;\r\n  a {\r\n    text-decoration: none;\r\n  }\r\n  position: fixed;\r\n  // // align-items: center;\r\n  // // justify-content: center;\r\n  // font-size: 1rem;\r\n  background: ${theme.mainGrey};\r\n  margin-left: 30%;\r\n  margin-top: 10em;\r\n  overflow-y: auto;\r\n`;\r\n\r\nconst TestsContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst StyledCard = styled(Card)`\r\n  cursor: pointer;\r\n  // width: 20vw;\r\n  margin-top: 1%;\r\n  margin-bottom: 1%;\r\n`;\r\n\r\nexport default withRouter(TestsGrid);\r\n","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\index.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\defaultCodeData.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\addTest.js",["190","191","192","193","194","195","196"],"import styled from \"styled-components\";\r\nimport { Form, Col } from \"react-bootstrap\";\r\nimport { FormSuccess, FormError } from \"../components\";\r\nimport { AppContext } from \"../context/context\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport { Button, Card } from \"../components/defaultComponents\";\r\nimport theme from \"../Assets/theme\";\r\nimport { Loader } from \"../components\";\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { MdAddCircleOutline, MdRemoveCircleOutline } from \"react-icons/md\";\r\nimport { ImSpinner3 } from \"react-icons/im\";\r\n\r\nconst rootURL = \"http://localhost:5000/api\";\r\n\r\nfunction AddTest() {\r\n  const auth = useContext(AuthContext);\r\n  const { authState } = auth;\r\n  const user = authState.userInfo;\r\n\r\n  const { judge0Languges, setShowHeader } = React.useContext(AppContext);\r\n  setShowHeader(true);\r\n\r\n  //set success error messages\r\n  const [formSuccess, setFormSuccess] = useState();\r\n  const [formError, setFormError] = useState();\r\n\r\n  //set static components on load\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [subjects, setSubjects] = useState([]);\r\n  const [groups, setGroups] = useState();\r\n  const [areGroupsLoading, setAreGroupsLoading] = useState(true);\r\n\r\n  //form controlled input fields\r\n  const [selectedSubject, setSelectedSubject] = useState(-1);\r\n  const [selectedGroup, setSelectedGroup] = useState();\r\n  const [language, setLanguage] = useState(judge0Languges[0].id);\r\n  const [code, setCode] = useState();\r\n  const [title, setTitle] = useState();\r\n  const [expectedAnswer, setExpectedAnswer] = useState(\"\");\r\n  const [date, setDate] = useState(new Date());\r\n  const [questions, setQuestions] = useState([\r\n    { id: 0, questionBody: \"\", expectedAnswer: \"\" },\r\n  ]);\r\n  // const [expectedAnswers, setExpectedAnswers] = useState([])\r\n\r\n  //onMount\r\n  useEffect(() => {\r\n    getSubjects(user);\r\n  }, []);\r\n\r\n  function subjectChanged(id) {\r\n    setSelectedSubject(id);\r\n    if (id > 0) {\r\n      getGroups(id);\r\n    }\r\n  }\r\n  async function getGroups(subjectId) {\r\n    console.log(\"getting groups from db...\");\r\n    setAreGroupsLoading(true);\r\n    const response = await axios({\r\n      method: \"get\",\r\n      url: `${rootURL}/subjects/${subjectId}/groups`,\r\n    }).catch((err) => console.log(err));\r\n\r\n    if (response) {\r\n      console.log(response.data);\r\n      setGroups(response.data);\r\n      setSelectedGroup(response.data[0].grupa);\r\n    }\r\n    setAreGroupsLoading(false);\r\n  }\r\n\r\n  async function getSubjects(user) {\r\n    console.log(\"getting subjects from db...\");\r\n    setIsLoading(true);\r\n    const response = await axios({\r\n      method: \"get\",\r\n      url: `${rootURL}/teachers/${user.id}/subjects`,\r\n    }).catch((err) => console.log(err));\r\n\r\n    if (response) {\r\n      console.log(response.data);\r\n      setSubjects(response.data);\r\n    }\r\n    setIsLoading(false);\r\n  }\r\n\r\n  function addQuestionBtnHandler(e) {\r\n    console.log(\"addQuestionBtnHandler\");\r\n\r\n    const lastQuestion = questions[questions.length - 1];\r\n\r\n    setQuestions((questions) =>\r\n      questions.concat({\r\n        id: lastQuestion.id + 1,\r\n        questionBody: \"\",\r\n        expectedAnswer: \"\",\r\n      })\r\n    );\r\n  }\r\n  function removeQuestionBtnHandler(e) {\r\n    console.log(\"removeQuestionBtnHandler\");\r\n    const lastQuestion = questions[questions.length - 1];\r\n    setQuestions((items) =>\r\n      items.filter((item) => {\r\n        return item.id !== lastQuestion.id;\r\n      })\r\n    );\r\n  }\r\n  function handleQuestionsChange(e, index) {\r\n    // 1. Make a shallow copy of the array\r\n    console.log(index);\r\n    let temp_state = [...questions];\r\n\r\n    // 2. Make a shallow copy of the element you want to mutate\r\n    let temp_element = { ...questions.find((x) => x.id === index) };\r\n\r\n    // 3. Update the property you're interested in\r\n    temp_element.questionBody = e.target.value;\r\n\r\n    // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\r\n    temp_state[index] = temp_element;\r\n\r\n    // 5. Set the state to our new copy\r\n    setQuestions(temp_state);\r\n    // console.log(questions.find((x) => x.id === index).questionBody);\r\n  }\r\n\r\n  function handleExpectedResultChange(e, index) {\r\n    // 1. Make a shallow copy of the array\r\n    console.log(index);\r\n    let temp_state = [...questions];\r\n\r\n    // 2. Make a shallow copy of the element you want to mutate\r\n    let temp_element = { ...questions.find((x) => x.id === index) };\r\n\r\n    // 3. Update the property you're interested in\r\n    temp_element.expectedAnswer = e.target.value;\r\n\r\n    // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\r\n    temp_state[index] = temp_element;\r\n\r\n    // 5. Set the state to our new copy\r\n    setQuestions(temp_state);\r\n    // console.log(questions.find((x) => x.id === index).questionBody);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const test = {\r\n      title: title,\r\n      deadline: date,\r\n      subjectId: selectedSubject,\r\n      languageId: language,\r\n      questions: questions,\r\n      group: selectedGroup,\r\n    };\r\n    console.log(test);\r\n    postTest(test);\r\n    console.log(date.getTimezoneOffset());\r\n  }\r\n\r\n  async function postTest(test) {\r\n    console.log(\"posting assignment...\");\r\n    setIsLoading(true);\r\n\r\n    const response = await axios({\r\n      method: \"post\",\r\n      url: `${rootURL}/assignments/create`,\r\n      data: test,\r\n    }).catch((err) => {\r\n      console.log(err.response.data.message);\r\n      setFormError(err.response.data.message);\r\n      setTimeout(() => {\r\n        setFormError(null);\r\n      }, 3000);\r\n      setFormSuccess(null);\r\n    });\r\n\r\n    if (response) {\r\n      console.log(response.data);\r\n      setFormError(null);\r\n      setFormSuccess(response.data.message);\r\n      setTimeout(() => {\r\n        setFormSuccess(null);\r\n      }, 5000);\r\n    }\r\n    setIsLoading(false);\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <FormTitle className=\"formTitle\">Adaugă Test</FormTitle>\r\n      <Form.Group>\r\n        {formSuccess && <FormSuccess text={formSuccess} />}\r\n        {formError && <FormError text={formError} />}\r\n      </Form.Group>\r\n      <Form className=\"addTestForm\">\r\n        <Form.Row>\r\n          <Form.Group as={Col} controlId=\"testTitle\">\r\n            <Form.Label>Titlu test</Form.Label>\r\n            <Form.Control onChange={(e) => setTitle(e.target.value)} />\r\n          </Form.Group>\r\n          <Form.Group as={Col} controlId=\"programmingLanguages\">\r\n            <Form.Label>Limbaj de programare</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              onChange={(e) => setLanguage(e.target.value)}\r\n            >\r\n              {judge0Languges.map((language) => (\r\n                <option value={language.id} key={language.id}>\r\n                  {language.name}\r\n                </option>\r\n              ))}\r\n            </Form.Control>\r\n          </Form.Group>\r\n        </Form.Row>\r\n        <Form.Row>\r\n          <Form.Group as={Col} controlId=\"subjects\">\r\n            <Form.Label>Materie</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              onChange={(e) => subjectChanged(e.target.value)}\r\n            >\r\n              <option value={-1}>Selectează</option>\r\n              {subjects.map((subject) => (\r\n                <option value={subject.id} id={subject.id}>\r\n                  {subject.descriere}\r\n                </option>\r\n              ))}\r\n            </Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Col} controlId=\"StudentGroups\">\r\n            <Form.Label>Grupa</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              onChange={(e) => setSelectedGroup(e.target.value)}\r\n            >\r\n              {areGroupsLoading && selectedSubject == -1 && (\r\n                <option value={-1}>nicio grupa pentru materia selectată</option>\r\n              )}\r\n              {!areGroupsLoading &&\r\n                groups &&\r\n                selectedSubject > 0 &&\r\n                groups.map((item) => (\r\n                  <option value={item.grupa}>{item.grupa}</option>\r\n                ))}\r\n            </Form.Control>\r\n          </Form.Group>\r\n        </Form.Row>\r\n\r\n        <div className=\"questionsContainer\">\r\n          {questions.map((question, index) => (\r\n            <Form.Row className=\"questionRow\">\r\n              <Form.Group as={Col} controlId=\"Problem\">\r\n                <Form.Label>Problema {question.id}</Form.Label>\r\n                <Form.Control\r\n                  as=\"textarea\"\r\n                  rows={1}\r\n                  // value={questions.find((x) => x.id === index).questionBody}\r\n                  onChange={(e) => handleQuestionsChange(e, index)}\r\n                />\r\n              </Form.Group>\r\n              <Col>\r\n                <Form.Label>Rezultat așteptat</Form.Label>\r\n                <Form.Control\r\n                  // value={questions.find((x) => x.id === index).expectedAnswer}\r\n                  onChange={(e) => handleExpectedResultChange(e, index)}\r\n                />\r\n              </Col>\r\n              {!questions[index + 1] && index !== 0 ? (\r\n                <MdRemoveCircleOutline\r\n                  className=\"addQuestionBtn\"\r\n                  onClick={removeQuestionBtnHandler}\r\n                ></MdRemoveCircleOutline>\r\n              ) : (\r\n                <MdAddCircleOutline\r\n                  className=\"addQuestionBtn\"\r\n                  onClick={addQuestionBtnHandler}\r\n                ></MdAddCircleOutline>\r\n              )}\r\n            </Form.Row>\r\n          ))}\r\n        </div>\r\n        <Form.Row>\r\n          <Col className=\"datePickerColumn\">\r\n            <DatePicker\r\n              wrapperClassName=\"datepicker\"\r\n              customInput={<ExampleCustomInput />}\r\n              selected={date}\r\n              onChange={(date) => setDate(date)}\r\n              showTimeSelect\r\n              timeFormat=\"HH:mm\"\r\n              timeIntervals={15}\r\n              timeCaption=\"Timp\"\r\n              dateFormat=\"d MMMM, yyyy HH:mm\"\r\n              fixedHeight\r\n              popperPlacement=\"top-end\"\r\n            />\r\n          </Col>\r\n        </Form.Row>\r\n\r\n        <Form.Row className=\"justify-content-center\">\r\n          <SendBtn primary onClick={(e) => handleSubmit(e)}>\r\n            {isLoading ? (\r\n              <span className=\"loadingContainer\">\r\n                <ImSpinner3 className=\"icon-spin\"></ImSpinner3>\r\n                <span className=\"loadingText\">Se încarcă...</span>\r\n              </span>\r\n            ) : (\r\n              <p>Trimite</p>\r\n            )}\r\n            {/* <p>Trimite</p> */}\r\n          </SendBtn>\r\n        </Form.Row>\r\n      </Form>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst ExampleCustomInput = React.forwardRef(({ value, onClick }, ref) => (\r\n  <div className=\"timePickerBox\" onClick={onClick} ref={ref}>\r\n    <div className=\"deadlineText\">{`Deadline:`}</div>\r\n    {value}\r\n  </div>\r\n));\r\n\r\nconst SendBtn = styled(Button)`\r\nbackground: ${theme.mainBlue};\r\ncolor: white;\r\nmargin-top: 2em;\r\nfont-size: 1rem;\r\nfont-weight: bold;\r\nheight: 2em;\r\nwidth: 20em;\r\nmargin-left: 0;\r\nmargin-right: 0;\r\nwidth: 100%;\r\nborder: none;\r\n\r\n&:hover {\r\n  background: ${theme.mainBlue};\r\n  color: white;\r\n}\r\n  .loadingContainer {\r\n    display: flex;\r\n    \r\n    justify-content: center;\r\n    align-items: center;\r\n    .loadingText {      \r\n      font-family: Roboto\r\n      margin-left: 2em;\r\n    }\r\n\r\n    .icon-spin {\r\n      margin-right: 0.5em;\r\n      -webkit-animation: icon-spin 2s infinite linear;\r\n              animation: icon-spin 2s infinite linear;\r\n    }\r\n    \r\n    @-webkit-keyframes icon-spin {\r\n      0% {\r\n        -webkit-transform: rotate(0deg);\r\n                transform: rotate(0deg);\r\n      }\r\n      100% {\r\n        -webkit-transform: rotate(359deg);\r\n                transform: rotate(359deg);\r\n      }\r\n    }\r\n    \r\n    @keyframes icon-spin {\r\n      0% {\r\n        -webkit-transform: rotate(0deg);\r\n                transform: rotate(0deg);\r\n      }\r\n      100% {\r\n        -webkit-transform: rotate(359deg);\r\n                transform: rotate(359deg);\r\n      }\r\n    }\r\n  }\r\n\r\n  }\r\n  p {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nconst FormTitle = styled.p`\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 2rem;\r\n  margin-bottom: 1em;\r\n`;\r\n\r\nconst Wrapper = styled(Card)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 40%;\r\n  margin-left: 37%;\r\n  height: 100%;\r\n\r\n  margin-top: 7%;\r\n  // padding-left: 5%;\r\n  // padding-right: 5%;\r\n  // padding-bottom: 10%;\r\n  // padding-top: 5%;\r\n\r\n  .addTestForm {\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n  .plus {\r\n    margin-right: 10px;\r\n  }\r\n  .questionsContainer {\r\n    max-height: 12em;\r\n    overflow-y: auto;\r\n    overflow-x: hidden;\r\n  }\r\n\r\n  .addQuestionBtn {\r\n    align-self: center;\r\n    margin-top: 15px;\r\n    margin-right: 15px;\r\n    margin-left: 15px;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .datePickerColumn {\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n\r\n  .timePickerBox {\r\n    display: flex;\r\n    width: 100%;\r\n    height: calc(1.5em + 0.75rem + 2px);\r\n    padding: 0.375rem 0.75rem;\r\n    font-size: 1rem;\r\n    font-weight: 400;\r\n    line-height: 1.5;\r\n    color: #495057;\r\n    background-color: #fff;\r\n    background-clip: padding-box;\r\n    border: 1px solid #ced4da;\r\n    border-radius: 0.25rem;\r\n    transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\r\n  }\r\n\r\n  .deadlineText {\r\n    margin-right: 10px;\r\n    font-weight: 600;\r\n  }\r\n`;\r\n\r\nexport default AddTest;\r\n","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\Loader.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\FormSucces.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\FormError.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\context\\AuthContext.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\home.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\AvatarDropdown.js",["197"],"import React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { FaCaretDown, FaSignOutAlt } from \"react-icons/fa\";\r\nimport { FaFontAwesome } from \"react-icons/fa\";\r\nimport { AiOutlineLogout } from \"react-icons/ai\";\r\n//   import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport defaultAvatar from \"../Assets/images/defaultAvatar.png\";\r\nimport { Button } from \"./defaultComponents\";\r\nimport styled from \"styled-components\";\r\n\r\nconst DropdownItem = ({ item }) => (\r\n  <Button className=\"dropDownItemContiner\" onClick={item.onClick}>\r\n    <AiOutlineLogout />\r\n    <p className=\"dropDownItemTitle\">{item.title}</p>\r\n  </Button>\r\n);\r\n\r\nconst DropdownContent = ({ dropdownItems }) => {\r\n  return (\r\n    <div className=\"dropDownContent\">\r\n      {dropdownItems.map((item, i) => {\r\n        return (\r\n          <div className=\"mt-1\" key={i}>\r\n            <DropdownItem item={item} />\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AvatarDropdown = () => {\r\n  const node = useRef();\r\n  const auth = useContext(AuthContext);\r\n  const { authState } = auth;\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n\r\n  const dropdownItems = [\r\n    {\r\n      title: \"Log Out\",\r\n      icon: FaSignOutAlt,\r\n      onClick: auth.logout,\r\n    },\r\n  ];\r\n\r\n  const handleClick = (e) => {\r\n    if (!node.current.contains(e.target)) {\r\n      setDropdownOpen(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"mousedown\", handleClick);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClick);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div ref={node}>\r\n        <Button\r\n          ref={node}\r\n          className=\"ButtonContainer\"\r\n          onClick={() => setDropdownOpen(!dropdownOpen)}\r\n        >\r\n          <img src={defaultAvatar} className=\"avatarImg\" alt=\"Avatar\" />\r\n          <div className=\"logoutTextContainer\">\r\n            <p className=\"logoutText\">{authState.userInfo.nume}</p>\r\n            {/* <p className=\"logoutText\">{authState.userInfo.prenume}</p> */}\r\n          </div>\r\n          <div className=\"dropDownCaret\">\r\n            <FaCaretDown></FaCaretDown>\r\n          </div>\r\n        </Button>\r\n\r\n        {dropdownOpen && (\r\n          <div className=\"dropDownItems\">\r\n            <DropdownContent dropdownItems={dropdownItems} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  flex-direction: column;\r\n  margin-right: 4rem;\r\n  justify-items: flex-end;\r\n\r\n  .ButtonContainer {\r\n    display: flex;\r\n    border-radius: 3px;\r\n    padding: 3px;\r\n    margin-bottom: 0;\r\n    align-items: center;\r\n    &:focus {\r\n      outline: 2px solid transparent;\r\n      outline-offset: 2px;\r\n    }\r\n    --tw-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1),\r\n      0 4px 6px -2px rgba(0, 0, 0, 0.05);\r\n    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),\r\n      var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);\r\n  }\r\n\r\n  .avatarImg {\r\n    width: 1.5rem;\r\n    border-radius: 9999px;\r\n    border-width: 2px;\r\n    --tw-border-opacity: 1;\r\n    border-color: rgba(255, 255, 255, var(--tw-border-opacity));\r\n  }\r\n\r\n  .logoutTextContainer {\r\n    padding: 3px;\r\n    display: flex;\r\n    align-items: center;\r\n    div {\r\n      margin: 0;\r\n    }\r\n    p {\r\n      margin-bottom: 0;\r\n      margin-left: 0.5rem;\r\n    }\r\n  }\r\n\r\n  //   .logoutText {\r\n  //     text-color: white;\r\n  //   }\r\n\r\n  .dropDownCaret {\r\n    margin: 0.25rem;\r\n  }\r\n  .dropDownItems {\r\n    position: absolute;\r\n    right: 6rem;\r\n  }\r\n  .dropDownContent {\r\n    // width: 100%;\r\n    // margin-right: 2rem;\r\n  }\r\n  .dropDownItemContiner {\r\n    display: flex;\r\n    align-items: center;\r\n    width: 100%;\r\n    // position: relative;\r\n    // padding: 1rem;\r\n    padding-top: 0.5rem;\r\n    padding-bottom: 0.5rem;\r\n    padding-right: 0;\r\n    --tw-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1),\r\n      0 4px 6px -2px rgba(0, 0, 0, 0.05);\r\n    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),\r\n      var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);\r\n    border-radius: 0.2rem;\r\n    margin-top: 0.5rem;\r\n    p {\r\n      margin-bottom: 0;\r\n      margin-left: 0.5rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default AvatarDropdown;\r\n","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\QuestionSlider.js",["198"],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\TestsTable.js",["199","200"],"import { useState, useEffect, useContext } from \"react\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport styled from \"styled-components\";\r\nimport theme from \"../Assets/theme\";\r\nimport { Card } from \"./defaultComponents\";\r\nimport { AppContext } from \"../context\";\r\n\r\nconst StyledTableCell = withStyles(() => ({\r\n  head: {\r\n    backgroundColor: theme.Grey1,\r\n    color: \"black\",\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles(() => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.mainGrey,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles({\r\n  //   table: {\r\n  //     minWidth: 500,\r\n  //   },\r\n});\r\n\r\nfunction TestsTable(props) {\r\n  const { judge0Languges } = useContext(AppContext);\r\n  const classes = useStyles();\r\n  function rowClicked(e) {\r\n    props.callback(e.target.id);\r\n    e.preventDefault();\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(props.data);\r\n  }, [props.data]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <StyledCard>\r\n        <TableTitle>{props.title}</TableTitle>\r\n        <TableContainer className=\"tableContainer\">\r\n          <Table\r\n            className={classes.table}\r\n            aria-label=\"customized table\"\r\n            options={{\r\n              search: true,\r\n            }}\r\n          ></Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <StyledTableCell>Titlu</StyledTableCell>\r\n              <StyledTableCell align=\"center\">Materie</StyledTableCell>\r\n              <StyledTableCell align=\"center\">Limbaj</StyledTableCell>\r\n              <StyledTableCell align=\"center\">Deadline</StyledTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {props.data.map((item) => (\r\n              <StyledTableRow>\r\n                <a href=\"tests/takeTest\" onClick={(e) => e.preventDefault()}>\r\n                  <StyledTableCell id={item.id} onClick={rowClicked}>\r\n                    {item.titlu}\r\n                  </StyledTableCell>\r\n                </a>\r\n                <StyledTableCell align=\"center\">\r\n                  {item.id_materie}\r\n                </StyledTableCell>\r\n                <StyledTableCell align=\"center\">\r\n                  {getLanguage(item.id_limbaj_programare, judge0Languges)}\r\n                </StyledTableCell>\r\n                <StyledTableCell align=\"center\">\r\n                  {parseDateTime(item.deadline)}\r\n                </StyledTableCell>\r\n              </StyledTableRow>\r\n            ))}\r\n          </TableBody>\r\n        </TableContainer>\r\n      </StyledCard>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst parseDateTime = (datetime) => {\r\n  try {\r\n    const date = new Date(datetime);\r\n    // console.log(date.getTime());\r\n    return (\r\n      date.toLocaleDateString(\"ro-RO\") +\r\n      \", ora \" +\r\n      date.getHours() +\r\n      \":\" +\r\n      date.getMinutes()\r\n    );\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nconst getLanguage = (languageId, languages) => {\r\n  const language = languages.find((item) => item.id === languageId);\r\n  const regexToRemoveParanthesis = / *\\([^)]*\\) */g;\r\n\r\n  return language.name.replace(regexToRemoveParanthesis, \"\");\r\n};\r\n\r\nconst TableTitle = styled.div`\r\n  font-style: \"Roboto\";\r\n  color: ${theme.mainBlack};\r\n  font-size: 1.3rem;\r\n  font-weight: 500;\r\n  margin: 1rem;\r\n  margin-left: 2rem;\r\n`;\r\n\r\nconst StyledCard = styled(Card)`\r\n  padding: 0;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  //   width: 100%;\r\n  //   height: 100%;\r\n  .tableContainer {\r\n    max-width: 50vw;\r\n  }\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-left: 20vw;\r\n  margin-top: 20vh;\r\n`;\r\n\r\nexport default TestsTable;\r\n","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\context\\index.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\context\\utils.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\AlertBar.js",[],{"ruleId":"201","replacedBy":"202"},{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","severity":1,"message":"206","line":12,"column":3,"nodeType":"207","messageId":"208","endLine":12,"endColumn":11},{"ruleId":"205","severity":1,"message":"209","line":31,"column":7,"nodeType":"207","messageId":"208","endLine":31,"endColumn":19},{"ruleId":"205","severity":1,"message":"210","line":2,"column":29,"nodeType":"207","messageId":"208","endLine":2,"endColumn":38},{"ruleId":"205","severity":1,"message":"211","line":7,"column":16,"nodeType":"207","messageId":"208","endLine":7,"endColumn":19},{"ruleId":"205","severity":1,"message":"212","line":10,"column":18,"nodeType":"207","messageId":"208","endLine":10,"endColumn":27},{"ruleId":"205","severity":1,"message":"213","line":20,"column":41,"nodeType":"207","messageId":"208","endLine":20,"endColumn":57},{"ruleId":"205","severity":1,"message":"214","line":20,"column":59,"nodeType":"207","messageId":"208","endLine":20,"endColumn":66},{"ruleId":"205","severity":1,"message":"215","line":5,"column":3,"nodeType":"207","messageId":"208","endLine":5,"endColumn":13},{"ruleId":"205","severity":1,"message":"216","line":8,"column":3,"nodeType":"207","messageId":"208","endLine":8,"endColumn":14},{"ruleId":"205","severity":1,"message":"217","line":12,"column":10,"nodeType":"207","messageId":"208","endLine":12,"endColumn":19},{"ruleId":"205","severity":1,"message":"218","line":25,"column":11,"nodeType":"207","messageId":"208","endLine":25,"endColumn":15},{"ruleId":"205","severity":1,"message":"219","line":26,"column":11,"nodeType":"207","messageId":"208","endLine":26,"endColumn":20},{"ruleId":"220","severity":1,"message":"221","line":41,"column":6,"nodeType":"222","endLine":41,"endColumn":8,"suggestions":"223"},{"ruleId":"205","severity":1,"message":"210","line":2,"column":17,"nodeType":"207","messageId":"208","endLine":2,"endColumn":26},{"ruleId":"205","severity":1,"message":"211","line":8,"column":16,"nodeType":"207","messageId":"208","endLine":8,"endColumn":19},{"ruleId":"205","severity":1,"message":"212","line":11,"column":18,"nodeType":"207","messageId":"208","endLine":11,"endColumn":27},{"ruleId":"205","severity":1,"message":"224","line":1,"column":10,"nodeType":"207","messageId":"208","endLine":1,"endColumn":23},{"ruleId":"205","severity":1,"message":"225","line":2,"column":10,"nodeType":"207","messageId":"208","endLine":2,"endColumn":25},{"ruleId":"205","severity":1,"message":"226","line":2,"column":27,"nodeType":"207","messageId":"208","endLine":2,"endColumn":38},{"ruleId":"205","severity":1,"message":"227","line":3,"column":10,"nodeType":"207","messageId":"208","endLine":3,"endColumn":16},{"ruleId":"205","severity":1,"message":"228","line":4,"column":10,"nodeType":"207","messageId":"208","endLine":4,"endColumn":13},{"ruleId":"205","severity":1,"message":"229","line":6,"column":8,"nodeType":"207","messageId":"208","endLine":6,"endColumn":12},{"ruleId":"205","severity":1,"message":"230","line":15,"column":12,"nodeType":"207","messageId":"208","endLine":15,"endColumn":18},{"ruleId":"220","severity":1,"message":"231","line":60,"column":6,"nodeType":"222","endLine":60,"endColumn":8,"suggestions":"232"},{"ruleId":"233","severity":1,"message":"234","line":66,"column":35,"nodeType":"235","messageId":"236","endLine":66,"endColumn":37},{"ruleId":"220","severity":1,"message":"237","line":72,"column":6,"nodeType":"222","endLine":72,"endColumn":12,"suggestions":"238"},{"ruleId":"233","severity":1,"message":"234","line":83,"column":29,"nodeType":"235","messageId":"236","endLine":83,"endColumn":31},{"ruleId":"239","severity":1,"message":"240","line":87,"column":39,"nodeType":"241","messageId":"242","endLine":87,"endColumn":41},{"ruleId":"220","severity":1,"message":"243","line":94,"column":5,"nodeType":"222","endLine":94,"endColumn":20,"suggestions":"244"},{"ruleId":"220","severity":1,"message":"245","line":106,"column":6,"nodeType":"222","endLine":106,"endColumn":21,"suggestions":"246"},{"ruleId":"205","severity":1,"message":"210","line":1,"column":17,"nodeType":"207","messageId":"208","endLine":1,"endColumn":26},{"ruleId":"205","severity":1,"message":"247","line":1,"column":28,"nodeType":"207","messageId":"208","endLine":1,"endColumn":36},{"ruleId":"205","severity":1,"message":"248","line":12,"column":30,"nodeType":"207","messageId":"208","endLine":12,"endColumn":44},{"ruleId":"205","severity":1,"message":"249","line":7,"column":3,"nodeType":"207","messageId":"208","endLine":7,"endColumn":8},{"ruleId":"205","severity":1,"message":"250","line":8,"column":3,"nodeType":"207","messageId":"208","endLine":8,"endColumn":7},{"ruleId":"220","severity":1,"message":"221","line":34,"column":6,"nodeType":"222","endLine":34,"endColumn":8,"suggestions":"251"},{"ruleId":"220","severity":1,"message":"252","line":58,"column":6,"nodeType":"222","endLine":58,"endColumn":19,"suggestions":"253"},{"ruleId":"233","severity":1,"message":"234","line":63,"column":56,"nodeType":"235","messageId":"236","endLine":63,"endColumn":58},{"ruleId":"205","severity":1,"message":"254","line":120,"column":7,"nodeType":"207","messageId":"208","endLine":120,"endColumn":21},{"ruleId":"205","severity":1,"message":"255","line":9,"column":10,"nodeType":"207","messageId":"208","endLine":9,"endColumn":16},{"ruleId":"205","severity":1,"message":"256","line":41,"column":10,"nodeType":"207","messageId":"208","endLine":41,"endColumn":14},{"ruleId":"205","severity":1,"message":"257","line":41,"column":16,"nodeType":"207","messageId":"208","endLine":41,"endColumn":23},{"ruleId":"205","severity":1,"message":"258","line":43,"column":10,"nodeType":"207","messageId":"208","endLine":43,"endColumn":24},{"ruleId":"205","severity":1,"message":"259","line":43,"column":26,"nodeType":"207","messageId":"208","endLine":43,"endColumn":43},{"ruleId":"220","severity":1,"message":"221","line":53,"column":6,"nodeType":"222","endLine":53,"endColumn":8,"suggestions":"260"},{"ruleId":"233","severity":1,"message":"234","line":245,"column":52,"nodeType":"235","messageId":"236","endLine":245,"endColumn":54},{"ruleId":"205","severity":1,"message":"261","line":3,"column":10,"nodeType":"207","messageId":"208","endLine":3,"endColumn":23},{"ruleId":"205","severity":1,"message":"210","line":1,"column":17,"nodeType":"207","messageId":"208","endLine":1,"endColumn":26},{"ruleId":"205","severity":1,"message":"247","line":1,"column":10,"nodeType":"207","messageId":"208","endLine":1,"endColumn":18},{"ruleId":"205","severity":1,"message":"262","line":9,"column":8,"nodeType":"207","messageId":"208","endLine":9,"endColumn":13},"no-native-reassign",["263"],"no-negated-in-lhs",["264"],"no-unused-vars","'TakeTest' is defined but never used.","Identifier","unusedVar","'StudentRoute' is assigned a value but never used.","'useEffect' is defined but never used.","'Col' is defined but never used.","'useFormik' is defined but never used.","'setAuthenticated' is assigned a value but never used.","'setUser' is assigned a value but never used.","'withRouter' is defined but never used.","'useLocation' is defined but never used.","'TestsGrid' is defined but never used.","'path' is assigned a value but never used.","'testState' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["265"],"'DefaultNavbar' is defined but never used.","'FaRegUserCircle' is defined but never used.","'FaArrowLeft' is defined but never used.","'MdMenu' is defined but never used.","'Nav' is defined but never used.","'logo' is defined but never used.","'goBack' is defined but never used.","React Hook useEffect has a missing dependency: 'testState'. Either include it or remove the dependency array.",["266"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'aceLanguages' and 'getTestQuestions'. Either include them or remove the dependency array.",["267"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'test'. Either include it or remove the dependency array.",["268"],"React Hook useEffect has a missing dependency: 'decode'. Either include it or remove the dependency array.",["269"],"'useState' is defined but never used.","'codeEditorText' is assigned a value but never used.","'Route' is defined but never used.","'Link' is defined but never used.",["270"],"React Hook useEffect has missing dependencies: 'setTestInProgress' and 'testInProgress'. Either include them or remove the dependency array.",["271"],"'TestsContainer' is assigned a value but never used.","'Loader' is defined but never used.","'code' is assigned a value but never used.","'setCode' is assigned a value but never used.","'expectedAnswer' is assigned a value but never used.","'setExpectedAnswer' is assigned a value but never used.",["272"],"'FaFontAwesome' is defined but never used.","'Paper' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"273","fix":"274"},{"desc":"275","fix":"276"},{"desc":"277","fix":"278"},{"desc":"279","fix":"280"},{"desc":"281","fix":"282"},{"desc":"273","fix":"283"},{"desc":"284","fix":"285"},{"desc":"273","fix":"286"},"Update the dependencies array to be: [user]",{"range":"287","text":"288"},"Update the dependencies array to be: [testState]",{"range":"289","text":"290"},"Update the dependencies array to be: [aceLanguages, getTestQuestions, test]",{"range":"291","text":"292"},"Update the dependencies array to be: [test, testQuestions]",{"range":"293","text":"294"},"Update the dependencies array to be: [decode, judgeResponse]",{"range":"295","text":"296"},{"range":"297","text":"288"},"Update the dependencies array to be: [clickedTest, setTestInProgress, testInProgress]",{"range":"298","text":"299"},{"range":"300","text":"288"},[1274,1276],"[user]",[2002,2004],"[testState]",[2325,2331],"[aceLanguages, getTestQuestions, test]",[2878,2893],"[test, testQuestions]",[3222,3237],"[decode, judgeResponse]",[972,974],[1513,1526],"[clickedTest, setTestInProgress, testInProgress]",[2073,2075]]