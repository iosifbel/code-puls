[{"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\index.js":"1","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\App.js":"2","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\Navbar.js":"3","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\index.js":"4","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\Assets\\theme.js":"5","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\login.js":"6","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\tests.js":"7","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\register.js":"8","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\dashboard.js":"9","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\error.js":"10","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\history.js":"11","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\settings.js":"12","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\Header.js":"13","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\defaultComponents.js":"14","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\NavbarDataStudent.js":"15","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\NavbarDataTeacher.js":"16","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\context\\context.js":"17","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\takeTest.js":"18","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\CodeEditor.js":"19","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\testsGrid.js":"20","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\index.js":"21","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\defaultCodeData.js":"22","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\addTest.js":"23","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\Loader.js":"24","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\FormSucces.js":"25","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\FormError.js":"26","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\context\\AuthContext.js":"27","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\home.js":"28","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\AvatarDropdown.js":"29","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\QuestionSlider.js":"30","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\TestsTable.js":"31","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\context\\index.js":"32","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\context\\utils.js":"33","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\AlertBar.js":"34","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\evaluateTest.js":"35"},{"size":501,"mtime":1625831701476,"results":"36","hashOfConfig":"37"},{"size":2555,"mtime":1626346889700,"results":"38","hashOfConfig":"37"},{"size":3406,"mtime":1626244976988,"results":"39","hashOfConfig":"37"},{"size":525,"mtime":1626336731944,"results":"40","hashOfConfig":"37"},{"size":229,"mtime":1626259984397,"results":"41","hashOfConfig":"37"},{"size":8996,"mtime":1625832979274,"results":"42","hashOfConfig":"37"},{"size":4669,"mtime":1626348418468,"results":"43","hashOfConfig":"37"},{"size":9893,"mtime":1625833132094,"results":"44","hashOfConfig":"37"},{"size":784,"mtime":1625844852923,"results":"45","hashOfConfig":"37"},{"size":388,"mtime":1623710186186,"results":"46","hashOfConfig":"37"},{"size":350,"mtime":1624709373621,"results":"47","hashOfConfig":"37"},{"size":343,"mtime":1624709372832,"results":"48","hashOfConfig":"37"},{"size":1013,"mtime":1626243876526,"results":"49","hashOfConfig":"37"},{"size":1183,"mtime":1625834269632,"results":"50","hashOfConfig":"37"},{"size":471,"mtime":1625770721924,"results":"51","hashOfConfig":"37"},{"size":477,"mtime":1625770284872,"results":"52","hashOfConfig":"37"},{"size":3099,"mtime":1626288604794,"results":"53","hashOfConfig":"37"},{"size":9360,"mtime":1626287974307,"results":"54","hashOfConfig":"37"},{"size":1434,"mtime":1626021723608,"results":"55","hashOfConfig":"37"},{"size":3210,"mtime":1626250351348,"results":"56","hashOfConfig":"37"},{"size":489,"mtime":1626279344647,"results":"57","hashOfConfig":"37"},{"size":838,"mtime":1624828708070,"results":"58","hashOfConfig":"37"},{"size":13695,"mtime":1625943220811,"results":"59","hashOfConfig":"37"},{"size":2336,"mtime":1624886094727,"results":"60","hashOfConfig":"37"},{"size":594,"mtime":1625772515928,"results":"61","hashOfConfig":"37"},{"size":613,"mtime":1625772519627,"results":"62","hashOfConfig":"37"},{"size":1864,"mtime":1625840285790,"results":"63","hashOfConfig":"37"},{"size":1042,"mtime":1625821685091,"results":"64","hashOfConfig":"37"},{"size":4314,"mtime":1625845206726,"results":"65","hashOfConfig":"37"},{"size":1927,"mtime":1626285056341,"results":"66","hashOfConfig":"37"},{"size":4370,"mtime":1626348434255,"results":"67","hashOfConfig":"37"},{"size":163,"mtime":1626265693688,"results":"68","hashOfConfig":"37"},{"size":87,"mtime":1626265718363,"results":"69","hashOfConfig":"37"},{"size":759,"mtime":1626284009089,"results":"70","hashOfConfig":"37"},{"size":578,"mtime":1626346249207,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"12hnw4i",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"74"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"74"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"74"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"74"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"74"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"74"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"74"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"74"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"74"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\index.js",[],["152","153"],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\App.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\Navbar.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\index.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\Assets\\theme.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\login.js",["154","155","156","157","158"],"import { Link, Redirect } from \"react-router-dom\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { AppContext } from \"../context/context\";\r\nimport { FormSuccess, FormError } from \"../components\";\r\nimport { Card, Button } from \"../components/defaultComponents\";\r\nimport styled from \"styled-components\";\r\nimport { Form, Col } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport theme from \"../Assets/theme\";\r\nimport { Formik, useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport { ImSpinner3 } from \"react-icons/im\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\n\r\nconst rootURL = \"http://localhost:5000/api\";\r\nfunction Login() {\r\n  const authContext = useContext(AuthContext);\r\n\r\n  const { setShowNavbar, setShowHeader, setAuthenticated, setUser } =\r\n    useContext(AppContext);\r\n  setShowNavbar(false);\r\n  setShowHeader(false);\r\n  const [type, setType] = useState(\"student\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [redirectOnLogin, setRedirectOnLogin] = useState(false);\r\n  const [loginSuccess, setLoginSuccess] = useState();\r\n  const [loginError, setLoginError] = useState();\r\n\r\n  const schema = yup.object().shape({\r\n    email: yup\r\n      .string()\r\n      .matches(\r\n        type === \"student\" ? /(@stud.ase.ro)/ : /(@ie.ase.ro)/,\r\n        \"Adresă nepotrivită pentru tipul de utilizator\",\r\n        {\r\n          excludeEmptyString: true,\r\n        }\r\n      )\r\n      .email(\"Adresă de email invalidă\")\r\n      .required(\"Nicio adresă de email\"),\r\n    password: yup.string().required(\"Nicio parolă introdusă\"),\r\n  });\r\n\r\n  async function login(user) {\r\n    console.log(user);\r\n    setIsLoading(true);\r\n    const response = await axios({\r\n      method: \"post\",\r\n      url: `${rootURL}/auth/login`,\r\n      data: user,\r\n    }).catch((err) => {\r\n      console.log(err.response.data.message);\r\n      setLoginError(err.response.data.message);\r\n      setLoginSuccess(null);\r\n    });\r\n    if (response) {\r\n      // console.log(response.data);\r\n      authContext.setAuthState(response.data);\r\n      setLoginError(null);\r\n      setLoginSuccess(response.data.message);\r\n      setTimeout(() => {\r\n        setRedirectOnLogin(true);\r\n      }, 1500);\r\n    }\r\n\r\n    setIsLoading(false);\r\n  }\r\n\r\n  function submitHandler(user) {\r\n    console.log(\"submitted\");\r\n    user.type = type;\r\n    login(user);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {redirectOnLogin && <Redirect to=\"/dashboard\" />}\r\n      <Wrapper>\r\n        <FormCard>\r\n          <Formik\r\n            validationSchema={schema}\r\n            // onSubmit={(values) => {\r\n            //   alert(JSON.stringify(values, null, 2));\r\n            // }}\r\n            onSubmit={(values) => {\r\n              submitHandler(values);\r\n            }}\r\n            initialValues={{\r\n              email: \"\",\r\n              password: \"\",\r\n            }}\r\n          >\r\n            {({\r\n              handleSubmit,\r\n              handleChange,\r\n              handleBlur,\r\n              values,\r\n              touched,\r\n              isValid,\r\n              errors,\r\n            }) => (\r\n              <Form noValidate onSubmit={handleSubmit}>\r\n                <Form.Group>\r\n                  {loginSuccess && <FormSuccess text={loginSuccess} />}\r\n                  {loginError && <FormError text={loginError} />}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                  <Form.Label>Adresă de email</Form.Label>\r\n                  <Form.Control\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    value={values.email}\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    placeholder=\"Introdu email\"\r\n                    isValid={touched.email && !errors.email}\r\n                    isInvalid={touched.email && !!errors.email}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.email}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                  <Form.Label>Parolă</Form.Label>\r\n                  <Form.Control\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    value={values.password}\r\n                    placeholder=\"Introdu Parola\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    isValid={touched.password && !errors.password}\r\n                    isInvalid={touched.password && !!errors.password}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.password}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicCheckbox\">\r\n                  <Form.Label>Tip cont</Form.Label>\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    // name=\"type\"\r\n                    // value={type}\r\n                    onChange={(e) => setType(e.target.value)}\r\n                    // onChange={(e) => setType(e.target.value)}\r\n                    // onBlur={handleBlur}\r\n                  >\r\n                    <option value=\"student\">Student</option>\r\n                    <option value=\"teacher\">Profesor</option>\r\n                  </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <LoginBtn variant=\"primary\" type=\"submit\">\r\n                    {isLoading ? (\r\n                      <span className=\"loadingContainer\">\r\n                        <ImSpinner3 className=\"icon-spin\"></ImSpinner3>\r\n                        <span className=\"loadingText\">Se încarcă...</span>\r\n                      </span>\r\n                    ) : (\r\n                      <p>Login</p>\r\n                    )}\r\n                    <p>Login</p>\r\n                  </LoginBtn>\r\n                </Form.Group>\r\n\r\n                <div class=\"sau\">\r\n                  <p>\r\n                    <span>sau</span>\r\n                  </p>\r\n                </div>\r\n\r\n                <Form.Group>\r\n                  <Link to=\"/register\" className=\"registerBtnContainer\">\r\n                    <RegisterBtn variant=\"secondary\" type=\"submit\">\r\n                      <p>Creează un cont</p>\r\n                    </RegisterBtn>\r\n                  </Link>\r\n                </Form.Group>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </FormCard>\r\n      </Wrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  height: 100vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  // .loginLink {\r\n  //   text-decoration: none;\r\n  // }\r\n  a {\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\nconst FormCard = styled(Card)`\r\n  width: 30em;\r\n  min-height 32em;\r\n\r\n  .loadingContainer {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    .loadingText {      \r\n      font-family: Roboto\r\n      margin-left: 2em;\r\n    }\r\n\r\n    .icon-spin {\r\n      margin-right: 0.5em;\r\n      -webkit-animation: icon-spin 2s infinite linear;\r\n              animation: icon-spin 2s infinite linear;\r\n    }\r\n    \r\n    @-webkit-keyframes icon-spin {\r\n      0% {\r\n        -webkit-transform: rotate(0deg);\r\n                transform: rotate(0deg);\r\n      }\r\n      100% {\r\n        -webkit-transform: rotate(359deg);\r\n                transform: rotate(359deg);\r\n      }\r\n    }\r\n    \r\n    @keyframes icon-spin {\r\n      0% {\r\n        -webkit-transform: rotate(0deg);\r\n                transform: rotate(0deg);\r\n      }\r\n      100% {\r\n        -webkit-transform: rotate(359deg);\r\n                transform: rotate(359deg);\r\n      }\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  .sau {\r\n    margin-top: 2em;\r\n    margin-bottom: 1em;\r\n    p {\r\n      \r\n      \r\n      width: 100%; \r\n      text-align: center; \r\n      border-bottom: 1px solid ${theme.Grey2}; \r\n      line-height: 0.1em;\r\n      margin: 10px 0 20px; \r\n      \r\n   } \r\n   \r\n   p span { \r\n       background:#fff; \r\n       padding:0 10px; \r\n       font-weight: bold;\r\n       color: ${theme.Grey1}\r\n   }\r\n  }\r\n\r\n`;\r\n\r\nconst LoginBtn = styled(Button)`\r\n  background: ${theme.mainBlue};\r\n  color: white;\r\n  margin-top: 2em;\r\n  font-size: 1rem;\r\n  font-weight: bold;\r\n  height: 2em;\r\n  width: 20em;\r\n  margin-left: 0;\r\n  margin-right: 0;\r\n  width: 100%;\r\n  border: none;\r\n\r\n  &:hover {\r\n    background: ${theme.mainBlue};\r\n    color: white;\r\n  }\r\n`;\r\n\r\nconst RegisterBtn = styled(Button)`\r\n  background: white;\r\n  color: ${theme.mainBlue};\r\n  margin-top: 2em;\r\n  font-size: 1rem;\r\n  font-weight: bold;\r\n  height: 2em;\r\n  width: 20em;\r\n  margin-left: 0;\r\n  margin-right: 0;\r\n  width: 100%;\r\n  border: 1px solid ${theme.Grey1};\r\n  box-sizing: border-box;\r\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.08);\r\n  border-radius: 5px;\r\n\r\n  &:hover {\r\n    background: white;\r\n    color: ${theme.mainBlue};\r\n  }\r\n`;\r\n\r\nexport default Login;\r\n","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\tests.js",["159","160","161","162","163"],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\register.js",["164","165","166"],"import { Link, Redirect } from \"react-router-dom\";\r\nimport React, { useEffect, useState, useContext } from \"react\";\r\nimport { AppContext } from \"../context/context\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport { Card, Button } from \"../components/defaultComponents\";\r\nimport { FormSuccess, FormError } from \"../components\";\r\nimport styled from \"styled-components\";\r\nimport { Form, Col } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport theme from \"../Assets/theme\";\r\nimport { Formik, useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport { ImSpinner3 } from \"react-icons/im\";\r\n\r\nconst rootURL = \"http://localhost:5000/api\";\r\n\r\nfunction Register() {\r\n  const { setShowNavbar, setShowHeader } = useContext(AppContext);\r\n  const authContext = useContext(AuthContext);\r\n  setShowNavbar(false);\r\n  setShowHeader(false);\r\n  const [type, setType] = useState(\"student\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [registerSuccess, setRegisterSuccess] = useState();\r\n  const [registerError, setRegisterError] = useState();\r\n  const [redirectOnRegister, setRedirectOnRegister] = useState(false);\r\n\r\n  const schema = yup.object().shape({\r\n    firstName: yup.string().required(\"Niciun nume introdus\"),\r\n    // .matches(/^[aA-zZ\\s]+$/, \"Doar litere\"),\r\n    lastName: yup.string().required(\"Niciun nume introdus\"),\r\n    // .matches(/^[aA-zZ\\s]+$/, \"Doar litere\"),\r\n    email: yup\r\n      .string()\r\n      .matches(\r\n        type === \"student\" ? /(@stud.ase.ro)/ : /(@ie.ase.ro)/,\r\n        \"Adresă nepotrivită pentru tipul de utilizator\",\r\n        {\r\n          excludeEmptyString: true,\r\n        }\r\n      )\r\n      .email(\"Adresă de email invalidă\")\r\n      .required(\"Nicio adresă de email\"),\r\n    password: yup.string().required(\"Nicio parolă introdusă\"),\r\n  });\r\n\r\n  async function register(user) {\r\n    console.log(user);\r\n    setIsLoading(true);\r\n    const response = await axios({\r\n      method: \"post\",\r\n      url: `${rootURL}/auth/register`,\r\n      data: user,\r\n    }).catch((err) => {\r\n      // console.log(err.response.data.message);\r\n      setRegisterError(err.response.data.message);\r\n      setRegisterSuccess(null);\r\n    });\r\n    if (response) {\r\n      // console.log(response.data);\r\n      authContext.setAuthState(response.data);\r\n      setRegisterSuccess(response.data.message);\r\n      setRegisterError(null);\r\n      setTimeout(() => {\r\n        setRedirectOnRegister(true);\r\n      }, 1500);\r\n    }\r\n    setIsLoading(false);\r\n  }\r\n\r\n  function submitHandler(user) {\r\n    console.log(\"submitted\");\r\n    user.type = type;\r\n    register(user);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {redirectOnRegister && <Redirect to=\"/dashboard\" />}\r\n      <Wrapper>\r\n        <FormCard>\r\n          <Formik\r\n            validationSchema={schema}\r\n            // onSubmit={(values) => {\r\n            //   alert(JSON.stringify(values, null, 2));\r\n            // }}\r\n            onSubmit={(values) => {\r\n              submitHandler(values);\r\n            }}\r\n            initialValues={{\r\n              firstName: \"\",\r\n              lastName: \"\",\r\n              email: \"\",\r\n              password: \"\",\r\n            }}\r\n          >\r\n            {({\r\n              handleSubmit,\r\n              handleChange,\r\n              handleBlur,\r\n              values,\r\n              touched,\r\n              isValid,\r\n              errors,\r\n            }) => (\r\n              <Form noValidate onSubmit={handleSubmit}>\r\n                <Form.Group>\r\n                  {registerSuccess && <FormSuccess text={registerSuccess} />}\r\n                  {registerError && <FormError text={registerError} />}\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Label>Nume</Form.Label>\r\n                  <Form.Control\r\n                    name=\"lastName\"\r\n                    type=\"lastName\"\r\n                    value={values.lastName}\r\n                    placeholder=\"Introdu numele\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    isValid={touched.lastName && !errors.lastName}\r\n                    isInvalid={touched.lastName && !!errors.lastName}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.lastName}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Label>Prenume</Form.Label>\r\n                  <Form.Control\r\n                    name=\"firstName\"\r\n                    type=\"firstName\"\r\n                    value={values.firstName}\r\n                    placeholder=\"Introdu prenumele\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    isValid={touched.firstName && !errors.firstName}\r\n                    isInvalid={touched.firstName && !!errors.firstName}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.firstName}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                  <Form.Label>Adresă de email</Form.Label>\r\n                  <Form.Control\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    value={values.email}\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    placeholder=\"Introdu email\"\r\n                    isValid={touched.email && !errors.email}\r\n                    isInvalid={touched.email && !!errors.email}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.email}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                  <Form.Label>Parolă</Form.Label>\r\n                  <Form.Control\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    value={values.password}\r\n                    placeholder=\"Introdu Parola\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    isValid={touched.password && !errors.password}\r\n                    isInvalid={touched.password && !!errors.password}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.password}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicCheckbox\">\r\n                  <Form.Label>Tip cont</Form.Label>\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    // name=\"type\"\r\n                    // value={type}\r\n                    onChange={(e) => setType(e.target.value)}\r\n                    // onChange={(e) => setType(e.target.value)}\r\n                    // onBlur={handleBlur}\r\n                  >\r\n                    <option value=\"student\">Student</option>\r\n                    <option value=\"teacher\">Profesor</option>\r\n                  </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <LoginBtn variant=\"secondary\" type=\"submit\">\r\n                    {isLoading ? (\r\n                      <span className=\"loadingContainer\">\r\n                        <ImSpinner3 className=\"icon-spin\"></ImSpinner3>\r\n                        <span className=\"loadingText\">Se încarcă...</span>\r\n                      </span>\r\n                    ) : (\r\n                      <p>Creează cont</p>\r\n                    )}\r\n                  </LoginBtn>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"alreadyHaveContainer\">\r\n                  <p>Ai deja un cont?</p>\r\n                  <Link to=\"/login\" className=\"loginText\">\r\n                    Login\r\n                  </Link>\r\n                </Form.Group>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </FormCard>\r\n      </Wrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  height: 100vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  // .loginLink {\r\n  //   text-decoration: none;\r\n  // }\r\n  a {\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\nconst FormCard = styled(Card)`\r\n  width: 30em;\r\n  min-height 32em;\r\n\r\n  .loadingContainer {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    .loadingText {      \r\n      font-family: Roboto\r\n      margin-left: 2em;\r\n    }\r\n\r\n    .icon-spin {\r\n      margin-right: 0.5em;\r\n      -webkit-animation: icon-spin 2s infinite linear;\r\n              animation: icon-spin 2s infinite linear;\r\n    }\r\n    \r\n    @-webkit-keyframes icon-spin {\r\n      0% {\r\n        -webkit-transform: rotate(0deg);\r\n                transform: rotate(0deg);\r\n      }\r\n      100% {\r\n        -webkit-transform: rotate(359deg);\r\n                transform: rotate(359deg);\r\n      }\r\n    }\r\n    \r\n    @keyframes icon-spin {\r\n      0% {\r\n        -webkit-transform: rotate(0deg);\r\n                transform: rotate(0deg);\r\n      }\r\n      100% {\r\n        -webkit-transform: rotate(359deg);\r\n                transform: rotate(359deg);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n .alreadyHaveContainer {\r\n   font-size: 0.9rem;\r\n   color: ${theme.Grey1};   \r\n  font-style: normal;\r\n  font-weight: bold;\r\n   background: white;\r\n   display: flex;\r\n   direction: row;\r\n\r\n   .loginText{\r\n     margin-left: 0.5em;\r\n     font-weight: normal;\r\n   }\r\n   \r\n }\r\n\r\n`;\r\n\r\nconst LoginBtn = styled(Button)`\r\n  background: ${theme.mainOrange};\r\n  color: white;\r\n  margin: 0;\r\n  margin-top: 2em;\r\n  font-size: 1rem;\r\n  font-weight: bold;\r\n  height: 2em;\r\n  width: 20em;\r\n  width: 100%;\r\n  border: none;\r\n\r\n  &:hover {\r\n    background: ${theme.mainOrange};\r\n    color: white;\r\n  }\r\n`;\r\n\r\nexport default Register;\r\n","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\dashboard.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\error.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\history.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\settings.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\Header.js",["167","168","169","170","171","172","173"],"import { DefaultNavbar } from \"./defaultComponents\";\r\nimport { FaRegUserCircle, FaArrowLeft } from \"react-icons/fa\";\r\nimport { MdMenu } from \"react-icons/md\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport styled from \"styled-components\";\r\nimport logo from \"../Assets/logo.svg\";\r\nimport { useHistory, withRouter } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport { AppContext } from \"../context/context\";\r\nimport AvatarDropdown from \"./AvatarDropdown\";\r\n\r\nfunction Header() {\r\n  const { showHeader } = React.useContext(AppContext);\r\n  const history = useHistory();\r\n  function goBack() {\r\n    history.goBack();\r\n  }\r\n\r\n  return !showHeader ? null : (\r\n    <Wrapper>\r\n      <nav>\r\n        <div>\r\n          <AvatarDropdown></AvatarDropdown>\r\n        </div>\r\n      </nav>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  // justify-content: end;\r\n\r\n  nav {\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n  }\r\n`;\r\n\r\nexport default withRouter(Header);\r\n","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\defaultComponents.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\NavbarDataStudent.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\NavbarDataTeacher.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\context\\context.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\takeTest.js",["174","175","176","177","178","179","180"],"import { Card, Button } from \"../components/defaultComponents\";\r\nimport { CodeEditor, Loader, QuestionSlider, AlertBar } from \"../components\";\r\nimport styled from \"styled-components\";\r\nimport React, { useEffect, useState, useContext } from \"react\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport { AppContext } from \"../context/context\";\r\nimport DefaultCode from \"../components/defaultCodeData\";\r\nimport axios from \"axios\";\r\n\r\nconst rootURL = \"http://localhost:5000/api\";\r\n\r\nfunction TakeTest() {\r\n  // console.log(\"salut\");\r\n  const { setShowNavbar, setShowHeader } = useContext(AppContext);\r\n  setShowNavbar(false);\r\n  setShowHeader(true);\r\n\r\n  //get current User\r\n  const auth = useContext(AuthContext);\r\n  const { authState } = auth;\r\n  const user = authState.userInfo;\r\n\r\n  //get current test\r\n  const [test, setTest] = useState();\r\n\r\n  const {\r\n    testState,\r\n    testQuestions,\r\n    getTestQuestions,\r\n    isLoading,\r\n    aceLanguages,\r\n    encode,\r\n    decode,\r\n    removeTestInProgress,\r\n  } = React.useContext(AppContext);\r\n\r\n  const [language, setLanguage] = useState(\"javascript\");\r\n  const [stdout, setStdout] = useState(\" \");\r\n  const [compileError, setCompileError] = useState();\r\n  const [testCaseStatus, setTestCaseStatus] = useState(\" \");\r\n  const [judgeResponse, setJudgeResponse] = useState();\r\n  const [isConsoleLoading, setIsConsoleLoading] = useState(false);\r\n  const [isSubmitLoading, setIsSubmitLoading] = useState(false);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [currentQuestion, setCurrentQuestion] = useState();\r\n  const [codeEditorText, setCodeEditorText] = useState([]);\r\n  const [currentCodeEditorText, setCurrentCodeEditorText] = useState();\r\n  const [alert, setAlert] = useState({\r\n    open: false,\r\n    severity: \"success\",\r\n    message: \"\",\r\n  });\r\n\r\n  //onMount\r\n  useEffect(() => {\r\n    // console.log(testState);\r\n    setTest(testState);\r\n    // console.log(\"onMount\");\r\n    // console.log(test.id);\r\n  }, []);\r\n  useEffect(() => {\r\n    if (test) {\r\n      getTestQuestions(test.id);\r\n      // console.log(testQuestions);\r\n      const aceLanguage = aceLanguages.find(\r\n        (language) => language.id == test.id_limbaj_programare\r\n      );\r\n      if (aceLanguage) {\r\n        setLanguage(aceLanguage.name);\r\n      }\r\n    }\r\n  }, [test]);\r\n\r\n  useEffect(() => {\r\n    setCurrentQuestion(testQuestions[0]);\r\n  }, [testQuestions]);\r\n\r\n  //Initialize codeEditor with default code\r\n  useEffect(\r\n    () => {\r\n      if (testQuestions && test) {\r\n        const defaultCode = DefaultCode.find(\r\n          (item) => item.id == test.id_limbaj_programare\r\n        );\r\n        if (defaultCode) {\r\n          let array = [];\r\n          testQuestions.map((element) => {\r\n            array.push(defaultCode.code);\r\n          });\r\n          setCodeEditorText(array);\r\n        }\r\n      }\r\n    },\r\n    [testQuestions],\r\n    [test]\r\n  );\r\n\r\n  //When judgeResponse change\r\n  useEffect(() => {\r\n    if (judgeResponse) {\r\n      console.log(\"judge response changed\");\r\n      setStdout(decode(judgeResponse.stdout));\r\n      setTestCaseStatus(judgeResponse.status.description);\r\n      setCompileError(decode(judgeResponse.compile_output));\r\n    }\r\n  }, [judgeResponse]);\r\n\r\n  function questionChanged(question, index) {\r\n    // console.log(testQuestions);\r\n    // console.log(question);\r\n    setCurrentQuestionIndex(index);\r\n    setCurrentQuestion(question);\r\n  }\r\n  function codeEditorTextChanged(text) {\r\n    console.log(text);\r\n\r\n    let temp_state = [...codeEditorText];\r\n\r\n    if (codeEditorText.length > currentQuestionIndex) {\r\n      temp_state[currentQuestionIndex] = text;\r\n    } else {\r\n      temp_state.push(text);\r\n    }\r\n    setCodeEditorText(temp_state);\r\n    setCurrentCodeEditorText(text);\r\n  }\r\n\r\n  const getJudgeAssessment = async (test) => {\r\n    console.log(\"getting assessment from judge...\");\r\n    setIsConsoleLoading(true);\r\n    const judgeData = {\r\n      source_code: test.source_code,\r\n      language_id: test.language_id,\r\n      stdin: test.stdin,\r\n    };\r\n    // console.log(test.source_cod);\r\n    const response = await axios({\r\n      method: \"post\",\r\n      url: `${rootURL}/questions/assess/${test.questionId}/${test.id}/${user.id}`,\r\n      data: judgeData,\r\n    }).catch((err) => console.log(err));\r\n\r\n    if (response) {\r\n      console.log(response.data);\r\n      setJudgeResponse(response.data);\r\n    }\r\n    setIsConsoleLoading(false);\r\n  };\r\n  function executaBtnHandler() {\r\n    if (!isConsoleLoading) {\r\n      console.log(\"buton executa apasat\");\r\n      const question = {\r\n        id: test.id,\r\n        questionId: currentQuestion.id,\r\n        source_code: encode(codeEditorText[currentQuestionIndex]),\r\n        language_id: test.id_limbaj_programare,\r\n        stdin: \"\",\r\n      };\r\n      console.log(question);\r\n      getJudgeAssessment(question);\r\n    }\r\n  }\r\n  function handleSendBtn() {\r\n    if (!isSubmitLoading) {\r\n      const submission = {\r\n        test_id: test.id,\r\n        language_id: test.id_limbaj_programare,\r\n        stdin: \"\",\r\n        questions: [],\r\n      };\r\n\r\n      codeEditorText.forEach((code, index) => {\r\n        const question = {\r\n          questionId: testQuestions[index].id,\r\n          source_code: encode(code),\r\n        };\r\n        submission.questions.push(question);\r\n      });\r\n      // console.log(submission);\r\n      postSubmission(submission);\r\n    }\r\n  }\r\n\r\n  async function postSubmission(submission) {\r\n    // console.log(test.id);\r\n    setIsSubmitLoading(true);\r\n    try {\r\n      const response = await axios({\r\n        method: \"post\",\r\n        url: `${rootURL}/assignments/sendSubmission/${user.id}/${submission.test_id}`,\r\n        data: submission,\r\n      });\r\n      if (response) {\r\n        // console.log(response.data);\r\n        if (response.status === 200) {\r\n          setAlert({\r\n            open: true,\r\n            severity: \"success\",\r\n            message: response.data.message,\r\n          });\r\n          console.log(\"ceva\");\r\n          removeTestInProgress();\r\n        } else {\r\n          setAlert({\r\n            open: true,\r\n            severity: \"warning\",\r\n            message: response.data.message,\r\n          });\r\n        }\r\n      }\r\n      setIsSubmitLoading(false);\r\n    } catch (error) {\r\n      console.log(error.response.data.message);\r\n      setAlert({\r\n        open: true,\r\n        severity: \"error\",\r\n        message: error.response.data.message,\r\n      });\r\n    }\r\n  }\r\n  // useEffect(() => {\r\n  //   console.log(codeEditorText);\r\n  // }, [codeEditorText]);\r\n\r\n  if (isLoading) {\r\n    return <Loader></Loader>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Wrapper>\r\n        <AlertBar\r\n          open={alert.open}\r\n          severity={alert.severity}\r\n          message={alert.message}\r\n        />\r\n        <ProblemCard>\r\n          <QuestionSlider\r\n            questions={testQuestions}\r\n            callback={questionChanged}\r\n          ></QuestionSlider>\r\n        </ProblemCard>\r\n        <EditorCard>\r\n          <CodeEditor\r\n            language={language}\r\n            value={codeEditorText[currentQuestionIndex]}\r\n            defaultCode={currentCodeEditorText}\r\n            callback={codeEditorTextChanged}\r\n          ></CodeEditor>\r\n        </EditorCard>\r\n        <ExecuteBtn primary onClick={executaBtnHandler}>\r\n          Executa\r\n        </ExecuteBtn>\r\n        <ConsoleCard>\r\n          <div>\r\n            {\" \"}\r\n            <p>Output:</p>\r\n            {!isConsoleLoading && stdout && <p>{stdout}</p>}\r\n            {isConsoleLoading && <p>Loading...</p>}\r\n          </div>\r\n          <div>\r\n            <p>Test Case Status:</p>\r\n            {!isConsoleLoading && testCaseStatus && <p>{testCaseStatus}</p>}\r\n            {isConsoleLoading && <p>Loading...</p>}\r\n          </div>\r\n          {!isConsoleLoading && compileError && (\r\n            <div>\r\n              <div>\r\n                <p>Compile Error:</p>\r\n              </div>\r\n              <p>{compileError}</p>\r\n            </div>\r\n          )}\r\n        </ConsoleCard>\r\n        <SubmitBtn secondary onClick={handleSendBtn}>\r\n          {isSubmitLoading ? <div>Loading...</div> : <div>Trimite</div>}\r\n        </SubmitBtn>\r\n      </Wrapper>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.section`\r\n  display: grid;\r\n  height: 100%;\r\n  width: 100%;\r\n  max-height: 700px;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  grid-template-rows: repeat(10, 1fr);\r\n  grid-template-areas:\r\n    \"A    B\"\r\n    \"A    B\"\r\n    \"A    B\"\r\n    \"A    B\"\r\n    \"A    B\"\r\n    \"A    B\"\r\n    \"A    D\"\r\n    \"A    C\"\r\n    \"A    C\"\r\n    \"A    E\";\r\n  grid-column-gap: 2em;\r\n`;\r\nconst ProblemCard = styled(Card)`\r\n  grid-area: A;\r\n  overflow: auto;\r\n  margin-left: 2em;\r\n`;\r\nconst EditorCard = styled(Card)`\r\n  grid-area: B;\r\n  margin-right: 2em;\r\n  margin-top: 3em;\r\n  align-items: streched\r\n  justify-items : streched;\r\n  \r\n`;\r\nconst ConsoleCard = styled(Card)`\r\n  grid-area: C;\r\n  margin-right: 2em;\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  overflow: auto;\r\n  flex-wrap: wrap;\r\n`;\r\nconst ExecuteBtn = styled(Button)`\r\n  height: 50px;\r\n  width: 150px;\r\n  grid-are: D;\r\n  justify-self: start;\r\n  align-self: center;\r\n`;\r\nconst SubmitBtn = styled(Button)`\r\n  height: 50px;\r\n  width: 150px;\r\n  grid-are: E;\r\n  justify-self: end;\r\n  align-self: center;\r\n  margin-right: 2em;\r\n`;\r\n\r\nexport default TakeTest;\r\n","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\CodeEditor.js",["181","182","183"],"import React, { useEffect, useState } from \"react\";\r\nimport AceEditor from \"react-ace\";\r\nimport { AppContext } from \"../context/context\";\r\n\r\nimport \"ace-builds/src-noconflict/theme-tomorrow\";\r\nimport \"ace-builds/src-noconflict/ext-language_tools\";\r\n\r\nfunction CodeEditor(props) {\r\n  require(`ace-builds/src-noconflict/mode-${props.language}`);\r\n  require(`ace-builds/src-noconflict/snippets/${props.language}`);\r\n\r\n  const { setCodeEditorText, codeEditorText } = React.useContext(AppContext);\r\n\r\n  function onChange(newValue) {\r\n    setCodeEditorText(newValue);\r\n    props.callback(newValue);\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   console.log(\"frumos\");\r\n  //   console.log(props.defaultCode);\r\n  // }, [props.defaultCode]);\r\n\r\n  return (\r\n    <AceEditor\r\n      width=\"undefined\"\r\n      height=\"20em\"\r\n      mode={`${props.language}`}\r\n      theme=\"tomorrow\"\r\n      onChange={onChange}\r\n      name=\"UNIQUE_ID_OF_DIV\"\r\n      fontSize={20}\r\n      // defaultValue={props.defaultCode}\r\n      value={props.value}\r\n      showPrintMargin={true}\r\n      showGutter={true}\r\n      wrapEnabled={true}\r\n      highlightActiveLine={false}\r\n      setOptions={{\r\n        useWorker: false,\r\n        enableBasicAutocompletion: true,\r\n        enableLiveAutocompletion: true,\r\n        enableSnippets: true,\r\n        showLineNumbers: true,\r\n        tabSize: 4,\r\n        highlightActiveLine: true,\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default CodeEditor;\r\n","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\testsGrid.js",["184","185","186","187","188","189"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { AppContext } from \"../context/context\";\r\nimport { Card } from \"../components/defaultComponents\";\r\nimport {\r\n  Route,\r\n  Link,\r\n  useRouteMatch,\r\n  withRouter,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport theme from \"../Assets/theme\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\n\r\nconst rootURL = \"http://localhost:5000/api\";\r\n\r\nfunction TestsGrid(props) {\r\n  const { testInProgress, setTestInProgress } = useContext(AppContext);\r\n  // setShowHeader(true);\r\n\r\n  const auth = useContext(AuthContext);\r\n  const { authState } = auth;\r\n  const user = authState.userInfo;\r\n\r\n  const { url } = useRouteMatch();\r\n\r\n  const [tests, setTests] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [clickedTest, setClickedTest] = useState();\r\n\r\n  useEffect(() => {\r\n    getStudentTests(user);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(tests);\r\n  }, [tests]);\r\n\r\n  const getStudentTests = async (user) => {\r\n    console.log(\"getting tests from db..\");\r\n    setIsLoading(true);\r\n    const response = await axios\r\n      .get(`${rootURL}/students/${user.id}/due`)\r\n      .catch((err) => console.log(err));\r\n\r\n    if (response) {\r\n      setTests(response.data);\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (clickedTest) {\r\n      setTestInProgress(clickedTest);\r\n      console.log(testInProgress);\r\n    }\r\n  }, [clickedTest]);\r\n\r\n  const testClicked = (e) => {\r\n    if (testInProgress.id < 0) {\r\n      console.log(\"clicked card with id \" + e.target.id);\r\n      const clickedTest = tests.find((test) => test.id == e.target.id);\r\n      // props.parentCallBack(clickedTest);\r\n      setClickedTest(clickedTest);\r\n      e.preventDefault();\r\n    } else {\r\n      console.log(\"test already in progress\");\r\n      console.log(testInProgress);\r\n      e.preventDefault();\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Wrapper>\r\n        {\" \"}\r\n        <div>\r\n          <h1>Tests are loading..</h1>\r\n        </div>\r\n      </Wrapper>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      {clickedTest && <Redirect to={`${url}/takeTest`} />}\r\n      <Wrapper>\r\n        {tests.map((test) => (\r\n          <div key={test.id}>\r\n            {/* <Link onClick=> */}\r\n            <StyledCard id={test.id} onClick={testClicked}>\r\n              {test.titlu}\r\n            </StyledCard>\r\n            {/* </Link> */}\r\n          </div>\r\n        ))}\r\n      </Wrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  width: 50%;\r\n  a {\r\n    text-decoration: none;\r\n  }\r\n  position: fixed;\r\n  // // align-items: center;\r\n  // // justify-content: center;\r\n  // font-size: 1rem;\r\n  background: ${theme.mainGrey};\r\n  margin-left: 30%;\r\n  margin-top: 10em;\r\n  overflow-y: auto;\r\n`;\r\n\r\nconst TestsContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst StyledCard = styled(Card)`\r\n  cursor: pointer;\r\n  // width: 20vw;\r\n  margin-top: 1%;\r\n  margin-bottom: 1%;\r\n`;\r\n\r\nexport default withRouter(TestsGrid);\r\n","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\index.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\defaultCodeData.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\addTest.js",["190","191","192","193","194","195","196"],"import styled from \"styled-components\";\r\nimport { Form, Col } from \"react-bootstrap\";\r\nimport { FormSuccess, FormError } from \"../components\";\r\nimport { AppContext } from \"../context/context\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport { Button, Card } from \"../components/defaultComponents\";\r\nimport theme from \"../Assets/theme\";\r\nimport { Loader } from \"../components\";\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { MdAddCircleOutline, MdRemoveCircleOutline } from \"react-icons/md\";\r\nimport { ImSpinner3 } from \"react-icons/im\";\r\n\r\nconst rootURL = \"http://localhost:5000/api\";\r\n\r\nfunction AddTest() {\r\n  const auth = useContext(AuthContext);\r\n  const { authState } = auth;\r\n  const user = authState.userInfo;\r\n\r\n  const { judge0Languges, setShowHeader } = React.useContext(AppContext);\r\n  setShowHeader(true);\r\n\r\n  //set success error messages\r\n  const [formSuccess, setFormSuccess] = useState();\r\n  const [formError, setFormError] = useState();\r\n\r\n  //set static components on load\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [subjects, setSubjects] = useState([]);\r\n  const [groups, setGroups] = useState();\r\n  const [areGroupsLoading, setAreGroupsLoading] = useState(true);\r\n\r\n  //form controlled input fields\r\n  const [selectedSubject, setSelectedSubject] = useState(-1);\r\n  const [selectedGroup, setSelectedGroup] = useState();\r\n  const [language, setLanguage] = useState(judge0Languges[0].id);\r\n  const [code, setCode] = useState();\r\n  const [title, setTitle] = useState();\r\n  const [expectedAnswer, setExpectedAnswer] = useState(\"\");\r\n  const [date, setDate] = useState(new Date());\r\n  const [questions, setQuestions] = useState([\r\n    { id: 0, questionBody: \"\", expectedAnswer: \"\" },\r\n  ]);\r\n  // const [expectedAnswers, setExpectedAnswers] = useState([])\r\n\r\n  //onMount\r\n  useEffect(() => {\r\n    getSubjects(user);\r\n  }, []);\r\n\r\n  function subjectChanged(id) {\r\n    setSelectedSubject(id);\r\n    if (id > 0) {\r\n      getGroups(id);\r\n    }\r\n  }\r\n  async function getGroups(subjectId) {\r\n    console.log(\"getting groups from db...\");\r\n    setAreGroupsLoading(true);\r\n    const response = await axios({\r\n      method: \"get\",\r\n      url: `${rootURL}/subjects/${subjectId}/groups`,\r\n    }).catch((err) => console.log(err));\r\n\r\n    if (response) {\r\n      console.log(response.data);\r\n      setGroups(response.data);\r\n      setSelectedGroup(response.data[0].grupa);\r\n    }\r\n    setAreGroupsLoading(false);\r\n  }\r\n\r\n  async function getSubjects(user) {\r\n    console.log(\"getting subjects from db...\");\r\n    setIsLoading(true);\r\n    const response = await axios({\r\n      method: \"get\",\r\n      url: `${rootURL}/teachers/${user.id}/subjects`,\r\n    }).catch((err) => console.log(err));\r\n\r\n    if (response) {\r\n      console.log(response.data);\r\n      setSubjects(response.data);\r\n    }\r\n    setIsLoading(false);\r\n  }\r\n\r\n  function addQuestionBtnHandler(e) {\r\n    console.log(\"addQuestionBtnHandler\");\r\n\r\n    const lastQuestion = questions[questions.length - 1];\r\n\r\n    setQuestions((questions) =>\r\n      questions.concat({\r\n        id: lastQuestion.id + 1,\r\n        questionBody: \"\",\r\n        expectedAnswer: \"\",\r\n      })\r\n    );\r\n  }\r\n  function removeQuestionBtnHandler(e) {\r\n    console.log(\"removeQuestionBtnHandler\");\r\n    const lastQuestion = questions[questions.length - 1];\r\n    setQuestions((items) =>\r\n      items.filter((item) => {\r\n        return item.id !== lastQuestion.id;\r\n      })\r\n    );\r\n  }\r\n  function handleQuestionsChange(e, index) {\r\n    // 1. Make a shallow copy of the array\r\n    console.log(index);\r\n    let temp_state = [...questions];\r\n\r\n    // 2. Make a shallow copy of the element you want to mutate\r\n    let temp_element = { ...questions.find((x) => x.id === index) };\r\n\r\n    // 3. Update the property you're interested in\r\n    temp_element.questionBody = e.target.value;\r\n\r\n    // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\r\n    temp_state[index] = temp_element;\r\n\r\n    // 5. Set the state to our new copy\r\n    setQuestions(temp_state);\r\n    // console.log(questions.find((x) => x.id === index).questionBody);\r\n  }\r\n\r\n  function handleExpectedResultChange(e, index) {\r\n    // 1. Make a shallow copy of the array\r\n    console.log(index);\r\n    let temp_state = [...questions];\r\n\r\n    // 2. Make a shallow copy of the element you want to mutate\r\n    let temp_element = { ...questions.find((x) => x.id === index) };\r\n\r\n    // 3. Update the property you're interested in\r\n    temp_element.expectedAnswer = e.target.value;\r\n\r\n    // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\r\n    temp_state[index] = temp_element;\r\n\r\n    // 5. Set the state to our new copy\r\n    setQuestions(temp_state);\r\n    // console.log(questions.find((x) => x.id === index).questionBody);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const test = {\r\n      title: title,\r\n      deadline: date,\r\n      subjectId: selectedSubject,\r\n      languageId: language,\r\n      questions: questions,\r\n      group: selectedGroup,\r\n    };\r\n    console.log(test);\r\n    postTest(test);\r\n    console.log(date.getTimezoneOffset());\r\n  }\r\n\r\n  async function postTest(test) {\r\n    console.log(\"posting assignment...\");\r\n    setIsLoading(true);\r\n\r\n    const response = await axios({\r\n      method: \"post\",\r\n      url: `${rootURL}/assignments/create`,\r\n      data: test,\r\n    }).catch((err) => {\r\n      console.log(err.response.data.message);\r\n      setFormError(err.response.data.message);\r\n      setTimeout(() => {\r\n        setFormError(null);\r\n      }, 3000);\r\n      setFormSuccess(null);\r\n    });\r\n\r\n    if (response) {\r\n      console.log(response.data);\r\n      setFormError(null);\r\n      setFormSuccess(response.data.message);\r\n      setTimeout(() => {\r\n        setFormSuccess(null);\r\n      }, 5000);\r\n    }\r\n    setIsLoading(false);\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <FormTitle className=\"formTitle\">Adaugă Test</FormTitle>\r\n      <Form.Group>\r\n        {formSuccess && <FormSuccess text={formSuccess} />}\r\n        {formError && <FormError text={formError} />}\r\n      </Form.Group>\r\n      <Form className=\"addTestForm\">\r\n        <Form.Row>\r\n          <Form.Group as={Col} controlId=\"testTitle\">\r\n            <Form.Label>Titlu test</Form.Label>\r\n            <Form.Control onChange={(e) => setTitle(e.target.value)} />\r\n          </Form.Group>\r\n          <Form.Group as={Col} controlId=\"programmingLanguages\">\r\n            <Form.Label>Limbaj de programare</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              onChange={(e) => setLanguage(e.target.value)}\r\n            >\r\n              {judge0Languges.map((language) => (\r\n                <option value={language.id} key={language.id}>\r\n                  {language.name}\r\n                </option>\r\n              ))}\r\n            </Form.Control>\r\n          </Form.Group>\r\n        </Form.Row>\r\n        <Form.Row>\r\n          <Form.Group as={Col} controlId=\"subjects\">\r\n            <Form.Label>Materie</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              onChange={(e) => subjectChanged(e.target.value)}\r\n            >\r\n              <option value={-1}>Selectează</option>\r\n              {subjects.map((subject) => (\r\n                <option value={subject.id} id={subject.id}>\r\n                  {subject.descriere}\r\n                </option>\r\n              ))}\r\n            </Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Col} controlId=\"StudentGroups\">\r\n            <Form.Label>Grupa</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              onChange={(e) => setSelectedGroup(e.target.value)}\r\n            >\r\n              {areGroupsLoading && selectedSubject == -1 && (\r\n                <option value={-1}>nicio grupa pentru materia selectată</option>\r\n              )}\r\n              {!areGroupsLoading &&\r\n                groups &&\r\n                selectedSubject > 0 &&\r\n                groups.map((item) => (\r\n                  <option value={item.grupa}>{item.grupa}</option>\r\n                ))}\r\n            </Form.Control>\r\n          </Form.Group>\r\n        </Form.Row>\r\n\r\n        <div className=\"questionsContainer\">\r\n          {questions.map((question, index) => (\r\n            <Form.Row className=\"questionRow\">\r\n              <Form.Group as={Col} controlId=\"Problem\">\r\n                <Form.Label>Problema {question.id}</Form.Label>\r\n                <Form.Control\r\n                  as=\"textarea\"\r\n                  rows={1}\r\n                  // value={questions.find((x) => x.id === index).questionBody}\r\n                  onChange={(e) => handleQuestionsChange(e, index)}\r\n                />\r\n              </Form.Group>\r\n              <Col>\r\n                <Form.Label>Rezultat așteptat</Form.Label>\r\n                <Form.Control\r\n                  // value={questions.find((x) => x.id === index).expectedAnswer}\r\n                  onChange={(e) => handleExpectedResultChange(e, index)}\r\n                />\r\n              </Col>\r\n              {!questions[index + 1] && index !== 0 ? (\r\n                <MdRemoveCircleOutline\r\n                  className=\"addQuestionBtn\"\r\n                  onClick={removeQuestionBtnHandler}\r\n                ></MdRemoveCircleOutline>\r\n              ) : (\r\n                <MdAddCircleOutline\r\n                  className=\"addQuestionBtn\"\r\n                  onClick={addQuestionBtnHandler}\r\n                ></MdAddCircleOutline>\r\n              )}\r\n            </Form.Row>\r\n          ))}\r\n        </div>\r\n        <Form.Row>\r\n          <Col className=\"datePickerColumn\">\r\n            <DatePicker\r\n              wrapperClassName=\"datepicker\"\r\n              customInput={<ExampleCustomInput />}\r\n              selected={date}\r\n              onChange={(date) => setDate(date)}\r\n              showTimeSelect\r\n              timeFormat=\"HH:mm\"\r\n              timeIntervals={15}\r\n              timeCaption=\"Timp\"\r\n              dateFormat=\"d MMMM, yyyy HH:mm\"\r\n              fixedHeight\r\n              popperPlacement=\"top-end\"\r\n            />\r\n          </Col>\r\n        </Form.Row>\r\n\r\n        <Form.Row className=\"justify-content-center\">\r\n          <SendBtn primary onClick={(e) => handleSubmit(e)}>\r\n            {isLoading ? (\r\n              <span className=\"loadingContainer\">\r\n                <ImSpinner3 className=\"icon-spin\"></ImSpinner3>\r\n                <span className=\"loadingText\">Se încarcă...</span>\r\n              </span>\r\n            ) : (\r\n              <p>Trimite</p>\r\n            )}\r\n            {/* <p>Trimite</p> */}\r\n          </SendBtn>\r\n        </Form.Row>\r\n      </Form>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst ExampleCustomInput = React.forwardRef(({ value, onClick }, ref) => (\r\n  <div className=\"timePickerBox\" onClick={onClick} ref={ref}>\r\n    <div className=\"deadlineText\">{`Deadline:`}</div>\r\n    {value}\r\n  </div>\r\n));\r\n\r\nconst SendBtn = styled(Button)`\r\nbackground: ${theme.mainBlue};\r\ncolor: white;\r\nmargin-top: 2em;\r\nfont-size: 1rem;\r\nfont-weight: bold;\r\nheight: 2em;\r\nwidth: 20em;\r\nmargin-left: 0;\r\nmargin-right: 0;\r\nwidth: 100%;\r\nborder: none;\r\n\r\n&:hover {\r\n  background: ${theme.mainBlue};\r\n  color: white;\r\n}\r\n  .loadingContainer {\r\n    display: flex;\r\n    \r\n    justify-content: center;\r\n    align-items: center;\r\n    .loadingText {      \r\n      font-family: Roboto\r\n      margin-left: 2em;\r\n    }\r\n\r\n    .icon-spin {\r\n      margin-right: 0.5em;\r\n      -webkit-animation: icon-spin 2s infinite linear;\r\n              animation: icon-spin 2s infinite linear;\r\n    }\r\n    \r\n    @-webkit-keyframes icon-spin {\r\n      0% {\r\n        -webkit-transform: rotate(0deg);\r\n                transform: rotate(0deg);\r\n      }\r\n      100% {\r\n        -webkit-transform: rotate(359deg);\r\n                transform: rotate(359deg);\r\n      }\r\n    }\r\n    \r\n    @keyframes icon-spin {\r\n      0% {\r\n        -webkit-transform: rotate(0deg);\r\n                transform: rotate(0deg);\r\n      }\r\n      100% {\r\n        -webkit-transform: rotate(359deg);\r\n                transform: rotate(359deg);\r\n      }\r\n    }\r\n  }\r\n\r\n  }\r\n  p {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nconst FormTitle = styled.p`\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 2rem;\r\n  margin-bottom: 1em;\r\n`;\r\n\r\nconst Wrapper = styled(Card)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 40%;\r\n  margin-left: 37%;\r\n  height: 100%;\r\n\r\n  margin-top: 7%;\r\n  // padding-left: 5%;\r\n  // padding-right: 5%;\r\n  // padding-bottom: 10%;\r\n  // padding-top: 5%;\r\n\r\n  .addTestForm {\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n  .plus {\r\n    margin-right: 10px;\r\n  }\r\n  .questionsContainer {\r\n    max-height: 12em;\r\n    overflow-y: auto;\r\n    overflow-x: hidden;\r\n  }\r\n\r\n  .addQuestionBtn {\r\n    align-self: center;\r\n    margin-top: 15px;\r\n    margin-right: 15px;\r\n    margin-left: 15px;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .datePickerColumn {\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n\r\n  .timePickerBox {\r\n    display: flex;\r\n    width: 100%;\r\n    height: calc(1.5em + 0.75rem + 2px);\r\n    padding: 0.375rem 0.75rem;\r\n    font-size: 1rem;\r\n    font-weight: 400;\r\n    line-height: 1.5;\r\n    color: #495057;\r\n    background-color: #fff;\r\n    background-clip: padding-box;\r\n    border: 1px solid #ced4da;\r\n    border-radius: 0.25rem;\r\n    transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\r\n  }\r\n\r\n  .deadlineText {\r\n    margin-right: 10px;\r\n    font-weight: 600;\r\n  }\r\n`;\r\n\r\nexport default AddTest;\r\n","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\Loader.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\FormSucces.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\FormError.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\context\\AuthContext.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\home.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\AvatarDropdown.js",["197"],"import React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { FaCaretDown, FaSignOutAlt } from \"react-icons/fa\";\r\nimport { FaFontAwesome } from \"react-icons/fa\";\r\nimport { AiOutlineLogout } from \"react-icons/ai\";\r\n//   import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport defaultAvatar from \"../Assets/images/defaultAvatar.png\";\r\nimport { Button } from \"./defaultComponents\";\r\nimport styled from \"styled-components\";\r\n\r\nconst DropdownItem = ({ item }) => (\r\n  <Button className=\"dropDownItemContiner\" onClick={item.onClick}>\r\n    <AiOutlineLogout />\r\n    <p className=\"dropDownItemTitle\">{item.title}</p>\r\n  </Button>\r\n);\r\n\r\nconst DropdownContent = ({ dropdownItems }) => {\r\n  return (\r\n    <div className=\"dropDownContent\">\r\n      {dropdownItems.map((item, i) => {\r\n        return (\r\n          <div className=\"mt-1\" key={i}>\r\n            <DropdownItem item={item} />\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AvatarDropdown = () => {\r\n  const node = useRef();\r\n  const auth = useContext(AuthContext);\r\n  const { authState } = auth;\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n\r\n  const dropdownItems = [\r\n    {\r\n      title: \"Log Out\",\r\n      icon: FaSignOutAlt,\r\n      onClick: auth.logout,\r\n    },\r\n  ];\r\n\r\n  const handleClick = (e) => {\r\n    if (!node.current.contains(e.target)) {\r\n      setDropdownOpen(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"mousedown\", handleClick);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClick);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div ref={node}>\r\n        <Button\r\n          ref={node}\r\n          className=\"ButtonContainer\"\r\n          onClick={() => setDropdownOpen(!dropdownOpen)}\r\n        >\r\n          <img src={defaultAvatar} className=\"avatarImg\" alt=\"Avatar\" />\r\n          <div className=\"logoutTextContainer\">\r\n            <p className=\"logoutText\">{authState.userInfo.nume}</p>\r\n            {/* <p className=\"logoutText\">{authState.userInfo.prenume}</p> */}\r\n          </div>\r\n          <div className=\"dropDownCaret\">\r\n            <FaCaretDown></FaCaretDown>\r\n          </div>\r\n        </Button>\r\n\r\n        {dropdownOpen && (\r\n          <div className=\"dropDownItems\">\r\n            <DropdownContent dropdownItems={dropdownItems} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  flex-direction: column;\r\n  margin-right: 4rem;\r\n  justify-items: flex-end;\r\n\r\n  .ButtonContainer {\r\n    display: flex;\r\n    border-radius: 3px;\r\n    padding: 3px;\r\n    margin-bottom: 0;\r\n    align-items: center;\r\n    &:focus {\r\n      outline: 2px solid transparent;\r\n      outline-offset: 2px;\r\n    }\r\n    --tw-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1),\r\n      0 4px 6px -2px rgba(0, 0, 0, 0.05);\r\n    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),\r\n      var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);\r\n  }\r\n\r\n  .avatarImg {\r\n    width: 1.5rem;\r\n    border-radius: 9999px;\r\n    border-width: 2px;\r\n    --tw-border-opacity: 1;\r\n    border-color: rgba(255, 255, 255, var(--tw-border-opacity));\r\n  }\r\n\r\n  .logoutTextContainer {\r\n    padding: 3px;\r\n    display: flex;\r\n    align-items: center;\r\n    div {\r\n      margin: 0;\r\n    }\r\n    p {\r\n      margin-bottom: 0;\r\n      margin-left: 0.5rem;\r\n    }\r\n  }\r\n\r\n  //   .logoutText {\r\n  //     text-color: white;\r\n  //   }\r\n\r\n  .dropDownCaret {\r\n    margin: 0.25rem;\r\n  }\r\n  .dropDownItems {\r\n    position: absolute;\r\n    right: 6rem;\r\n  }\r\n  .dropDownContent {\r\n    // width: 100%;\r\n    // margin-right: 2rem;\r\n  }\r\n  .dropDownItemContiner {\r\n    display: flex;\r\n    align-items: center;\r\n    width: 100%;\r\n    // position: relative;\r\n    // padding: 1rem;\r\n    padding-top: 0.5rem;\r\n    padding-bottom: 0.5rem;\r\n    padding-right: 0;\r\n    --tw-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1),\r\n      0 4px 6px -2px rgba(0, 0, 0, 0.05);\r\n    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),\r\n      var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);\r\n    border-radius: 0.2rem;\r\n    margin-top: 0.5rem;\r\n    p {\r\n      margin-bottom: 0;\r\n      margin-left: 0.5rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default AvatarDropdown;\r\n","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\QuestionSlider.js",["198"],"import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport theme from \"../Assets/theme\";\r\n\r\nconst QuestionSlider = (props) => {\r\n  const [question, setQuestion] = useState(props.questions[0]);\r\n  const [index, setIndex] = useState(1);\r\n\r\n  function clickHandler(e) {\r\n    const currentQuestion = props.questions[e.target.id];\r\n    let newIndex = 1;\r\n    try {\r\n      newIndex = parseInt(e.target.id) + 1;\r\n\r\n      setIndex(newIndex);\r\n      setQuestion(currentQuestion);\r\n      props.callback(currentQuestion, parseInt(e.target.id));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Wrapper index={index}>\r\n        <ul>\r\n          {props.questions.map((element, index) => (\r\n            <li key={index} id={index} onClick={clickHandler}>\r\n              {`Întrebarea ${index + 1}`}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        {question && <p>{question.descriere}</p>}\r\n      </Wrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QuestionSlider;\r\n\r\nconst Wrapper = styled.div`\r\n  li {\r\n    font-family: \"Roboto\", sans-serif;\r\n    font-weight: normal;\r\n    color: black;\r\n    /*  background-color: #404040; */\r\n    float: left;\r\n    position: relative;\r\n    padding: 10px 20px;\r\n    overflow: hidden;\r\n    cursor: pointer;\r\n  }\r\n\r\n  li::after {\r\n    background-color: ${theme.mainBlue};\r\n    content: \"\";\r\n    width: 0%;\r\n    height: 3px;\r\n    left: 0;\r\n    bottom: 0;\r\n    transition: width 0.35s ease 0s;\r\n    position: absolute;\r\n  }\r\n\r\n  //   li:hover::after {\r\n  //     width: 100%;\r\n  //   }\r\n\r\n  li:nth-child(${(props) => props.index}) {\r\n    font-weight: bold;\r\n    color: ${theme.mainOrange};\r\n  }\r\n\r\n  li:nth-child(${(props) => props.index})::after {\r\n    width: 100%;\r\n  }\r\n\r\n  ul {\r\n    list-style: none;\r\n    padding: 0;\r\n    margin: 0;\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-bottom: 5rem;\r\n  }\r\n`;\r\n","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\TestsTable.js",["199","200","201"],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\context\\index.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\context\\utils.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\AlertBar.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\evaluateTest.js",[],{"ruleId":"202","replacedBy":"203"},{"ruleId":"204","replacedBy":"205"},{"ruleId":"206","severity":1,"message":"207","line":2,"column":29,"nodeType":"208","messageId":"209","endLine":2,"endColumn":38},{"ruleId":"206","severity":1,"message":"210","line":7,"column":16,"nodeType":"208","messageId":"209","endLine":7,"endColumn":19},{"ruleId":"206","severity":1,"message":"211","line":10,"column":18,"nodeType":"208","messageId":"209","endLine":10,"endColumn":27},{"ruleId":"206","severity":1,"message":"212","line":20,"column":41,"nodeType":"208","messageId":"209","endLine":20,"endColumn":57},{"ruleId":"206","severity":1,"message":"213","line":20,"column":59,"nodeType":"208","messageId":"209","endLine":20,"endColumn":66},{"ruleId":"206","severity":1,"message":"214","line":4,"column":3,"nodeType":"208","messageId":"209","endLine":4,"endColumn":8},{"ruleId":"206","severity":1,"message":"215","line":5,"column":3,"nodeType":"208","messageId":"209","endLine":5,"endColumn":9},{"ruleId":"206","severity":1,"message":"216","line":11,"column":10,"nodeType":"208","messageId":"209","endLine":11,"endColumn":18},{"ruleId":"206","severity":1,"message":"217","line":11,"column":20,"nodeType":"208","messageId":"209","endLine":11,"endColumn":32},{"ruleId":"218","severity":1,"message":"219","line":62,"column":6,"nodeType":"220","endLine":62,"endColumn":8,"suggestions":"221"},{"ruleId":"206","severity":1,"message":"207","line":2,"column":17,"nodeType":"208","messageId":"209","endLine":2,"endColumn":26},{"ruleId":"206","severity":1,"message":"210","line":8,"column":16,"nodeType":"208","messageId":"209","endLine":8,"endColumn":19},{"ruleId":"206","severity":1,"message":"211","line":11,"column":18,"nodeType":"208","messageId":"209","endLine":11,"endColumn":27},{"ruleId":"206","severity":1,"message":"222","line":1,"column":10,"nodeType":"208","messageId":"209","endLine":1,"endColumn":23},{"ruleId":"206","severity":1,"message":"223","line":2,"column":10,"nodeType":"208","messageId":"209","endLine":2,"endColumn":25},{"ruleId":"206","severity":1,"message":"224","line":2,"column":27,"nodeType":"208","messageId":"209","endLine":2,"endColumn":38},{"ruleId":"206","severity":1,"message":"225","line":3,"column":10,"nodeType":"208","messageId":"209","endLine":3,"endColumn":16},{"ruleId":"206","severity":1,"message":"226","line":4,"column":10,"nodeType":"208","messageId":"209","endLine":4,"endColumn":13},{"ruleId":"206","severity":1,"message":"227","line":6,"column":8,"nodeType":"208","messageId":"209","endLine":6,"endColumn":12},{"ruleId":"206","severity":1,"message":"228","line":15,"column":12,"nodeType":"208","messageId":"209","endLine":15,"endColumn":18},{"ruleId":"218","severity":1,"message":"229","line":60,"column":6,"nodeType":"220","endLine":60,"endColumn":8,"suggestions":"230"},{"ruleId":"231","severity":1,"message":"232","line":66,"column":35,"nodeType":"233","messageId":"234","endLine":66,"endColumn":37},{"ruleId":"218","severity":1,"message":"235","line":72,"column":6,"nodeType":"220","endLine":72,"endColumn":12,"suggestions":"236"},{"ruleId":"231","severity":1,"message":"232","line":83,"column":29,"nodeType":"233","messageId":"234","endLine":83,"endColumn":31},{"ruleId":"237","severity":1,"message":"238","line":87,"column":39,"nodeType":"239","messageId":"240","endLine":87,"endColumn":41},{"ruleId":"218","severity":1,"message":"241","line":94,"column":5,"nodeType":"220","endLine":94,"endColumn":20,"suggestions":"242"},{"ruleId":"218","severity":1,"message":"243","line":106,"column":6,"nodeType":"220","endLine":106,"endColumn":21,"suggestions":"244"},{"ruleId":"206","severity":1,"message":"207","line":1,"column":17,"nodeType":"208","messageId":"209","endLine":1,"endColumn":26},{"ruleId":"206","severity":1,"message":"245","line":1,"column":28,"nodeType":"208","messageId":"209","endLine":1,"endColumn":36},{"ruleId":"206","severity":1,"message":"246","line":12,"column":30,"nodeType":"208","messageId":"209","endLine":12,"endColumn":44},{"ruleId":"206","severity":1,"message":"214","line":7,"column":3,"nodeType":"208","messageId":"209","endLine":7,"endColumn":8},{"ruleId":"206","severity":1,"message":"247","line":8,"column":3,"nodeType":"208","messageId":"209","endLine":8,"endColumn":7},{"ruleId":"218","severity":1,"message":"248","line":34,"column":6,"nodeType":"220","endLine":34,"endColumn":8,"suggestions":"249"},{"ruleId":"218","severity":1,"message":"250","line":58,"column":6,"nodeType":"220","endLine":58,"endColumn":19,"suggestions":"251"},{"ruleId":"231","severity":1,"message":"232","line":63,"column":56,"nodeType":"233","messageId":"234","endLine":63,"endColumn":58},{"ruleId":"206","severity":1,"message":"252","line":120,"column":7,"nodeType":"208","messageId":"209","endLine":120,"endColumn":21},{"ruleId":"206","severity":1,"message":"253","line":9,"column":10,"nodeType":"208","messageId":"209","endLine":9,"endColumn":16},{"ruleId":"206","severity":1,"message":"254","line":41,"column":10,"nodeType":"208","messageId":"209","endLine":41,"endColumn":14},{"ruleId":"206","severity":1,"message":"255","line":41,"column":16,"nodeType":"208","messageId":"209","endLine":41,"endColumn":23},{"ruleId":"206","severity":1,"message":"256","line":43,"column":10,"nodeType":"208","messageId":"209","endLine":43,"endColumn":24},{"ruleId":"206","severity":1,"message":"257","line":43,"column":26,"nodeType":"208","messageId":"209","endLine":43,"endColumn":43},{"ruleId":"218","severity":1,"message":"248","line":53,"column":6,"nodeType":"220","endLine":53,"endColumn":8,"suggestions":"258"},{"ruleId":"231","severity":1,"message":"232","line":245,"column":52,"nodeType":"233","messageId":"234","endLine":245,"endColumn":54},{"ruleId":"206","severity":1,"message":"259","line":3,"column":10,"nodeType":"208","messageId":"209","endLine":3,"endColumn":23},{"ruleId":"206","severity":1,"message":"207","line":1,"column":17,"nodeType":"208","messageId":"209","endLine":1,"endColumn":26},{"ruleId":"206","severity":1,"message":"260","line":9,"column":8,"nodeType":"208","messageId":"209","endLine":9,"endColumn":13},{"ruleId":"206","severity":1,"message":"261","line":69,"column":11,"nodeType":"208","messageId":"209","endLine":69,"endColumn":25},{"ruleId":"218","severity":1,"message":"262","line":86,"column":6,"nodeType":"220","endLine":86,"endColumn":18,"suggestions":"263"},"no-native-reassign",["264"],"no-negated-in-lhs",["265"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Col' is defined but never used.","'useFormik' is defined but never used.","'setAuthenticated' is assigned a value but never used.","'setUser' is assigned a value but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'TakeTest' is defined but never used.","'EvaluateTest' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'judge0Languges', 'tests', and 'user'. Either include them or remove the dependency array.","ArrayExpression",["266"],"'DefaultNavbar' is defined but never used.","'FaRegUserCircle' is defined but never used.","'FaArrowLeft' is defined but never used.","'MdMenu' is defined but never used.","'Nav' is defined but never used.","'logo' is defined but never used.","'goBack' is defined but never used.","React Hook useEffect has a missing dependency: 'testState'. Either include it or remove the dependency array.",["267"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'aceLanguages' and 'getTestQuestions'. Either include them or remove the dependency array.",["268"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'test'. Either include it or remove the dependency array.",["269"],"React Hook useEffect has a missing dependency: 'decode'. Either include it or remove the dependency array.",["270"],"'useState' is defined but never used.","'codeEditorText' is assigned a value but never used.","'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["271"],"React Hook useEffect has missing dependencies: 'setTestInProgress' and 'testInProgress'. Either include them or remove the dependency array.",["272"],"'TestsContainer' is assigned a value but never used.","'Loader' is defined but never used.","'code' is assigned a value but never used.","'setCode' is assigned a value but never used.","'expectedAnswer' is assigned a value but never used.","'setExpectedAnswer' is assigned a value but never used.",["273"],"'FaFontAwesome' is defined but never used.","'Paper' is defined but never used.","'judge0Languges' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user.tip'. Either include it or remove the dependency array.",["274"],"no-global-assign","no-unsafe-negation",{"desc":"275","fix":"276"},{"desc":"277","fix":"278"},{"desc":"279","fix":"280"},{"desc":"281","fix":"282"},{"desc":"283","fix":"284"},{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},{"desc":"285","fix":"289"},{"desc":"290","fix":"291"},"Update the dependencies array to be: [judge0Languges, tests, user]",{"range":"292","text":"293"},"Update the dependencies array to be: [testState]",{"range":"294","text":"295"},"Update the dependencies array to be: [aceLanguages, getTestQuestions, test]",{"range":"296","text":"297"},"Update the dependencies array to be: [test, testQuestions]",{"range":"298","text":"299"},"Update the dependencies array to be: [decode, judgeResponse]",{"range":"300","text":"301"},"Update the dependencies array to be: [user]",{"range":"302","text":"303"},"Update the dependencies array to be: [clickedTest, setTestInProgress, testInProgress]",{"range":"304","text":"305"},{"range":"306","text":"303"},"Update the dependencies array to be: [props.data, user.tip]",{"range":"307","text":"308"},[1896,1898],"[judge0Languges, tests, user]",[2002,2004],"[testState]",[2325,2331],"[aceLanguages, getTestQuestions, test]",[2878,2893],"[test, testQuestions]",[3222,3237],"[decode, judgeResponse]",[972,974],"[user]",[1513,1526],"[clickedTest, setTestInProgress, testInProgress]",[2073,2075],[2184,2196],"[props.data, user.tip]"]