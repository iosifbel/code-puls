[{"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\index.js":"1","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\App.js":"2","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\Navbar.js":"3","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\index.js":"4","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\Assets\\theme.js":"5","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\login.js":"6","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\tests.js":"7","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\register.js":"8","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\dashboard.js":"9","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\error.js":"10","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\history.js":"11","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\settings.js":"12","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\Header.js":"13","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\defaultComponents.js":"14","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\NavbarDataStudent.js":"15","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\NavbarDataTeacher.js":"16","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\context\\context.js":"17","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\takeTest.js":"18","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\CodeEditor.js":"19","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\testsGrid.js":"20","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\index.js":"21","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\defaultCodeData.js":"22","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\addTest.js":"23","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\Loader.js":"24","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\FormSucces.js":"25","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\FormError.js":"26","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\context\\AuthContext.js":"27","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\home.js":"28","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\AvatarDropdown.js":"29","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\QuestionSlider.js":"30","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\TestsTable.js":"31","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\context\\index.js":"32","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\context\\utils.js":"33","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\AlertBar.js":"34","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\evaluateTest.js":"35","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\Popup.js":"36","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\StudentGraph.js":"37","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\TeacherGraph.js":"38","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\TeacherGraphGenerator.js":"39"},{"size":501,"mtime":1625831701476,"results":"40","hashOfConfig":"41"},{"size":2549,"mtime":1626372095284,"results":"42","hashOfConfig":"41"},{"size":3406,"mtime":1626374076236,"results":"43","hashOfConfig":"41"},{"size":525,"mtime":1626336731944,"results":"44","hashOfConfig":"41"},{"size":229,"mtime":1626259984397,"results":"45","hashOfConfig":"41"},{"size":9102,"mtime":1626436452239,"results":"46","hashOfConfig":"41"},{"size":3711,"mtime":1626623701655,"results":"47","hashOfConfig":"41"},{"size":9893,"mtime":1625833132094,"results":"48","hashOfConfig":"41"},{"size":8395,"mtime":1626607034338,"results":"49","hashOfConfig":"41"},{"size":388,"mtime":1623710186186,"results":"50","hashOfConfig":"41"},{"size":1228,"mtime":1626623931063,"results":"51","hashOfConfig":"41"},{"size":343,"mtime":1624709372832,"results":"52","hashOfConfig":"41"},{"size":1029,"mtime":1626374117562,"results":"53","hashOfConfig":"41"},{"size":1182,"mtime":1626375091715,"results":"54","hashOfConfig":"41"},{"size":471,"mtime":1625770721924,"results":"55","hashOfConfig":"41"},{"size":477,"mtime":1625770284872,"results":"56","hashOfConfig":"41"},{"size":3105,"mtime":1626512682483,"results":"57","hashOfConfig":"41"},{"size":9394,"mtime":1626515268753,"results":"58","hashOfConfig":"41"},{"size":1434,"mtime":1626368257031,"results":"59","hashOfConfig":"41"},{"size":5378,"mtime":1626621962414,"results":"60","hashOfConfig":"41"},{"size":651,"mtime":1626580525896,"results":"61","hashOfConfig":"41"},{"size":838,"mtime":1624828708070,"results":"62","hashOfConfig":"41"},{"size":13728,"mtime":1626618154919,"results":"63","hashOfConfig":"41"},{"size":2336,"mtime":1624886094727,"results":"64","hashOfConfig":"41"},{"size":594,"mtime":1625772515928,"results":"65","hashOfConfig":"41"},{"size":613,"mtime":1625772519627,"results":"66","hashOfConfig":"41"},{"size":1864,"mtime":1625840285790,"results":"67","hashOfConfig":"41"},{"size":1042,"mtime":1625821685091,"results":"68","hashOfConfig":"41"},{"size":4314,"mtime":1625845206726,"results":"69","hashOfConfig":"41"},{"size":2270,"mtime":1626513744321,"results":"70","hashOfConfig":"41"},{"size":4445,"mtime":1626623575093,"results":"71","hashOfConfig":"41"},{"size":163,"mtime":1626265693688,"results":"72","hashOfConfig":"41"},{"size":87,"mtime":1626265718363,"results":"73","hashOfConfig":"41"},{"size":759,"mtime":1626284009089,"results":"74","hashOfConfig":"41"},{"size":11644,"mtime":1626536425472,"results":"75","hashOfConfig":"41"},{"size":1376,"mtime":1626537661420,"results":"76","hashOfConfig":"41"},{"size":1120,"mtime":1626604522128,"results":"77","hashOfConfig":"41"},{"size":1191,"mtime":1626604514902,"results":"78","hashOfConfig":"41"},{"size":655,"mtime":1626604518588,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"12hnw4i",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"82"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"82"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"82"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"82"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"82"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"82"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"82"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"82"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"82"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"82"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\index.js",[],["169","170"],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\App.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\Navbar.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\index.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\Assets\\theme.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\login.js",["171","172","173","174","175"],"import { Link, Redirect } from \"react-router-dom\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { AppContext } from \"../context/context\";\r\nimport { FormSuccess, FormError } from \"../components\";\r\nimport { Card, Button } from \"../components/defaultComponents\";\r\nimport styled from \"styled-components\";\r\nimport { Form, Col } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport theme from \"../Assets/theme\";\r\nimport { Formik, useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport { ImSpinner3 } from \"react-icons/im\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\n\r\nconst rootURL = \"http://localhost:5000/api\";\r\nfunction Login() {\r\n  const authContext = useContext(AuthContext);\r\n\r\n  const { setShowNavbar, setShowHeader, setAuthenticated, setUser } =\r\n    useContext(AppContext);\r\n  setShowNavbar(false);\r\n  setShowHeader(false);\r\n  const [type, setType] = useState(\"student\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [redirectOnLogin, setRedirectOnLogin] = useState(false);\r\n  const [loginSuccess, setLoginSuccess] = useState();\r\n  const [loginError, setLoginError] = useState();\r\n\r\n  const schema = yup.object().shape({\r\n    email: yup\r\n      .string()\r\n      .matches(\r\n        type === \"student\" ? /(@stud.ase.ro)/ : /(@ie.ase.ro)/,\r\n        \"Adresă nepotrivită pentru tipul de utilizator\",\r\n        {\r\n          excludeEmptyString: true,\r\n        }\r\n      )\r\n      .email(\"Adresă de email invalidă\")\r\n      .required(\"Nicio adresă de email\"),\r\n    password: yup.string().required(\"Nicio parolă introdusă\"),\r\n  });\r\n\r\n  async function login(user) {\r\n    console.log(user);\r\n    setIsLoading(true);\r\n    const response = await axios({\r\n      method: \"post\",\r\n      url: `${rootURL}/auth/login`,\r\n      data: user,\r\n    }).catch((err) => {\r\n      if (err.response) {\r\n        console.log(err.response.data.message);\r\n        setLoginError(err.response.data.message);\r\n      } else {\r\n        setLoginError(\"Serverul nu raspunde\");\r\n      }\r\n\r\n      setLoginSuccess(null);\r\n    });\r\n    if (response) {\r\n      // console.log(response.data);\r\n      authContext.setAuthState(response.data);\r\n      setLoginError(null);\r\n      setLoginSuccess(response.data.message);\r\n      setTimeout(() => {\r\n        setRedirectOnLogin(true);\r\n      }, 1500);\r\n    }\r\n\r\n    setIsLoading(false);\r\n  }\r\n\r\n  function submitHandler(user) {\r\n    console.log(\"submitted\");\r\n    user.type = type;\r\n    login(user);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {redirectOnLogin && <Redirect to=\"/dashboard\" />}\r\n      <Wrapper>\r\n        <FormCard>\r\n          <Formik\r\n            validationSchema={schema}\r\n            // onSubmit={(values) => {\r\n            //   alert(JSON.stringify(values, null, 2));\r\n            // }}\r\n            onSubmit={(values) => {\r\n              submitHandler(values);\r\n            }}\r\n            initialValues={{\r\n              email: \"\",\r\n              password: \"\",\r\n            }}\r\n          >\r\n            {({\r\n              handleSubmit,\r\n              handleChange,\r\n              handleBlur,\r\n              values,\r\n              touched,\r\n              isValid,\r\n              errors,\r\n            }) => (\r\n              <Form noValidate onSubmit={handleSubmit}>\r\n                <Form.Group>\r\n                  {loginSuccess && <FormSuccess text={loginSuccess} />}\r\n                  {loginError && <FormError text={loginError} />}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                  <Form.Label>Adresă de email</Form.Label>\r\n                  <Form.Control\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    value={values.email}\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    placeholder=\"Introdu email\"\r\n                    isValid={touched.email && !errors.email}\r\n                    isInvalid={touched.email && !!errors.email}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.email}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                  <Form.Label>Parolă</Form.Label>\r\n                  <Form.Control\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    value={values.password}\r\n                    placeholder=\"Introdu Parola\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    isValid={touched.password && !errors.password}\r\n                    isInvalid={touched.password && !!errors.password}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.password}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicCheckbox\">\r\n                  <Form.Label>Tip cont</Form.Label>\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    // name=\"type\"\r\n                    // value={type}\r\n                    onChange={(e) => setType(e.target.value)}\r\n                    // onChange={(e) => setType(e.target.value)}\r\n                    // onBlur={handleBlur}\r\n                  >\r\n                    <option value=\"student\">Student</option>\r\n                    <option value=\"teacher\">Profesor</option>\r\n                  </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <LoginBtn variant=\"primary\" type=\"submit\">\r\n                    {isLoading ? (\r\n                      <span className=\"loadingContainer\">\r\n                        <ImSpinner3 className=\"icon-spin\"></ImSpinner3>\r\n                        <span className=\"loadingText\">Se încarcă...</span>\r\n                      </span>\r\n                    ) : (\r\n                      <p>Login</p>\r\n                    )}\r\n                    <p>Login</p>\r\n                  </LoginBtn>\r\n                </Form.Group>\r\n\r\n                <div class=\"sau\">\r\n                  <p>\r\n                    <span>sau</span>\r\n                  </p>\r\n                </div>\r\n\r\n                <Form.Group>\r\n                  <Link to=\"/register\" className=\"registerBtnContainer\">\r\n                    <RegisterBtn variant=\"secondary\" type=\"submit\">\r\n                      <p>Creează un cont</p>\r\n                    </RegisterBtn>\r\n                  </Link>\r\n                </Form.Group>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </FormCard>\r\n      </Wrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  height: 100vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  // .loginLink {\r\n  //   text-decoration: none;\r\n  // }\r\n  a {\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\nconst FormCard = styled(Card)`\r\n  width: 30em;\r\n  min-height 32em;\r\n\r\n  .loadingContainer {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    .loadingText {      \r\n      font-family: Roboto\r\n      margin-left: 2em;\r\n    }\r\n\r\n    .icon-spin {\r\n      margin-right: 0.5em;\r\n      -webkit-animation: icon-spin 2s infinite linear;\r\n              animation: icon-spin 2s infinite linear;\r\n    }\r\n    \r\n    @-webkit-keyframes icon-spin {\r\n      0% {\r\n        -webkit-transform: rotate(0deg);\r\n                transform: rotate(0deg);\r\n      }\r\n      100% {\r\n        -webkit-transform: rotate(359deg);\r\n                transform: rotate(359deg);\r\n      }\r\n    }\r\n    \r\n    @keyframes icon-spin {\r\n      0% {\r\n        -webkit-transform: rotate(0deg);\r\n                transform: rotate(0deg);\r\n      }\r\n      100% {\r\n        -webkit-transform: rotate(359deg);\r\n                transform: rotate(359deg);\r\n      }\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  .sau {\r\n    margin-top: 2em;\r\n    margin-bottom: 1em;\r\n    p {\r\n      \r\n      \r\n      width: 100%; \r\n      text-align: center; \r\n      border-bottom: 1px solid ${theme.Grey2}; \r\n      line-height: 0.1em;\r\n      margin: 10px 0 20px; \r\n      \r\n   } \r\n   \r\n   p span { \r\n       background:#fff; \r\n       padding:0 10px; \r\n       font-weight: bold;\r\n       color: ${theme.Grey1}\r\n   }\r\n  }\r\n\r\n`;\r\n\r\nconst LoginBtn = styled(Button)`\r\n  background: ${theme.mainBlue};\r\n  color: white;\r\n  margin-top: 2em;\r\n  font-size: 1rem;\r\n  font-weight: bold;\r\n  height: 2em;\r\n  width: 20em;\r\n  margin-left: 0;\r\n  margin-right: 0;\r\n  width: 100%;\r\n  border: none;\r\n\r\n  &:hover {\r\n    background: ${theme.mainBlue};\r\n    color: white;\r\n  }\r\n`;\r\n\r\nconst RegisterBtn = styled(Button)`\r\n  background: white;\r\n  color: ${theme.mainBlue};\r\n  margin-top: 2em;\r\n  font-size: 1rem;\r\n  font-weight: bold;\r\n  height: 2em;\r\n  width: 20em;\r\n  margin-left: 0;\r\n  margin-right: 0;\r\n  width: 100%;\r\n  border: 1px solid ${theme.Grey1};\r\n  box-sizing: border-box;\r\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.08);\r\n  border-radius: 5px;\r\n\r\n  &:hover {\r\n    background: white;\r\n    color: ${theme.mainBlue};\r\n  }\r\n`;\r\n\r\nexport default Login;\r\n","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\tests.js",["176","177","178","179","180","181"],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\register.js",["182","183","184"],"import { Link, Redirect } from \"react-router-dom\";\r\nimport React, { useEffect, useState, useContext } from \"react\";\r\nimport { AppContext } from \"../context/context\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport { Card, Button } from \"../components/defaultComponents\";\r\nimport { FormSuccess, FormError } from \"../components\";\r\nimport styled from \"styled-components\";\r\nimport { Form, Col } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport theme from \"../Assets/theme\";\r\nimport { Formik, useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport { ImSpinner3 } from \"react-icons/im\";\r\n\r\nconst rootURL = \"http://localhost:5000/api\";\r\n\r\nfunction Register() {\r\n  const { setShowNavbar, setShowHeader } = useContext(AppContext);\r\n  const authContext = useContext(AuthContext);\r\n  setShowNavbar(false);\r\n  setShowHeader(false);\r\n  const [type, setType] = useState(\"student\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [registerSuccess, setRegisterSuccess] = useState();\r\n  const [registerError, setRegisterError] = useState();\r\n  const [redirectOnRegister, setRedirectOnRegister] = useState(false);\r\n\r\n  const schema = yup.object().shape({\r\n    firstName: yup.string().required(\"Niciun nume introdus\"),\r\n    // .matches(/^[aA-zZ\\s]+$/, \"Doar litere\"),\r\n    lastName: yup.string().required(\"Niciun nume introdus\"),\r\n    // .matches(/^[aA-zZ\\s]+$/, \"Doar litere\"),\r\n    email: yup\r\n      .string()\r\n      .matches(\r\n        type === \"student\" ? /(@stud.ase.ro)/ : /(@ie.ase.ro)/,\r\n        \"Adresă nepotrivită pentru tipul de utilizator\",\r\n        {\r\n          excludeEmptyString: true,\r\n        }\r\n      )\r\n      .email(\"Adresă de email invalidă\")\r\n      .required(\"Nicio adresă de email\"),\r\n    password: yup.string().required(\"Nicio parolă introdusă\"),\r\n  });\r\n\r\n  async function register(user) {\r\n    console.log(user);\r\n    setIsLoading(true);\r\n    const response = await axios({\r\n      method: \"post\",\r\n      url: `${rootURL}/auth/register`,\r\n      data: user,\r\n    }).catch((err) => {\r\n      // console.log(err.response.data.message);\r\n      setRegisterError(err.response.data.message);\r\n      setRegisterSuccess(null);\r\n    });\r\n    if (response) {\r\n      // console.log(response.data);\r\n      authContext.setAuthState(response.data);\r\n      setRegisterSuccess(response.data.message);\r\n      setRegisterError(null);\r\n      setTimeout(() => {\r\n        setRedirectOnRegister(true);\r\n      }, 1500);\r\n    }\r\n    setIsLoading(false);\r\n  }\r\n\r\n  function submitHandler(user) {\r\n    console.log(\"submitted\");\r\n    user.type = type;\r\n    register(user);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {redirectOnRegister && <Redirect to=\"/dashboard\" />}\r\n      <Wrapper>\r\n        <FormCard>\r\n          <Formik\r\n            validationSchema={schema}\r\n            // onSubmit={(values) => {\r\n            //   alert(JSON.stringify(values, null, 2));\r\n            // }}\r\n            onSubmit={(values) => {\r\n              submitHandler(values);\r\n            }}\r\n            initialValues={{\r\n              firstName: \"\",\r\n              lastName: \"\",\r\n              email: \"\",\r\n              password: \"\",\r\n            }}\r\n          >\r\n            {({\r\n              handleSubmit,\r\n              handleChange,\r\n              handleBlur,\r\n              values,\r\n              touched,\r\n              isValid,\r\n              errors,\r\n            }) => (\r\n              <Form noValidate onSubmit={handleSubmit}>\r\n                <Form.Group>\r\n                  {registerSuccess && <FormSuccess text={registerSuccess} />}\r\n                  {registerError && <FormError text={registerError} />}\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Label>Nume</Form.Label>\r\n                  <Form.Control\r\n                    name=\"lastName\"\r\n                    type=\"lastName\"\r\n                    value={values.lastName}\r\n                    placeholder=\"Introdu numele\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    isValid={touched.lastName && !errors.lastName}\r\n                    isInvalid={touched.lastName && !!errors.lastName}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.lastName}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Label>Prenume</Form.Label>\r\n                  <Form.Control\r\n                    name=\"firstName\"\r\n                    type=\"firstName\"\r\n                    value={values.firstName}\r\n                    placeholder=\"Introdu prenumele\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    isValid={touched.firstName && !errors.firstName}\r\n                    isInvalid={touched.firstName && !!errors.firstName}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.firstName}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                  <Form.Label>Adresă de email</Form.Label>\r\n                  <Form.Control\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    value={values.email}\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    placeholder=\"Introdu email\"\r\n                    isValid={touched.email && !errors.email}\r\n                    isInvalid={touched.email && !!errors.email}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.email}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                  <Form.Label>Parolă</Form.Label>\r\n                  <Form.Control\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    value={values.password}\r\n                    placeholder=\"Introdu Parola\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    isValid={touched.password && !errors.password}\r\n                    isInvalid={touched.password && !!errors.password}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.password}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicCheckbox\">\r\n                  <Form.Label>Tip cont</Form.Label>\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    // name=\"type\"\r\n                    // value={type}\r\n                    onChange={(e) => setType(e.target.value)}\r\n                    // onChange={(e) => setType(e.target.value)}\r\n                    // onBlur={handleBlur}\r\n                  >\r\n                    <option value=\"student\">Student</option>\r\n                    <option value=\"teacher\">Profesor</option>\r\n                  </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <LoginBtn variant=\"secondary\" type=\"submit\">\r\n                    {isLoading ? (\r\n                      <span className=\"loadingContainer\">\r\n                        <ImSpinner3 className=\"icon-spin\"></ImSpinner3>\r\n                        <span className=\"loadingText\">Se încarcă...</span>\r\n                      </span>\r\n                    ) : (\r\n                      <p>Creează cont</p>\r\n                    )}\r\n                  </LoginBtn>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"alreadyHaveContainer\">\r\n                  <p>Ai deja un cont?</p>\r\n                  <Link to=\"/login\" className=\"loginText\">\r\n                    Login\r\n                  </Link>\r\n                </Form.Group>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </FormCard>\r\n      </Wrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  height: 100vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  // .loginLink {\r\n  //   text-decoration: none;\r\n  // }\r\n  a {\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\nconst FormCard = styled(Card)`\r\n  width: 30em;\r\n  min-height 32em;\r\n\r\n  .loadingContainer {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    .loadingText {      \r\n      font-family: Roboto\r\n      margin-left: 2em;\r\n    }\r\n\r\n    .icon-spin {\r\n      margin-right: 0.5em;\r\n      -webkit-animation: icon-spin 2s infinite linear;\r\n              animation: icon-spin 2s infinite linear;\r\n    }\r\n    \r\n    @-webkit-keyframes icon-spin {\r\n      0% {\r\n        -webkit-transform: rotate(0deg);\r\n                transform: rotate(0deg);\r\n      }\r\n      100% {\r\n        -webkit-transform: rotate(359deg);\r\n                transform: rotate(359deg);\r\n      }\r\n    }\r\n    \r\n    @keyframes icon-spin {\r\n      0% {\r\n        -webkit-transform: rotate(0deg);\r\n                transform: rotate(0deg);\r\n      }\r\n      100% {\r\n        -webkit-transform: rotate(359deg);\r\n                transform: rotate(359deg);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n .alreadyHaveContainer {\r\n   font-size: 0.9rem;\r\n   color: ${theme.Grey1};   \r\n  font-style: normal;\r\n  font-weight: bold;\r\n   background: white;\r\n   display: flex;\r\n   direction: row;\r\n\r\n   .loginText{\r\n     margin-left: 0.5em;\r\n     font-weight: normal;\r\n   }\r\n   \r\n }\r\n\r\n`;\r\n\r\nconst LoginBtn = styled(Button)`\r\n  background: ${theme.mainOrange};\r\n  color: white;\r\n  margin: 0;\r\n  margin-top: 2em;\r\n  font-size: 1rem;\r\n  font-weight: bold;\r\n  height: 2em;\r\n  width: 20em;\r\n  width: 100%;\r\n  border: none;\r\n\r\n  &:hover {\r\n    background: ${theme.mainOrange};\r\n    color: white;\r\n  }\r\n`;\r\n\r\nexport default Register;\r\n","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\dashboard.js",["185","186","187","188","189","190"],"import styled from \"styled-components\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { AppContext } from \"../context/context\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport { Card } from \"../components/defaultComponents\";\r\nimport { StudentGraph, TeacherGraph } from \"../components\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport theme from \"../Assets/theme\";\r\nimport axios from \"axios\";\r\nimport { utils } from \"../context\";\r\nimport { dataGenerator } from \"../components/TeacherGraphGenerator\";\r\n\r\nfunction Dashboard(props) {\r\n  const user = useContext(AuthContext).authState.userInfo;\r\n  const { setShowHeader, setShowNavbar } = React.useContext(AppContext);\r\n  setShowHeader(true);\r\n  setShowNavbar(true);\r\n\r\n  const [scatterDemoData, setScatterDemoData] = useState([]);\r\n  const [data, setData] = useState();\r\n  const [subjectOptions, setSubjectOptions] = useState();\r\n  const [selectedSubject, setSelectedSubject] = useState({ id: -1, text: \"\" });\r\n  const [selectedGroup, setSelectedGroup] = useState();\r\n  const [groupsOptions, setGroupsOptions] = useState();\r\n  const [studentGraphData, setStudentGraphData] = useState();\r\n  const [scatterData, setScatterData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getSubjectOptions();\r\n    if (user.tip === \"profesor\") {\r\n      setScatterData(dataGenerator(30));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (user.tip === \"profesor\") {\r\n      if (selectedSubject && selectedGroup) {\r\n        getScatterplotGrades(selectedSubject.id, selectedGroup);\r\n      }\r\n    } else if (user.tip === \"student\") {\r\n      if (selectedSubject) {\r\n        console.log(selectedSubject);\r\n      }\r\n    }\r\n  }, [selectedSubject, selectedGroup]);\r\n\r\n  //   useEffect(()=> {\r\n  // if(studentGraphData) {\r\n\r\n  // }\r\n  //   }, [studentGraphData(])\r\n\r\n  // useEffect(() => {\r\n  //   if (subjectOptions) {\r\n  //     console.log(subjectOptions);\r\n  //   }\r\n  // }, [subjectOptions]);\r\n\r\n  function subjectHandler(id) {\r\n    try {\r\n      const subjectId = parseInt(id);\r\n      if (subjectId !== -1) {\r\n        const selectedSubject = subjectOptions.find(\r\n          (item) => item.id === subjectId\r\n        );\r\n        setSelectedSubject(selectedSubject);\r\n\r\n        if (user.tip === \"profesor\") {\r\n          getGroupsOptions(selectedSubject.id);\r\n        } else if (user.tip === \"student\") {\r\n          getSubjectTests(selectedSubject.id);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  function groupsHandler(groupId) {\r\n    if (groupId !== \"-1\") {\r\n      setSelectedGroup(groupId);\r\n    }\r\n  }\r\n\r\n  const getScatterplotGrades = async (subjectId, group) => {\r\n    try {\r\n      const url = `${utils.rootURL}/grades/scatterplot/${subjectId}/${group}`;\r\n      const { data } = await axios.get(url);\r\n\r\n      console.log(data);\r\n      const freqMap = buildFrequencyMap(data);\r\n      setScatterData(freqMap);\r\n      console.log(freqMap);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const buildFrequencyMap = (array) => {\r\n    const map = {};\r\n    array.forEach((item) => {\r\n      if (map[item]) {\r\n        map[item]++;\r\n      } else {\r\n        map[item] = 1;\r\n      }\r\n    });\r\n\r\n    const data = [];\r\n    Object.keys(map).forEach((item) => {\r\n      data.push({ val: parseInt(item), arg: map[item] });\r\n    });\r\n    // console.log(obj);\r\n    return data;\r\n  };\r\n\r\n  const getSubjectTests = async (subjectId) => {\r\n    const tests = [];\r\n    try {\r\n      const url = `${utils.rootURL}/students/${user.id}/grades/${subjectId}`;\r\n      const { data } = await axios.get(url);\r\n      if (data) {\r\n        data.forEach((item) => {\r\n          const date = new Date(item.deadline);\r\n          item.date = `${date.getDate()}/${parseInt(date.getMonth()) + 1}`;\r\n          item.grade = item.nota;\r\n          tests.push(item);\r\n        });\r\n      }\r\n      setStudentGraphData(tests);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getGroupsOptions = async (subjectId) => {\r\n    try {\r\n      const url = `${utils.rootURL}/subjects/${subjectId}/groups`;\r\n\r\n      const { data } = await axios.get(url);\r\n      // console.log(url);\r\n\r\n      const options = [];\r\n      // console.log(data);\r\n\r\n      data.forEach((item) => {\r\n        options.push(item.grupa);\r\n      });\r\n      setGroupsOptions(options);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getSubjectOptions = async () => {\r\n    try {\r\n      if (user) {\r\n        let url = `${utils.rootURL}`;\r\n\r\n        if (user.tip === \"student\") {\r\n          url += `/students/${user.id}/subjects`;\r\n        } else if (user.tip === \"profesor\") {\r\n          url += `/teachers/${user.id}/subjects`;\r\n        }\r\n\r\n        const { data } = await axios.get(url);\r\n        // setData(data);\r\n        // console.log(data);\r\n\r\n        const subjectOptions = [];\r\n\r\n        data.forEach((item) => {\r\n          subjectOptions.push({ id: item.id, text: item.descriere });\r\n        });\r\n        setSubjectOptions(subjectOptions);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <GreetingsCard>\r\n        <h1>Buna {user.nume},</h1>\r\n        <h2>Cum te simți astăzi?</h2>\r\n      </GreetingsCard>\r\n      <div className=\"graphCardsContainer\">\r\n        <GraphCard className=\"align-items-center justify-content-center\">\r\n          {user.tip === \"student\" ? (\r\n            <StudentGraph\r\n              subject={selectedSubject.text}\r\n              data={studentGraphData}\r\n            ></StudentGraph>\r\n          ) : (\r\n            <TeacherGraph\r\n              subject={selectedSubject.text}\r\n              group={selectedGroup}\r\n              data={scatterData}\r\n            ></TeacherGraph>\r\n          )}\r\n        </GraphCard>\r\n        <GraphInputCard className=\"align-items-center justify-content-center\">\r\n          <div className=\"formTitle\">Alege setarile graficului</div>\r\n          <Form.Group>\r\n            {/* <Form.Label>Alege materia</Form.Label> */}\r\n            <Form.Control\r\n              as=\"select\"\r\n              className=\"Forminput\"\r\n              onChange={(e) => subjectHandler(e.target.value)}\r\n            >\r\n              <option key={-1} value={-1}>\r\n                Selectează materia\r\n              </option>\r\n              {subjectOptions &&\r\n                subjectOptions.length > 0 &&\r\n                subjectOptions.map((item, index) => (\r\n                  <option key={index} value={item.id}>\r\n                    {item.text}\r\n                  </option>\r\n                ))}\r\n            </Form.Control>\r\n          </Form.Group>\r\n          {user.tip === \"profesor\" && (\r\n            <Form.Group>\r\n              {/* <Form.Label>Alege grupa</Form.Label> */}\r\n              <Form.Control\r\n                as=\"select\"\r\n                className=\"Forminput\"\r\n                onChange={(e) => groupsHandler(e.target.value)}\r\n              >\r\n                <option key={-1} value={-1}>\r\n                  Selectează grupa\r\n                </option>\r\n                {groupsOptions &&\r\n                  groupsOptions.length > 0 &&\r\n                  groupsOptions.map((item, index) => (\r\n                    <option key={index} value={item}>\r\n                      {item}\r\n                    </option>\r\n                  ))}\r\n              </Form.Control>\r\n            </Form.Group>\r\n          )}\r\n        </GraphInputCard>\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n}\r\nconst GraphInputCard = styled(Card)`\r\n  flex-grow: 1;\r\n  // .Forminput {\r\n  //   min-width: 5rem;\r\n  // }\r\n  padding: 5rem;\r\n\r\n  .formTitle {\r\n    margin-bottom: 1rem;\r\n    font-size: 1.2rem;\r\n  }\r\n`;\r\nconst GraphCard = styled(Card)`\r\n  flex-grow: 2;\r\n  margin-right: 1rem;\r\n`;\r\nconst GreetingsCard = styled(Card)`\r\n  width: 100%;\r\n  margin-bottom: 1rem;\r\n  h1 {\r\n    font-weight: normal;\r\n    font-size: 1.5rem;\r\n    margin-bottom: 1rem;\r\n  }\r\n\r\n  h2 {\r\n    font-weight: normal;\r\n    font-size: 1rem;\r\n  }\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-left: 25vw;\r\n  margin-top: 20vh;\r\n  margin-right: 10vw;\r\n  margin-bottom: 10vh;\r\n  height: 53vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 1rem;\r\n  color: ${theme.mainBlack};\r\n  .graphCardsContainer {\r\n    flex-grow: 1;\r\n    width: 100%;\r\n    display: flex;\r\n    height: auto;\r\n  }\r\n`;\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\error.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\history.js",["191"],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\settings.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\Header.js",["192","193","194","195","196","197","198"],"import { DefaultNavbar } from \"./defaultComponents\";\r\nimport { FaRegUserCircle, FaArrowLeft } from \"react-icons/fa\";\r\nimport { MdMenu } from \"react-icons/md\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport styled from \"styled-components\";\r\nimport logo from \"../Assets/logo.svg\";\r\nimport { useHistory, withRouter } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport { AppContext } from \"../context/context\";\r\nimport AvatarDropdown from \"./AvatarDropdown\";\r\n\r\nfunction Header() {\r\n  const { showHeader } = React.useContext(AppContext);\r\n  const history = useHistory();\r\n  function goBack() {\r\n    history.goBack();\r\n  }\r\n\r\n  return !showHeader ? null : (\r\n    <Wrapper>\r\n      <nav>\r\n        <div>\r\n          <AvatarDropdown></AvatarDropdown>\r\n        </div>\r\n      </nav>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  height: 7vh;\r\n  // justify-content: end;\r\n\r\n  nav {\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n  }\r\n`;\r\n\r\nexport default withRouter(Header);\r\n","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\defaultComponents.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\NavbarDataStudent.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\NavbarDataTeacher.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\context\\context.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\takeTest.js",["199","200","201","202","203","204","205"],"import { Card, Button } from \"../components/defaultComponents\";\r\nimport { CodeEditor, Loader, QuestionSlider, AlertBar } from \"../components\";\r\nimport styled from \"styled-components\";\r\nimport React, { useEffect, useState, useContext } from \"react\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport { AppContext } from \"../context/context\";\r\nimport DefaultCode from \"../components/defaultCodeData\";\r\nimport axios from \"axios\";\r\n\r\nconst rootURL = \"http://localhost:5000/api\";\r\n\r\nfunction TakeTest() {\r\n  // console.log(\"salut\");\r\n  const { setShowNavbar, setShowHeader } = useContext(AppContext);\r\n  setShowNavbar(false);\r\n  setShowHeader(true);\r\n\r\n  //get current User\r\n  const auth = useContext(AuthContext);\r\n  const { authState } = auth;\r\n  const user = authState.userInfo;\r\n\r\n  //get current test\r\n  const [test, setTest] = useState();\r\n\r\n  const {\r\n    testState,\r\n    testQuestions,\r\n    getTestQuestions,\r\n    isLoading,\r\n    aceLanguages,\r\n    encode,\r\n    decode,\r\n    removeTestInProgress,\r\n  } = React.useContext(AppContext);\r\n\r\n  const [language, setLanguage] = useState(\"javascript\");\r\n  const [stdout, setStdout] = useState(\" \");\r\n  const [compileError, setCompileError] = useState();\r\n  const [testCaseStatus, setTestCaseStatus] = useState(\" \");\r\n  const [judgeResponse, setJudgeResponse] = useState();\r\n  const [isConsoleLoading, setIsConsoleLoading] = useState(false);\r\n  const [isSubmitLoading, setIsSubmitLoading] = useState(false);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [currentQuestion, setCurrentQuestion] = useState();\r\n  const [codeEditorText, setCodeEditorText] = useState([]);\r\n  const [currentCodeEditorText, setCurrentCodeEditorText] = useState();\r\n  const [alert, setAlert] = useState({\r\n    open: false,\r\n    severity: \"success\",\r\n    message: \"\",\r\n  });\r\n\r\n  //onMount\r\n  useEffect(() => {\r\n    // console.log(testState);\r\n    setTest(testState);\r\n    // console.log(\"onMount\");\r\n    // console.log(test.id);\r\n  }, []);\r\n  useEffect(() => {\r\n    if (test) {\r\n      getTestQuestions(test.id);\r\n      // console.log(testQuestions);\r\n      const aceLanguage = aceLanguages.find(\r\n        (language) => language.id == test.id_limbaj_programare\r\n      );\r\n      if (aceLanguage) {\r\n        setLanguage(aceLanguage.name);\r\n      }\r\n    }\r\n  }, [test]);\r\n\r\n  useEffect(() => {\r\n    setCurrentQuestion(testQuestions[0]);\r\n  }, [testQuestions]);\r\n\r\n  //Initialize codeEditor with default code\r\n  useEffect(\r\n    () => {\r\n      if (testQuestions && test) {\r\n        const defaultCode = DefaultCode.find(\r\n          (item) => item.id == test.id_limbaj_programare\r\n        );\r\n        if (defaultCode) {\r\n          let array = [];\r\n          testQuestions.map((element) => {\r\n            array.push(defaultCode.code);\r\n          });\r\n          setCodeEditorText(array);\r\n        }\r\n      }\r\n    },\r\n    [testQuestions],\r\n    [test]\r\n  );\r\n\r\n  //When judgeResponse change\r\n  useEffect(() => {\r\n    if (judgeResponse) {\r\n      console.log(\"judge response changed\");\r\n      setStdout(decode(judgeResponse.stdout));\r\n      setTestCaseStatus(judgeResponse.status.description);\r\n      setCompileError(decode(judgeResponse.compile_output));\r\n    }\r\n  }, [judgeResponse]);\r\n\r\n  function questionChanged(question, index) {\r\n    // console.log(testQuestions);\r\n    // console.log(question);\r\n    setCurrentQuestionIndex(index);\r\n    setCurrentQuestion(question);\r\n  }\r\n  function codeEditorTextChanged(text) {\r\n    console.log(text);\r\n\r\n    let temp_state = [...codeEditorText];\r\n\r\n    if (codeEditorText.length > currentQuestionIndex) {\r\n      temp_state[currentQuestionIndex] = text;\r\n    } else {\r\n      temp_state.push(text);\r\n    }\r\n    setCodeEditorText(temp_state);\r\n    setCurrentCodeEditorText(text);\r\n  }\r\n\r\n  const getJudgeAssessment = async (test) => {\r\n    console.log(\"getting assessment from judge...\");\r\n    setIsConsoleLoading(true);\r\n    const judgeData = {\r\n      source_code: test.source_code,\r\n      language_id: test.language_id,\r\n      stdin: test.stdin,\r\n    };\r\n    // console.log(test.source_cod);\r\n    const response = await axios({\r\n      method: \"post\",\r\n      url: `${rootURL}/questions/assess/${test.questionId}/${test.id}/${user.id}`,\r\n      data: judgeData,\r\n    }).catch((err) => console.log(err));\r\n\r\n    if (response) {\r\n      console.log(response.data);\r\n      setJudgeResponse(response.data);\r\n    }\r\n    setIsConsoleLoading(false);\r\n  };\r\n  function executaBtnHandler() {\r\n    if (!isConsoleLoading) {\r\n      console.log(\"buton executa apasat\");\r\n      const question = {\r\n        id: test.id,\r\n        questionId: currentQuestion.id,\r\n        source_code: encode(codeEditorText[currentQuestionIndex]),\r\n        language_id: test.id_limbaj_programare,\r\n        stdin: \"\",\r\n      };\r\n      console.log(question);\r\n      getJudgeAssessment(question);\r\n    }\r\n  }\r\n  function handleSendBtn() {\r\n    if (!isSubmitLoading) {\r\n      const submission = {\r\n        test_id: test.id,\r\n        language_id: test.id_limbaj_programare,\r\n        stdin: \"\",\r\n        questions: [],\r\n        deadline: test.deadline,\r\n      };\r\n\r\n      codeEditorText.forEach((code, index) => {\r\n        const question = {\r\n          questionId: testQuestions[index].id,\r\n          source_code: encode(code),\r\n        };\r\n        submission.questions.push(question);\r\n      });\r\n      // console.log(submission);\r\n      postSubmission(submission);\r\n    }\r\n  }\r\n\r\n  async function postSubmission(submission) {\r\n    // console.log(test.id);\r\n    setIsSubmitLoading(true);\r\n    try {\r\n      const response = await axios({\r\n        method: \"post\",\r\n        url: `${rootURL}/assignments/sendSubmission/${user.id}/${submission.test_id}`,\r\n        data: submission,\r\n      });\r\n      if (response) {\r\n        // console.log(response.data);\r\n        if (response.status === 200) {\r\n          setAlert({\r\n            open: true,\r\n            severity: \"success\",\r\n            message: response.data.message,\r\n          });\r\n          console.log(\"ceva\");\r\n          removeTestInProgress();\r\n        } else {\r\n          setAlert({\r\n            open: true,\r\n            severity: \"warning\",\r\n            message: response.data.message,\r\n          });\r\n        }\r\n      }\r\n      setIsSubmitLoading(false);\r\n    } catch (error) {\r\n      console.log(error.response.data.message);\r\n      setAlert({\r\n        open: true,\r\n        severity: \"error\",\r\n        message: error.response.data.message,\r\n      });\r\n    }\r\n  }\r\n  // useEffect(() => {\r\n  //   console.log(codeEditorText);\r\n  // }, [codeEditorText]);\r\n\r\n  if (isLoading) {\r\n    return <Loader></Loader>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Wrapper>\r\n        <AlertBar\r\n          open={alert.open}\r\n          severity={alert.severity}\r\n          message={alert.message}\r\n        />\r\n        <ProblemCard>\r\n          <QuestionSlider\r\n            questions={testQuestions}\r\n            callback={questionChanged}\r\n          ></QuestionSlider>\r\n        </ProblemCard>\r\n        <EditorCard>\r\n          <CodeEditor\r\n            language={language}\r\n            value={codeEditorText[currentQuestionIndex]}\r\n            defaultCode={currentCodeEditorText}\r\n            callback={codeEditorTextChanged}\r\n          ></CodeEditor>\r\n        </EditorCard>\r\n        <ExecuteBtn primary onClick={executaBtnHandler}>\r\n          Executa\r\n        </ExecuteBtn>\r\n        <ConsoleCard>\r\n          <div>\r\n            {\" \"}\r\n            <p>Output:</p>\r\n            {!isConsoleLoading && stdout && <p>{stdout}</p>}\r\n            {isConsoleLoading && <p>Loading...</p>}\r\n          </div>\r\n          <div>\r\n            <p>Test Case Status:</p>\r\n            {!isConsoleLoading && testCaseStatus && <p>{testCaseStatus}</p>}\r\n            {isConsoleLoading && <p>Loading...</p>}\r\n          </div>\r\n          {!isConsoleLoading && compileError && (\r\n            <div>\r\n              <div>\r\n                <p>Compile Error:</p>\r\n              </div>\r\n              <p>{compileError}</p>\r\n            </div>\r\n          )}\r\n        </ConsoleCard>\r\n        <SubmitBtn secondary onClick={handleSendBtn}>\r\n          {isSubmitLoading ? <div>Loading...</div> : <div>Trimite</div>}\r\n        </SubmitBtn>\r\n      </Wrapper>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.section`\r\n  display: grid;\r\n  height: 100%;\r\n  width: 100%;\r\n  max-height: 700px;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  grid-template-rows: repeat(10, 1fr);\r\n  grid-template-areas:\r\n    \"A    B\"\r\n    \"A    B\"\r\n    \"A    B\"\r\n    \"A    B\"\r\n    \"A    B\"\r\n    \"A    B\"\r\n    \"A    D\"\r\n    \"A    C\"\r\n    \"A    C\"\r\n    \"A    E\";\r\n  grid-column-gap: 2em;\r\n`;\r\nconst ProblemCard = styled(Card)`\r\n  grid-area: A;\r\n  overflow: auto;\r\n  margin-left: 2em;\r\n`;\r\nconst EditorCard = styled(Card)`\r\n  grid-area: B;\r\n  margin-right: 2em;\r\n  margin-top: 3em;\r\n  align-items: streched\r\n  justify-items : streched;\r\n  \r\n`;\r\nconst ConsoleCard = styled(Card)`\r\n  grid-area: C;\r\n  margin-right: 2em;\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  overflow: auto;\r\n  flex-wrap: wrap;\r\n`;\r\nconst ExecuteBtn = styled(Button)`\r\n  height: 50px;\r\n  width: 150px;\r\n  grid-are: D;\r\n  justify-self: start;\r\n  align-self: center;\r\n`;\r\nconst SubmitBtn = styled(Button)`\r\n  height: 50px;\r\n  width: 150px;\r\n  grid-are: E;\r\n  justify-self: end;\r\n  align-self: center;\r\n  margin-right: 2em;\r\n`;\r\n\r\nexport default TakeTest;\r\n","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\CodeEditor.js",["206","207","208"],"import React, { useEffect, useState } from \"react\";\r\nimport AceEditor from \"react-ace\";\r\nimport { AppContext } from \"../context/context\";\r\n\r\nimport \"ace-builds/src-noconflict/theme-tomorrow\";\r\nimport \"ace-builds/src-noconflict/ext-language_tools\";\r\n\r\nfunction CodeEditor(props) {\r\n  require(`ace-builds/src-noconflict/mode-${props.language}`);\r\n  require(`ace-builds/src-noconflict/snippets/${props.language}`);\r\n\r\n  const { setCodeEditorText, codeEditorText } = React.useContext(AppContext);\r\n\r\n  function onChange(newValue) {\r\n    setCodeEditorText(newValue);\r\n    props.callback(newValue);\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   console.log(\"frumos\");\r\n  //   console.log(props.defaultCode);\r\n  // }, [props.defaultCode]);\r\n\r\n  return (\r\n    <AceEditor\r\n      width=\"undefined\"\r\n      height=\"20em\"\r\n      mode={`${props.language}`}\r\n      theme=\"tomorrow\"\r\n      onChange={onChange}\r\n      name=\"UNIQUE_ID_OF_DIV\"\r\n      fontSize={20}\r\n      // defaultValue={props.defaultCode}\r\n      value={props.value}\r\n      showPrintMargin={true}\r\n      showGutter={true}\r\n      wrapEnabled={true}\r\n      highlightActiveLine={false}\r\n      setOptions={{\r\n        useWorker: false,\r\n        enableBasicAutocompletion: true,\r\n        enableLiveAutocompletion: true,\r\n        enableSnippets: true,\r\n        showLineNumbers: true,\r\n        tabSize: 4,\r\n        highlightActiveLine: true,\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default CodeEditor;\r\n","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\testsGrid.js",["209","210","211","212","213","214","215","216","217","218","219","220"],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\index.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\defaultCodeData.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\addTest.js",["221","222","223","224","225","226","227"],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\Loader.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\FormSucces.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\FormError.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\context\\AuthContext.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\home.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\AvatarDropdown.js",["228"],"import React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { FaCaretDown, FaSignOutAlt } from \"react-icons/fa\";\r\nimport { FaFontAwesome } from \"react-icons/fa\";\r\nimport { AiOutlineLogout } from \"react-icons/ai\";\r\n//   import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport defaultAvatar from \"../Assets/images/defaultAvatar.png\";\r\nimport { Button } from \"./defaultComponents\";\r\nimport styled from \"styled-components\";\r\n\r\nconst DropdownItem = ({ item }) => (\r\n  <Button className=\"dropDownItemContiner\" onClick={item.onClick}>\r\n    <AiOutlineLogout />\r\n    <p className=\"dropDownItemTitle\">{item.title}</p>\r\n  </Button>\r\n);\r\n\r\nconst DropdownContent = ({ dropdownItems }) => {\r\n  return (\r\n    <div className=\"dropDownContent\">\r\n      {dropdownItems.map((item, i) => {\r\n        return (\r\n          <div className=\"mt-1\" key={i}>\r\n            <DropdownItem item={item} />\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AvatarDropdown = () => {\r\n  const node = useRef();\r\n  const auth = useContext(AuthContext);\r\n  const { authState } = auth;\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n\r\n  const dropdownItems = [\r\n    {\r\n      title: \"Log Out\",\r\n      icon: FaSignOutAlt,\r\n      onClick: auth.logout,\r\n    },\r\n  ];\r\n\r\n  const handleClick = (e) => {\r\n    if (!node.current.contains(e.target)) {\r\n      setDropdownOpen(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"mousedown\", handleClick);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClick);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div ref={node}>\r\n        <Button\r\n          ref={node}\r\n          className=\"ButtonContainer\"\r\n          onClick={() => setDropdownOpen(!dropdownOpen)}\r\n        >\r\n          <img src={defaultAvatar} className=\"avatarImg\" alt=\"Avatar\" />\r\n          <div className=\"logoutTextContainer\">\r\n            <p className=\"logoutText\">{authState.userInfo.nume}</p>\r\n            {/* <p className=\"logoutText\">{authState.userInfo.prenume}</p> */}\r\n          </div>\r\n          <div className=\"dropDownCaret\">\r\n            <FaCaretDown></FaCaretDown>\r\n          </div>\r\n        </Button>\r\n\r\n        {dropdownOpen && (\r\n          <div className=\"dropDownItems\">\r\n            <DropdownContent dropdownItems={dropdownItems} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  flex-direction: column;\r\n  margin-right: 4rem;\r\n  justify-items: flex-end;\r\n\r\n  .ButtonContainer {\r\n    display: flex;\r\n    border-radius: 3px;\r\n    padding: 3px;\r\n    margin-bottom: 0;\r\n    align-items: center;\r\n    &:focus {\r\n      outline: 2px solid transparent;\r\n      outline-offset: 2px;\r\n    }\r\n    --tw-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1),\r\n      0 4px 6px -2px rgba(0, 0, 0, 0.05);\r\n    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),\r\n      var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);\r\n  }\r\n\r\n  .avatarImg {\r\n    width: 1.5rem;\r\n    border-radius: 9999px;\r\n    border-width: 2px;\r\n    --tw-border-opacity: 1;\r\n    border-color: rgba(255, 255, 255, var(--tw-border-opacity));\r\n  }\r\n\r\n  .logoutTextContainer {\r\n    padding: 3px;\r\n    display: flex;\r\n    align-items: center;\r\n    div {\r\n      margin: 0;\r\n    }\r\n    p {\r\n      margin-bottom: 0;\r\n      margin-left: 0.5rem;\r\n    }\r\n  }\r\n\r\n  //   .logoutText {\r\n  //     text-color: white;\r\n  //   }\r\n\r\n  .dropDownCaret {\r\n    margin: 0.25rem;\r\n  }\r\n  .dropDownItems {\r\n    position: absolute;\r\n    right: 6rem;\r\n  }\r\n  .dropDownContent {\r\n    // width: 100%;\r\n    // margin-right: 2rem;\r\n  }\r\n  .dropDownItemContiner {\r\n    display: flex;\r\n    align-items: center;\r\n    width: 100%;\r\n    // position: relative;\r\n    // padding: 1rem;\r\n    padding-top: 0.5rem;\r\n    padding-bottom: 0.5rem;\r\n    padding-right: 0;\r\n    --tw-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1),\r\n      0 4px 6px -2px rgba(0, 0, 0, 0.05);\r\n    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),\r\n      var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);\r\n    border-radius: 0.2rem;\r\n    margin-top: 0.5rem;\r\n    p {\r\n      margin-bottom: 0;\r\n      margin-left: 0.5rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default AvatarDropdown;\r\n","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\QuestionSlider.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\TestsTable.js",["229","230","231"],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\context\\index.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\context\\utils.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\AlertBar.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\evaluateTest.js",["232","233","234","235","236","237"],"import { useContext, useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport theme from \"../Assets/theme\";\r\nimport { AppContext } from \"../context\";\r\nimport { QuestionSlider, CodeEditor, AlertBar } from \"../components\";\r\nimport { Card, Button } from \"../components/defaultComponents\";\r\nimport { Formik, useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { Form, Col } from \"react-bootstrap\";\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport axios, { handleAxiosError, handleUnexpectedError } from \"axios\";\r\nimport { utils } from \"../context\";\r\n\r\nconst schema = yup.object().shape({\r\n  feedback: yup.string(),\r\n  finalGrade: yup\r\n    .string()\r\n    .matches(/^([1-9]{1}(\\.\\d{1,2})?|10)$/, \"Format acceptat: 9.97\")\r\n    .required(\"Nota finală trebuie completată\"),\r\n});\r\n\r\nconst processData = (data) => {\r\n  try {\r\n    let { incercare, evaluareAutomata } = data;\r\n    data.incercare = JSON.parse(incercare);\r\n    data.evaluareAutomata = JSON.parse(evaluareAutomata);\r\n    const submission = [];\r\n    data.incercare.forEach((item, index) => {\r\n      submission.push({\r\n        // questionBody: data.questions[index],\r\n        questionCode: item,\r\n        assessment: data.evaluareAutomata[index],\r\n      });\r\n    });\r\n    return submission;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nconst getSubmission = async (\r\n  student_id,\r\n  test_id,\r\n  setSubmission,\r\n  setQuestions,\r\n  setIsLoading,\r\n  setAutomaticGrade,\r\n  setLateStatus\r\n) => {\r\n  try {\r\n    setIsLoading(true);\r\n    const { data } = await axios.get(\r\n      `${utils.rootURL}/grades/submission/${test_id}/${student_id}`\r\n    );\r\n\r\n    const submission = processData(data);\r\n\r\n    setSubmission(submission);\r\n    setQuestions(data.questions);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n  setIsLoading(false);\r\n};\r\n\r\nconst gradeSubmission = async (\r\n  submission,\r\n  test_id,\r\n  student_id,\r\n  setIsLoading,\r\n  removeTestInProgress,\r\n  setAlert\r\n) => {\r\n  try {\r\n    setIsLoading(true);\r\n    const response = await axios({\r\n      method: \"put\",\r\n      url: `${utils.rootURL}/grades/grade/${test_id}/${student_id}`,\r\n      data: submission,\r\n    });\r\n\r\n    console.log(response);\r\n\r\n    if (response.status === 200) {\r\n      setAlert({\r\n        open: true,\r\n        severity: \"success\",\r\n        message: response.data.message,\r\n      });\r\n      // console.log(\"ceva\");\r\n      removeTestInProgress();\r\n    } else {\r\n      setAlert({\r\n        open: true,\r\n        severity: \"warning\",\r\n        message: response.data.message,\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n  setIsLoading(false);\r\n};\r\n\r\nfunction EvaluateTest() {\r\n  const { setShowNavbar, testState, removeTestInProgress } =\r\n    useContext(AppContext);\r\n  const [submission, setSubmission] = useState();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isSubmitLoading, setIsSubmitLoading] = useState(false);\r\n  const [questions, setQuestions] = useState([]);\r\n  const [automaticGrade, setAutomaticGrade] = useState();\r\n  const [lateStatus, setLateStatus] = useState();\r\n  const [currentQuestion, setCurrentQuestion] = useState({\r\n    questionCode: \"\",\r\n    assessment: {\r\n      stdout: \"\",\r\n      status: { id: \"\", description: \"\" },\r\n    },\r\n    compile_output: \"\",\r\n  });\r\n  const [alert, setAlert] = useState({\r\n    open: false,\r\n    severity: \"success\",\r\n    message: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log(\"esti in pagina de evaluare boss\");\r\n\r\n    if (testState.id) {\r\n      console.log(\"getting submission..\");\r\n      getSubmission(\r\n        testState.id,\r\n        testState.id_test,\r\n        setSubmission,\r\n        setQuestions,\r\n        setIsLoading,\r\n        setAutomaticGrade,\r\n        setLateStatus\r\n      );\r\n      setAutomaticGrade(testState.notaAutomata);\r\n      setLateStatus(testState.intarziat === 1 ? \"DA\" : \"NU\");\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (submission) {\r\n      console.log(submission);\r\n      setCurrentQuestion(submission[0]);\r\n    }\r\n  }, [submission]);\r\n\r\n  const sliderHandler = (question, index) => {\r\n    setCurrentQuestion(submission[index]);\r\n  };\r\n\r\n  setShowNavbar(false);\r\n  return (\r\n    <>\r\n      <AlertBar\r\n        open={alert.open}\r\n        severity={alert.severity}\r\n        message={alert.message}\r\n      />\r\n      <Formik\r\n        validateOnSubmit={true}\r\n        validationSchema={schema}\r\n        onSubmit={(values) => {\r\n          let { finalGrade, feedback } = values;\r\n          feedback = feedback.length === 0 ? null : feedback;\r\n          const data = { finalGrade, feedback };\r\n          console.log(data);\r\n          gradeSubmission(\r\n            data,\r\n            testState.id_test,\r\n            testState.id,\r\n            setIsSubmitLoading,\r\n            removeTestInProgress,\r\n            setAlert\r\n          );\r\n        }}\r\n        initialValues={{\r\n          finalGrade: \"\",\r\n          feedback: \"\",\r\n          automaticGrade: automaticGrade,\r\n          late: lateStatus,\r\n        }}\r\n      >\r\n        {({\r\n          handleSubmit,\r\n          handleChange,\r\n          handleBlur,\r\n          values,\r\n          touched,\r\n          isValid,\r\n          errors,\r\n        }) => (\r\n          <Form noValidate onSubmit={handleSubmit}>\r\n            <Wrapper>\r\n              <EditorCard>\r\n                <QuestionSlider\r\n                  questions={questions}\r\n                  callback={sliderHandler}\r\n                ></QuestionSlider>\r\n                <CodeEditor\r\n                  language={\"javascript\"}\r\n                  value={currentQuestion.questionCode}\r\n                  callback={() => {}}\r\n                ></CodeEditor>\r\n              </EditorCard>\r\n              <ConsoleCard>\r\n                <div>\r\n                  <p>Output:</p>\r\n                  {/* {!isConsoleLoading && stdout && <p>{stdout}</p>}\r\n                {isConsoleLoading && <p>Loading...</p>} */}\r\n                  {currentQuestion.assessment.stdout && (\r\n                    <p>{currentQuestion.assessment.stdout}</p>\r\n                  )}\r\n                </div>\r\n                <div>\r\n                  <p>Test Case Status:</p>\r\n                  {/* {!isConsoleLoading && testCaseStatus && <p>{testCaseStatus}</p>}\r\n                {isConsoleLoading && <p>Loading...</p>} */}\r\n                  {currentQuestion.assessment.status.description && (\r\n                    <p>{currentQuestion.assessment.status.description}</p>\r\n                  )}\r\n                </div>\r\n                {currentQuestion.assessment.compileError && (\r\n                  <div>\r\n                    <div>\r\n                      <p>Compile Error:</p>\r\n                    </div>\r\n                    <p>{currentQuestion.assessment.compileError}</p>\r\n                  </div>\r\n                )}\r\n              </ConsoleCard>\r\n\r\n              <FeedbackCard>\r\n                <Banner>\r\n                  <h2>Comentarii și feedback</h2>\r\n                </Banner>\r\n                <TextArea\r\n                  rows=\"20\"\r\n                  name=\"feedback\"\r\n                  value={values.feedback}\r\n                  onChange={handleChange}\r\n                ></TextArea>\r\n              </FeedbackCard>\r\n              <GradeCard>\r\n                <Form.Row className=\"justify-content-around align-items-center\">\r\n                  <Form.Label column lg=\"auto\" className=\"mr-2\">\r\n                    <div>Notă finală</div>\r\n                  </Form.Label>\r\n\r\n                  <Col className=\"mr-2\" lg=\"auto\">\r\n                    <Form.Control\r\n                      className=\"text-center\"\r\n                      name=\"finalGrade\"\r\n                      type=\"text\"\r\n                      value={values.finalGrade}\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                      placeholder=\"Introdu nota\"\r\n                      isValid={touched.finalGrade && !errors.finalGrade}\r\n                      isInvalid={touched.finalGrade && !!errors.finalGrade}\r\n                    />\r\n                    <Form.Control.Feedback\r\n                      type=\"invalid\"\r\n                      className=\"position-absolute feedback\"\r\n                    >\r\n                      <MuiAlert severity=\"error\" elevation={6} variant=\"filled\">\r\n                        <p>{errors.finalGrade}</p>\r\n                      </MuiAlert>\r\n                    </Form.Control.Feedback>\r\n                  </Col>\r\n\r\n                  <Form.Label column lg=\"auto\">\r\n                    <div>Notă automată</div>\r\n                  </Form.Label>\r\n\r\n                  <Col className=\"mr-2\">\r\n                    <Form.Control\r\n                      className=\"text-center\"\r\n                      name=\"automaticGrade\"\r\n                      type=\"text\"\r\n                      value={automaticGrade}\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                      readOnly\r\n                    />\r\n                  </Col>\r\n                  <Form.Label column lg=\"auto\">\r\n                    <div>Intarziat</div>\r\n                  </Form.Label>\r\n\r\n                  <Col>\r\n                    <Form.Control\r\n                      className=\"text-center\"\r\n                      name=\"late\"\r\n                      type=\"text\"\r\n                      value={lateStatus}\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                      readOnly\r\n                    />\r\n                  </Col>\r\n                </Form.Row>\r\n              </GradeCard>\r\n              <SubmitBtn>\r\n                <p>Trimite</p>\r\n              </SubmitBtn>\r\n            </Wrapper>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n\r\nconst EditorCard = styled(Card)`\r\n  grid-area: A;\r\n  margin-left: 1em;\r\n  overflow: auto;\r\n`;\r\n\r\nconst ConsoleCard = styled(Card)`\r\n  grid-area: B;\r\n  margin-left: 1em;\r\n  margin-top: 0.5em;\r\n  margin-bottom: 0.5em;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  overflow: auto;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst FeedbackCard = styled(Card)`\r\n  grid-area: C;\r\n  margin-right: 1em;\r\n  margin-bottom: 1rem;\r\n  padding: 0;\r\n`;\r\n\r\nconst Banner = styled.div`\r\n  padding: 0.7rem;\r\n  padding-left: 1.5rem;\r\n  background-color: ${theme.Grey1};\r\n  color: ${theme.mainBlack};\r\n  h2 {\r\n    margin: 0;\r\n    font-size: 1.3rem;\r\n  }\r\n`;\r\n\r\nconst TextArea = styled.textarea`\r\n  padding: 2rem;\r\n  border: none;\r\n  resize: none;\r\n  outline: none;\r\n  height:100%\r\n  color: ${theme.mainBlack};\r\n  border-radius: 0 0 10px 10px;\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst SubmitBtn = styled(Button)`\r\n  grid-area: E;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-self: end;\r\n  justify-self: end;\r\n  width: 5rem;\r\n  height: 3rem;\r\n\r\n  margin-bottom: 0.5em;\r\n`;\r\n\r\nconst GradeCard = styled(Card)`\r\n  grid-area: D;\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-right: 1em;\r\n  background-color: ${theme.Grey1};\r\n  // p {\r\n  //   margin: 0;\r\n  // }\r\n  div {\r\n    font-size: 1rem;\r\n  }\r\n  .feedback {\r\n    width: auto;\r\n  }\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  display: grid;\r\n  height: 100%;\r\n  width: 100%;\r\n  margin-top: 1.5rem;\r\n  max-height: calc(93vh - 1.5rem);\r\n\r\n  font-size: 3rem;\r\n\r\n  p {\r\n    font-size: 1rem;\r\n  }\r\n\r\n  grid-template-columns: repeat(2, 1fr);\r\n  grid-template-rows: repeat(10, 1fr);\r\n  grid-template-areas:\r\n    \"A    C\"\r\n    \"A    C\"\r\n    \"A    C\"\r\n    \"A    C\"\r\n    \"A    C\"\r\n    \"A    C\"\r\n    \"A    D\"\r\n    \"B    E\"\r\n    \"B    E\"\r\n    \"B    E\";\r\n  grid-column-gap: 1em;\r\n`;\r\n\r\nexport default EvaluateTest;\r\n","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\Popup.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\StudentGraph.js",["238"],"import {\r\n  Chart,\r\n  BarSeries,\r\n  Title,\r\n  ArgumentAxis,\r\n  ValueAxis,\r\n  Legend,\r\n} from \"@devexpress/dx-react-chart-material-ui\";\r\nimport { Animation } from \"@devexpress/dx-react-chart\";\r\n\r\nconst defaultData = [\r\n  { date: \"10/09\", grade: 2.525 },\r\n  { date: \"11/09\", grade: 3.018 },\r\n  { date: \"12/09\", grade: 4.44 },\r\n  { date: \"13/09\", grade: 5.31 },\r\n  { date: \"14/09\", grade: 6.127 },\r\n  { date: \"15/09\", grade: 3.682 },\r\n  { date: \"16/09\", grade: 10 },\r\n];\r\n\r\nconst StudentGraph = (props) => {\r\n  return (\r\n    <Chart data={props.data ? props.data : defaultData} className=\"w-100\">\r\n      <ArgumentAxis />\r\n      <ValueAxis />\r\n\r\n      <BarSeries\r\n        name={`notele la materia ${props.subject}`}\r\n        barWidth=\"0.5\"\r\n        valueField=\"grade\"\r\n        argumentField=\"date\"\r\n      />\r\n      <Title\r\n        text={\r\n          props.subject\r\n            ? `Graficul notelor materiei ${props.subject}`\r\n            : \"Alege o materie pentru a vizualiza notele\"\r\n        }\r\n      />\r\n      {/* <Legend position=\"bottom\" /> */}\r\n      <Animation />\r\n    </Chart>\r\n  );\r\n};\r\n\r\nexport default StudentGraph;\r\n","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\TeacherGraph.js",["239","240","241"],"import * as React from \"react\";\r\nimport {\r\n  Chart,\r\n  ScatterSeries,\r\n  Legend,\r\n  ArgumentAxis,\r\n  ValueAxis,\r\n  Title,\r\n} from \"@devexpress/dx-react-chart-material-ui\";\r\nimport {\r\n  Animation,\r\n  ArgumentScale,\r\n  ValueScale,\r\n} from \"@devexpress/dx-react-chart\";\r\nimport { scaleBand } from \"d3-scale\";\r\n\r\nconst Label = React.memo((props) => {\r\n  return <ArgumentAxis.Label {...props} text={props.text.toFixed(0)} />;\r\n});\r\n\r\nconst TeacherGraph = (props) => {\r\n  return (\r\n    <Chart data={props.data} className=\"w-100\">\r\n      {/* <ArgumentAxis /> */}\r\n\r\n      <ArgumentScale />\r\n      <ArgumentAxis />\r\n\r\n      <ValueScale />\r\n      <ValueAxis />\r\n\r\n      <Title\r\n        text={\r\n          props.subject && props.group\r\n            ? `Distribuția notelor pentru materia ${props.subject}`\r\n            : \"Grafic demo, alege o materie\"\r\n        }\r\n      />\r\n\r\n      <ScatterSeries name=\"Serie demo1\" valueField=\"val\" argumentField=\"arg\" />\r\n      {/* <ScatterSeries\r\n        name=\"Serie demo2\"\r\n        valueField=\"val2\"\r\n        argumentField=\"arg2\"\r\n      /> */}\r\n      {/* <Legend position=\"bottom\" /> */}\r\n      <Animation />\r\n    </Chart>\r\n  );\r\n};\r\n\r\nexport default TeacherGraph;\r\n","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\TeacherGraphGenerator.js",[],{"ruleId":"242","replacedBy":"243"},{"ruleId":"244","replacedBy":"245"},{"ruleId":"246","severity":1,"message":"247","line":2,"column":29,"nodeType":"248","messageId":"249","endLine":2,"endColumn":38},{"ruleId":"246","severity":1,"message":"250","line":7,"column":16,"nodeType":"248","messageId":"249","endLine":7,"endColumn":19},{"ruleId":"246","severity":1,"message":"251","line":10,"column":18,"nodeType":"248","messageId":"249","endLine":10,"endColumn":27},{"ruleId":"246","severity":1,"message":"252","line":20,"column":41,"nodeType":"248","messageId":"249","endLine":20,"endColumn":57},{"ruleId":"246","severity":1,"message":"253","line":20,"column":59,"nodeType":"248","messageId":"249","endLine":20,"endColumn":66},{"ruleId":"246","severity":1,"message":"254","line":4,"column":3,"nodeType":"248","messageId":"249","endLine":4,"endColumn":8},{"ruleId":"246","severity":1,"message":"255","line":5,"column":3,"nodeType":"248","messageId":"249","endLine":5,"endColumn":9},{"ruleId":"246","severity":1,"message":"256","line":11,"column":10,"nodeType":"248","messageId":"249","endLine":11,"endColumn":18},{"ruleId":"246","severity":1,"message":"257","line":11,"column":20,"nodeType":"248","messageId":"249","endLine":11,"endColumn":32},{"ruleId":"246","severity":1,"message":"258","line":30,"column":17,"nodeType":"248","messageId":"249","endLine":30,"endColumn":25},{"ruleId":"259","severity":1,"message":"260","line":49,"column":6,"nodeType":"261","endLine":49,"endColumn":8,"suggestions":"262"},{"ruleId":"246","severity":1,"message":"247","line":2,"column":17,"nodeType":"248","messageId":"249","endLine":2,"endColumn":26},{"ruleId":"246","severity":1,"message":"250","line":8,"column":16,"nodeType":"248","messageId":"249","endLine":8,"endColumn":19},{"ruleId":"246","severity":1,"message":"251","line":11,"column":18,"nodeType":"248","messageId":"249","endLine":11,"endColumn":27},{"ruleId":"246","severity":1,"message":"263","line":19,"column":10,"nodeType":"248","messageId":"249","endLine":19,"endColumn":25},{"ruleId":"246","severity":1,"message":"264","line":19,"column":27,"nodeType":"248","messageId":"249","endLine":19,"endColumn":45},{"ruleId":"246","severity":1,"message":"265","line":20,"column":10,"nodeType":"248","messageId":"249","endLine":20,"endColumn":14},{"ruleId":"246","severity":1,"message":"266","line":20,"column":16,"nodeType":"248","messageId":"249","endLine":20,"endColumn":23},{"ruleId":"259","severity":1,"message":"267","line":33,"column":6,"nodeType":"261","endLine":33,"endColumn":8,"suggestions":"268"},{"ruleId":"259","severity":1,"message":"269","line":45,"column":6,"nodeType":"261","endLine":45,"endColumn":38,"suggestions":"270"},{"ruleId":"259","severity":1,"message":"271","line":30,"column":6,"nodeType":"261","endLine":30,"endColumn":8,"suggestions":"272"},{"ruleId":"246","severity":1,"message":"273","line":1,"column":10,"nodeType":"248","messageId":"249","endLine":1,"endColumn":23},{"ruleId":"246","severity":1,"message":"274","line":2,"column":10,"nodeType":"248","messageId":"249","endLine":2,"endColumn":25},{"ruleId":"246","severity":1,"message":"275","line":2,"column":27,"nodeType":"248","messageId":"249","endLine":2,"endColumn":38},{"ruleId":"246","severity":1,"message":"276","line":3,"column":10,"nodeType":"248","messageId":"249","endLine":3,"endColumn":16},{"ruleId":"246","severity":1,"message":"277","line":4,"column":10,"nodeType":"248","messageId":"249","endLine":4,"endColumn":13},{"ruleId":"246","severity":1,"message":"278","line":6,"column":8,"nodeType":"248","messageId":"249","endLine":6,"endColumn":12},{"ruleId":"246","severity":1,"message":"279","line":15,"column":12,"nodeType":"248","messageId":"249","endLine":15,"endColumn":18},{"ruleId":"259","severity":1,"message":"280","line":60,"column":6,"nodeType":"261","endLine":60,"endColumn":8,"suggestions":"281"},{"ruleId":"282","severity":1,"message":"283","line":66,"column":35,"nodeType":"284","messageId":"285","endLine":66,"endColumn":37},{"ruleId":"259","severity":1,"message":"286","line":72,"column":6,"nodeType":"261","endLine":72,"endColumn":12,"suggestions":"287"},{"ruleId":"282","severity":1,"message":"283","line":83,"column":29,"nodeType":"284","messageId":"285","endLine":83,"endColumn":31},{"ruleId":"288","severity":1,"message":"289","line":87,"column":39,"nodeType":"290","messageId":"291","endLine":87,"endColumn":41},{"ruleId":"259","severity":1,"message":"292","line":94,"column":5,"nodeType":"261","endLine":94,"endColumn":20,"suggestions":"293"},{"ruleId":"259","severity":1,"message":"294","line":106,"column":6,"nodeType":"261","endLine":106,"endColumn":21,"suggestions":"295"},{"ruleId":"246","severity":1,"message":"247","line":1,"column":17,"nodeType":"248","messageId":"249","endLine":1,"endColumn":26},{"ruleId":"246","severity":1,"message":"296","line":1,"column":28,"nodeType":"248","messageId":"249","endLine":1,"endColumn":36},{"ruleId":"246","severity":1,"message":"297","line":12,"column":30,"nodeType":"248","messageId":"249","endLine":12,"endColumn":44},{"ruleId":"246","severity":1,"message":"298","line":2,"column":8,"nodeType":"248","messageId":"249","endLine":2,"endColumn":13},{"ruleId":"246","severity":1,"message":"254","line":8,"column":3,"nodeType":"248","messageId":"249","endLine":8,"endColumn":8},{"ruleId":"246","severity":1,"message":"299","line":9,"column":3,"nodeType":"248","messageId":"249","endLine":9,"endColumn":7},{"ruleId":"246","severity":1,"message":"300","line":12,"column":3,"nodeType":"248","messageId":"249","endLine":12,"endColumn":11},{"ruleId":"246","severity":1,"message":"301","line":18,"column":7,"nodeType":"248","messageId":"249","endLine":18,"endColumn":14},{"ruleId":"246","severity":1,"message":"302","line":90,"column":11,"nodeType":"248","messageId":"249","endLine":90,"endColumn":25},{"ruleId":"246","severity":1,"message":"303","line":90,"column":27,"nodeType":"248","messageId":"249","endLine":90,"endColumn":44},{"ruleId":"246","severity":1,"message":"304","line":95,"column":9,"nodeType":"248","messageId":"249","endLine":95,"endColumn":13},{"ruleId":"246","severity":1,"message":"305","line":97,"column":11,"nodeType":"248","messageId":"249","endLine":97,"endColumn":14},{"ruleId":"246","severity":1,"message":"306","line":100,"column":21,"nodeType":"248","messageId":"249","endLine":100,"endColumn":33},{"ruleId":"246","severity":1,"message":"307","line":101,"column":10,"nodeType":"248","messageId":"249","endLine":101,"endColumn":21},{"ruleId":"246","severity":1,"message":"308","line":101,"column":23,"nodeType":"248","messageId":"249","endLine":101,"endColumn":37},{"ruleId":"246","severity":1,"message":"309","line":9,"column":10,"nodeType":"248","messageId":"249","endLine":9,"endColumn":16},{"ruleId":"246","severity":1,"message":"310","line":41,"column":10,"nodeType":"248","messageId":"249","endLine":41,"endColumn":14},{"ruleId":"246","severity":1,"message":"311","line":41,"column":16,"nodeType":"248","messageId":"249","endLine":41,"endColumn":23},{"ruleId":"246","severity":1,"message":"312","line":43,"column":10,"nodeType":"248","messageId":"249","endLine":43,"endColumn":24},{"ruleId":"246","severity":1,"message":"313","line":43,"column":26,"nodeType":"248","messageId":"249","endLine":43,"endColumn":43},{"ruleId":"259","severity":1,"message":"314","line":53,"column":6,"nodeType":"261","endLine":53,"endColumn":8,"suggestions":"315"},{"ruleId":"282","severity":1,"message":"283","line":245,"column":52,"nodeType":"284","messageId":"285","endLine":245,"endColumn":54},{"ruleId":"246","severity":1,"message":"316","line":3,"column":10,"nodeType":"248","messageId":"249","endLine":3,"endColumn":23},{"ruleId":"246","severity":1,"message":"317","line":9,"column":8,"nodeType":"248","messageId":"249","endLine":9,"endColumn":13},{"ruleId":"246","severity":1,"message":"318","line":75,"column":11,"nodeType":"248","messageId":"249","endLine":75,"endColumn":25},{"ruleId":"259","severity":1,"message":"319","line":92,"column":6,"nodeType":"261","endLine":92,"endColumn":18,"suggestions":"320"},{"ruleId":"246","severity":1,"message":"251","line":7,"column":18,"nodeType":"248","messageId":"249","endLine":7,"endColumn":27},{"ruleId":"246","severity":1,"message":"321","line":12,"column":17,"nodeType":"248","messageId":"249","endLine":12,"endColumn":33},{"ruleId":"246","severity":1,"message":"322","line":12,"column":35,"nodeType":"248","messageId":"249","endLine":12,"endColumn":56},{"ruleId":"246","severity":1,"message":"323","line":110,"column":10,"nodeType":"248","messageId":"249","endLine":110,"endColumn":19},{"ruleId":"246","severity":1,"message":"324","line":111,"column":10,"nodeType":"248","messageId":"249","endLine":111,"endColumn":25},{"ruleId":"259","severity":1,"message":"325","line":146,"column":6,"nodeType":"261","endLine":146,"endColumn":8,"suggestions":"326"},{"ruleId":"246","severity":1,"message":"327","line":7,"column":3,"nodeType":"248","messageId":"249","endLine":7,"endColumn":9},{"ruleId":"246","severity":1,"message":"327","line":5,"column":3,"nodeType":"248","messageId":"249","endLine":5,"endColumn":9},{"ruleId":"246","severity":1,"message":"328","line":15,"column":10,"nodeType":"248","messageId":"249","endLine":15,"endColumn":19},{"ruleId":"246","severity":1,"message":"329","line":17,"column":7,"nodeType":"248","messageId":"249","endLine":17,"endColumn":12},"no-native-reassign",["330"],"no-negated-in-lhs",["331"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Col' is defined but never used.","'useFormik' is defined but never used.","'setAuthenticated' is assigned a value but never used.","'setUser' is assigned a value but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'TakeTest' is defined but never used.","'EvaluateTest' is defined but never used.","'setAlert' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'judge0Languges', 'tests', and 'user'. Either include them or remove the dependency array.","ArrayExpression",["332"],"'scatterDemoData' is assigned a value but never used.","'setScatterDemoData' is assigned a value but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getSubjectOptions' and 'user.tip'. Either include them or remove the dependency array.",["333"],"React Hook useEffect has missing dependencies: 'getScatterplotGrades' and 'user.tip'. Either include them or remove the dependency array.",["334"],"React Hook useEffect has a missing dependency: 'user.id'. Either include it or remove the dependency array.",["335"],"'DefaultNavbar' is defined but never used.","'FaRegUserCircle' is defined but never used.","'FaArrowLeft' is defined but never used.","'MdMenu' is defined but never used.","'Nav' is defined but never used.","'logo' is defined but never used.","'goBack' is defined but never used.","React Hook useEffect has a missing dependency: 'testState'. Either include it or remove the dependency array.",["336"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'aceLanguages' and 'getTestQuestions'. Either include them or remove the dependency array.",["337"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'test'. Either include it or remove the dependency array.",["338"],"React Hook useEffect has a missing dependency: 'decode'. Either include it or remove the dependency array.",["339"],"'useState' is defined but never used.","'codeEditorText' is assigned a value but never used.","'axios' is defined but never used.","'Link' is defined but never used.","'Redirect' is defined but never used.","'rootURL' is assigned a value but never used.","'testInProgress' is assigned a value but never used.","'setTestInProgress' is assigned a value but never used.","'user' is assigned a value but never used.","'url' is assigned a value but never used.","'setIsLoading' is assigned a value but never used.","'clickedTest' is assigned a value but never used.","'setClickedTest' is assigned a value but never used.","'Loader' is defined but never used.","'code' is assigned a value but never used.","'setCode' is assigned a value but never used.","'expectedAnswer' is assigned a value but never used.","'setExpectedAnswer' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["340"],"'FaFontAwesome' is defined but never used.","'Paper' is defined but never used.","'judge0Languges' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user.tip'. Either include it or remove the dependency array.",["341"],"'handleAxiosError' is defined but never used.","'handleUnexpectedError' is defined but never used.","'isLoading' is assigned a value but never used.","'isSubmitLoading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'testState.id', 'testState.id_test', 'testState.intarziat', and 'testState.notaAutomata'. Either include them or remove the dependency array.",["342"],"'Legend' is defined but never used.","'scaleBand' is defined but never used.","'Label' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"343","fix":"344"},{"desc":"345","fix":"346"},{"desc":"347","fix":"348"},{"desc":"349","fix":"350"},{"desc":"351","fix":"352"},{"desc":"353","fix":"354"},{"desc":"355","fix":"356"},{"desc":"357","fix":"358"},{"desc":"359","fix":"360"},{"desc":"361","fix":"362"},{"desc":"363","fix":"364"},"Update the dependencies array to be: [judge0Languges, tests, user]",{"range":"365","text":"366"},"Update the dependencies array to be: [getSubjectOptions, user.tip]",{"range":"367","text":"368"},"Update the dependencies array to be: [selectedSubject, selectedGroup, user.tip, getScatterplotGrades]",{"range":"369","text":"370"},"Update the dependencies array to be: [user.id]",{"range":"371","text":"372"},"Update the dependencies array to be: [testState]",{"range":"373","text":"374"},"Update the dependencies array to be: [aceLanguages, getTestQuestions, test]",{"range":"375","text":"376"},"Update the dependencies array to be: [test, testQuestions]",{"range":"377","text":"378"},"Update the dependencies array to be: [decode, judgeResponse]",{"range":"379","text":"380"},"Update the dependencies array to be: [user]",{"range":"381","text":"382"},"Update the dependencies array to be: [props.data, user.tip]",{"range":"383","text":"384"},"Update the dependencies array to be: [testState.id, testState.id_test, testState.intarziat, testState.notaAutomata]",{"range":"385","text":"386"},[1535,1537],"[judge0Languges, tests, user]",[1371,1373],"[getSubjectOptions, user.tip]",[1690,1722],"[selectedSubject, selectedGroup, user.tip, getScatterplotGrades]",[847,849],"[user.id]",[2002,2004],"[testState]",[2325,2331],"[aceLanguages, getTestQuestions, test]",[2878,2893],"[test, testQuestions]",[3222,3237],"[decode, judgeResponse]",[2073,2075],"[user]",[2237,2249],"[props.data, user.tip]",[3945,3947],"[testState.id, testState.id_test, testState.intarziat, testState.notaAutomata]"]