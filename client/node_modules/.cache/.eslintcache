[{"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\index.js":"1","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\App.js":"2","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\Navbar.js":"3","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\index.js":"4","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\Assets\\theme.js":"5","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\login.js":"6","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\tests.js":"7","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\register.js":"8","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\dashboard.js":"9","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\error.js":"10","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\history.js":"11","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\settings.js":"12","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\Header.js":"13","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\defaultComponents.js":"14","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\NavbarDataStudent.js":"15","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\NavbarDataTeacher.js":"16","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\context\\context.js":"17","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\takeTest.js":"18","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\CodeEditor.js":"19","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\testsGrid.js":"20","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\index.js":"21","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\defaultCodeData.js":"22","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\addTest.js":"23","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\Loader.js":"24","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\FormSucces.js":"25","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\FormError.js":"26","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\context\\AuthContext.js":"27","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\home.js":"28","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\AvatarDropdown.js":"29"},{"size":501,"mtime":1625831701476,"results":"30","hashOfConfig":"31"},{"size":1725,"mtime":1625831674824,"results":"32","hashOfConfig":"31"},{"size":2922,"mtime":1625007797427,"results":"33","hashOfConfig":"31"},{"size":464,"mtime":1625820735154,"results":"34","hashOfConfig":"31"},{"size":208,"mtime":1625520391751,"results":"35","hashOfConfig":"31"},{"size":8996,"mtime":1625832979274,"results":"36","hashOfConfig":"31"},{"size":635,"mtime":1624806084171,"results":"37","hashOfConfig":"31"},{"size":9893,"mtime":1625833132094,"results":"38","hashOfConfig":"31"},{"size":621,"mtime":1625833164561,"results":"39","hashOfConfig":"31"},{"size":388,"mtime":1623710186186,"results":"40","hashOfConfig":"31"},{"size":350,"mtime":1624709373621,"results":"41","hashOfConfig":"31"},{"size":343,"mtime":1624709372832,"results":"42","hashOfConfig":"31"},{"size":1013,"mtime":1625834047947,"results":"43","hashOfConfig":"31"},{"size":1181,"mtime":1625830813299,"results":"44","hashOfConfig":"31"},{"size":471,"mtime":1625770721924,"results":"45","hashOfConfig":"31"},{"size":477,"mtime":1625770284872,"results":"46","hashOfConfig":"31"},{"size":3491,"mtime":1625827815697,"results":"47","hashOfConfig":"31"},{"size":5437,"mtime":1625172760698,"results":"48","hashOfConfig":"31"},{"size":1229,"mtime":1624891873266,"results":"49","hashOfConfig":"31"},{"size":2063,"mtime":1625008045034,"results":"50","hashOfConfig":"31"},{"size":249,"mtime":1625770665891,"results":"51","hashOfConfig":"31"},{"size":838,"mtime":1624828708070,"results":"52","hashOfConfig":"31"},{"size":11552,"mtime":1625171982237,"results":"53","hashOfConfig":"31"},{"size":2336,"mtime":1624886094727,"results":"54","hashOfConfig":"31"},{"size":594,"mtime":1625772515928,"results":"55","hashOfConfig":"31"},{"size":613,"mtime":1625772519627,"results":"56","hashOfConfig":"31"},{"size":1649,"mtime":1625832900839,"results":"57","hashOfConfig":"31"},{"size":1042,"mtime":1625821685091,"results":"58","hashOfConfig":"31"},{"size":4314,"mtime":1625834148358,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12hnw4i",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\index.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\App.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\Navbar.js",[],["122","123"],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\index.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\Assets\\theme.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\login.js",["124","125","126","127","128"],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\tests.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\register.js",["129","130","131"],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\dashboard.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\error.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\history.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\settings.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\Header.js",["132","133","134","135","136","137","138"],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\defaultComponents.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\NavbarDataStudent.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\NavbarDataTeacher.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\context\\context.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\takeTest.js",["139","140","141","142","143"],"import { Card, Button } from \"../components/defaultComponents\";\r\nimport { CodeEditor, Loader } from \"../components\";\r\nimport styled from \"styled-components\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { AppContext } from \"../context/context\";\r\nimport DefaultCode from \"../components/defaultCodeData\";\r\nimport axios from \"axios\";\r\nconst rootURL = \"http://localhost:5000/api\";\r\n\r\nfunction TakeTest({ test }) {\r\n  const { setShowNavbar, setShowHeader } = React.useContext(AppContext);\r\n  setShowNavbar(false);\r\n  setShowHeader(true);\r\n\r\n  const {\r\n    testQuestions,\r\n    getTestQuestions,\r\n    isLoading,\r\n    aceLanguages,\r\n    codeEditorText,\r\n    setCodeEditorText,\r\n    encode,\r\n    decode,\r\n  } = React.useContext(AppContext);\r\n\r\n  const [language, setLanguage] = useState(\"javascript\");\r\n  const [stdout, setStdout] = useState(\" \");\r\n  const [compileError, setCompileError] = useState();\r\n  const [testCaseStatus, setTestCaseStatus] = useState(\" \");\r\n  const [judgeResponse, setJudgeResponse] = useState();\r\n  const [isConsoleLoading, setIsConsoleLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getTestQuestions(test.id);\r\n    const aceLanguage = aceLanguages.find(\r\n      (language) => language.id == test.id_limbaj_programare\r\n    );\r\n    if (aceLanguage) {\r\n      setLanguage(aceLanguage.name);\r\n    }\r\n    const defaultCode = DefaultCode.find(\r\n      (item) => item.id == test.id_limbaj_programare\r\n    );\r\n    if (defaultCode) {\r\n      setCodeEditorText(defaultCode.code);\r\n    }\r\n    console.log(\"onMount\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"judge response changed\");\r\n    if (judgeResponse) {\r\n      setStdout(decode(judgeResponse.stdout));\r\n      setTestCaseStatus(judgeResponse.status.description);\r\n      setCompileError(decode(judgeResponse.compile_output));\r\n    }\r\n  }, [judgeResponse]);\r\n\r\n  function executaBtnHandler() {\r\n    if (!isConsoleLoading) {\r\n      console.log(\"buton executa apasat\");\r\n      const assignment = {\r\n        id: test.id,\r\n        questionId: testQuestions[0].id,\r\n        source_cod: encode(codeEditorText),\r\n        language_id: test.id_limbaj_programare,\r\n        stdin: \"\",\r\n      };\r\n      console.log(assignment);\r\n      getJudgeAssessment(assignment);\r\n    }\r\n  }\r\n\r\n  function getCodeEditorTextCallback(text) {\r\n    // setCodeEditorText(text);\r\n  }\r\n\r\n  const getJudgeAssessment = async (test) => {\r\n    console.log(\"getting assessment from judge...\");\r\n    setIsConsoleLoading(true);\r\n    const judgeData = {\r\n      source_code: test.source_cod,\r\n      language_id: test.language_id,\r\n      stdin: test.stdin,\r\n    };\r\n    console.log(test.source_cod);\r\n    const response = await axios({\r\n      method: \"post\",\r\n      url: `${rootURL}/questions/assess/${test.questionId}/${test.id}/1`,\r\n      data: judgeData,\r\n    }).catch((err) => console.log(err));\r\n\r\n    if (response) {\r\n      console.log(response.data);\r\n      setJudgeResponse(response.data);\r\n    }\r\n    setIsConsoleLoading(false);\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <Loader></Loader>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Wrapper>\r\n        <ProblemCard>\r\n          {/* {testQuestions.map((question) => (\r\n            <h3>{question.descriere}</h3>\r\n          ))} */}\r\n          <h3>{testQuestions[0].descriere}</h3>\r\n        </ProblemCard>\r\n        <EditorCard>\r\n          <CodeEditor language={language}></CodeEditor>\r\n        </EditorCard>\r\n        <ExecuteBtn primary onClick={executaBtnHandler}>\r\n          Executa\r\n        </ExecuteBtn>\r\n        <ConsoleCard>\r\n          <div>\r\n            {\" \"}\r\n            <p>Output:</p>\r\n            {!isConsoleLoading && stdout && <p>{stdout}</p>}\r\n            {isConsoleLoading && <p>Loading...</p>}\r\n          </div>\r\n          <div>\r\n            <p>Test Case Status:</p>\r\n            {!isConsoleLoading && testCaseStatus && <p>{testCaseStatus}</p>}\r\n            {isConsoleLoading && <p>Loading...</p>}\r\n          </div>\r\n          {!isConsoleLoading && compileError && (\r\n            <div>\r\n              <div>\r\n                <p>Compile Error:</p>\r\n              </div>\r\n              <p>{compileError}</p>\r\n            </div>\r\n          )}\r\n        </ConsoleCard>\r\n        <SubmitBtn secondary>Trimite</SubmitBtn>\r\n      </Wrapper>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.section`\r\n  display: grid;\r\n  height: 100%;\r\n  width: 100%;\r\n  max-height: 700px;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  grid-template-rows: repeat(10, 1fr);\r\n  grid-template-areas:\r\n    \"A    B\"\r\n    \"A    B\"\r\n    \"A    B\"\r\n    \"A    B\"\r\n    \"A    B\"\r\n    \"A    B\"\r\n    \"A    D\"\r\n    \"A    C\"\r\n    \"A    C\"\r\n    \"A    E\";\r\n  grid-column-gap: 2em;\r\n`;\r\nconst ProblemCard = styled(Card)`\r\n  grid-area: A;\r\n  overflow: auto;\r\n  margin-left: 2em;\r\n`;\r\nconst EditorCard = styled(Card)`\r\n  grid-area: B;\r\n  margin-right: 2em;\r\n  margin-top: 3em;\r\n  align-items: streched\r\n  justify-items : streched;\r\n  \r\n`;\r\nconst ConsoleCard = styled(Card)`\r\n  grid-area: C;\r\n  margin-right: 2em;\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  overflow: auto;\r\n  flex-wrap: wrap;\r\n`;\r\nconst ExecuteBtn = styled(Button)`\r\n  height: 50px;\r\n  width: 150px;\r\n  grid-are: D;\r\n  justify-self: start;\r\n  align-self: center;\r\n`;\r\nconst SubmitBtn = styled(Button)`\r\n  height: 50px;\r\n  width: 150px;\r\n  grid-are: E;\r\n  justify-self: end;\r\n  align-self: center;\r\n  margin-right: 2em;\r\n`;\r\n\r\nexport default TakeTest;\r\n","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\CodeEditor.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\testsGrid.js",["144","145","146","147"],"import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { AppContext } from \"../context/context\";\r\nimport { Card } from \"../components/defaultComponents\";\r\nimport { Route, Link, useRouteMatch, withRouter } from \"react-router-dom\";\r\nimport theme from \"../Assets/theme\";\r\n\r\nfunction TestsGrid(props) {\r\n  const { tests, isLoading, getStudentTests, setShowHeader } =\r\n    React.useContext(AppContext);\r\n  const { url } = useRouteMatch();\r\n  setShowHeader(false);\r\n  useEffect(() => {\r\n    getStudentTests();\r\n    console.log(tests);\r\n  }, []);\r\n\r\n  const testClicked = (e) => {\r\n    console.log(\"clicked card with id \" + e.target.id);\r\n    const clickedTest = tests.find((test) => test.id == e.target.id);\r\n    props.parentCallBack(clickedTest);\r\n    // e.preventDefault();\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Wrapper>\r\n        {\" \"}\r\n        <div>\r\n          <h1>Tests are loading..</h1>\r\n        </div>\r\n      </Wrapper>\r\n    );\r\n  }\r\n  return (\r\n    <Wrapper>\r\n      {\" \"}\r\n      {/* <div> */}\r\n      {/* <h1>Test programate</h1> */}\r\n      {/* <TestsContainer> */}\r\n      {tests.map((test) => (\r\n        <div key={test.id}>\r\n          <Link to={`${url}/takeTest`} onClick={testClicked}>\r\n            <StyledCard id={test.id}>{test.titlu}</StyledCard>\r\n          </Link>\r\n        </div>\r\n      ))}\r\n      {/* </TestsContainer> */}\r\n      {/* </div> */}\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  width: 50%;\r\n  a {\r\n    text-decoration: none;\r\n  }\r\n  position: fixed;\r\n  // // align-items: center;\r\n  // // justify-content: center;\r\n  // font-size: 1rem;\r\n  background: ${theme.mainGrey};\r\n  margin-left: 30%;\r\n  margin-top: 10em;\r\n  overflow-y: auto;\r\n`;\r\n\r\nconst TestsContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst StyledCard = styled(Card)`\r\n  // width: 20vw;\r\n  margin-top: 1%;\r\n  margin-bottom: 1%;\r\n`;\r\n\r\nexport default withRouter(TestsGrid);\r\n","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\index.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\defaultCodeData.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\addTest.js",["148","149","150","151","152","153"],"import styled from \"styled-components\";\r\nimport { Form, Col } from \"react-bootstrap\";\r\nimport { AppContext } from \"../context/context\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Button, Card } from \"../components/defaultComponents\";\r\nimport theme from \"../Assets/theme\";\r\nimport { Loader } from \"../components\";\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { MdAddCircleOutline, MdRemoveCircleOutline } from \"react-icons/md\";\r\n\r\nconst rootURL = \"http://localhost:5000/api\";\r\n\r\nfunction AddTest() {\r\n  const { judge0Languges, isLoading, setIsLoading, setShowHeader } =\r\n    React.useContext(AppContext);\r\n  setShowHeader(false);\r\n  const [subjects, setSubjects] = useState([]);\r\n  const [groups, setGroups] = useState();\r\n  const [areGroupsLoading, setAreGroupsLoading] = useState(true);\r\n\r\n  //form controlled input fields\r\n  const [selectedSubject, setSelectedSubject] = useState(-1);\r\n  const [selectedGroup, setSelectedGroup] = useState();\r\n  const [language, setLanguage] = useState(judge0Languges[0].id);\r\n  const [code, setCode] = useState();\r\n  const [title, setTitle] = useState();\r\n  const [expectedAnswer, setExpectedAnswer] = useState(\"\");\r\n  const [date, setDate] = useState(new Date());\r\n  const [questions, setQuestions] = useState([\r\n    { id: 0, questionBody: \"\", expectedAnswer: \"\" },\r\n  ]);\r\n  // const [expectedAnswers, setExpectedAnswers] = useState([])\r\n\r\n  //onMount\r\n  useEffect(() => {\r\n    getSubjects();\r\n  }, []);\r\n\r\n  function subjectChanged(id) {\r\n    setSelectedSubject(id);\r\n    if (id > 0) {\r\n      getGroups(id);\r\n    }\r\n  }\r\n  async function getGroups(subjectId) {\r\n    console.log(\"getting groups from db...\");\r\n    setAreGroupsLoading(true);\r\n    const response = await axios({\r\n      method: \"get\",\r\n      url: `${rootURL}/subjects/${subjectId}/groups`,\r\n    }).catch((err) => console.log(err));\r\n\r\n    if (response) {\r\n      console.log(response.data);\r\n      setGroups(response.data);\r\n      setSelectedGroup(response.data[0].grupa);\r\n    }\r\n    setAreGroupsLoading(false);\r\n  }\r\n\r\n  async function getSubjects() {\r\n    console.log(\"getting subjects from db...\");\r\n    setIsLoading(true);\r\n    const response = await axios({\r\n      method: \"get\",\r\n      url: `${rootURL}/teachers/1/subjects`,\r\n    }).catch((err) => console.log(err));\r\n\r\n    if (response) {\r\n      console.log(response.data);\r\n      setSubjects(response.data);\r\n    }\r\n    setIsLoading(false);\r\n  }\r\n\r\n  function addQuestionBtnHandler(e) {\r\n    console.log(\"addQuestionBtnHandler\");\r\n\r\n    const lastQuestion = questions[questions.length - 1];\r\n\r\n    setQuestions((questions) =>\r\n      questions.concat({\r\n        id: lastQuestion.id + 1,\r\n        questionBody: \"\",\r\n        expectedAnswer: \"\",\r\n      })\r\n    );\r\n  }\r\n  function removeQuestionBtnHandler(e) {\r\n    console.log(\"removeQuestionBtnHandler\");\r\n    const lastQuestion = questions[questions.length - 1];\r\n    setQuestions((items) =>\r\n      items.filter((item) => {\r\n        return item.id !== lastQuestion.id;\r\n      })\r\n    );\r\n  }\r\n  function handleQuestionsChange(e, index) {\r\n    // 1. Make a shallow copy of the array\r\n    console.log(index);\r\n    let temp_state = [...questions];\r\n\r\n    // 2. Make a shallow copy of the element you want to mutate\r\n    let temp_element = { ...questions.find((x) => x.id === index) };\r\n\r\n    // 3. Update the property you're interested in\r\n    temp_element.questionBody = e.target.value;\r\n\r\n    // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\r\n    temp_state[index] = temp_element;\r\n\r\n    // 5. Set the state to our new copy\r\n    setQuestions(temp_state);\r\n    // console.log(questions.find((x) => x.id === index).questionBody);\r\n  }\r\n\r\n  function handleExpectedResultChange(e, index) {\r\n    // 1. Make a shallow copy of the array\r\n    console.log(index);\r\n    let temp_state = [...questions];\r\n\r\n    // 2. Make a shallow copy of the element you want to mutate\r\n    let temp_element = { ...questions.find((x) => x.id === index) };\r\n\r\n    // 3. Update the property you're interested in\r\n    temp_element.expectedAnswer = e.target.value;\r\n\r\n    // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\r\n    temp_state[index] = temp_element;\r\n\r\n    // 5. Set the state to our new copy\r\n    setQuestions(temp_state);\r\n    // console.log(questions.find((x) => x.id === index).questionBody);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const test = {\r\n      title: title,\r\n      deadline: date,\r\n      subjectId: selectedSubject,\r\n      languageId: language,\r\n      questions: questions,\r\n      group: selectedGroup,\r\n    };\r\n    console.log(test);\r\n    postTest(test);\r\n    console.log(date.getTimezoneOffset());\r\n  }\r\n\r\n  async function postTest(test) {\r\n    console.log(\"posting assignment...\");\r\n    setIsLoading(true);\r\n\r\n    const response = await axios({\r\n      method: \"post\",\r\n      url: `${rootURL}/assignments/create`,\r\n      data: test,\r\n    }).catch((err) => console.log(err));\r\n\r\n    if (response) {\r\n      console.log(response.data);\r\n    }\r\n    setIsLoading(false);\r\n  }\r\n\r\n  if (isLoading) {\r\n    console.log(\"is loading..\");\r\n    return <Loader></Loader>;\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <FormTitle className=\"formTitle\">Adaugă Test</FormTitle>\r\n      <Form className=\"addTestForm\">\r\n        <Form.Row>\r\n          <Form.Group as={Col} controlId=\"testTitle\">\r\n            <Form.Label>Titlu test</Form.Label>\r\n            <Form.Control onChange={(e) => setTitle(e.target.value)} />\r\n          </Form.Group>\r\n          <Form.Group as={Col} controlId=\"programmingLanguages\">\r\n            <Form.Label>Limbaj de programare</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              onChange={(e) => setLanguage(e.target.value)}\r\n            >\r\n              {judge0Languges.map((language) => (\r\n                <option value={language.id} key={language.id}>\r\n                  {language.name}\r\n                </option>\r\n              ))}\r\n            </Form.Control>\r\n          </Form.Group>\r\n        </Form.Row>\r\n        <Form.Row>\r\n          <Form.Group as={Col} controlId=\"subjects\">\r\n            <Form.Label>Materie</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              onChange={(e) => subjectChanged(e.target.value)}\r\n            >\r\n              <option value={-1}>Selectează</option>\r\n              {subjects.map((subject) => (\r\n                <option value={subject.id} id={subject.id}>\r\n                  {subject.descriere}\r\n                </option>\r\n              ))}\r\n            </Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Col} controlId=\"StudentGroups\">\r\n            <Form.Label>Grupa</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              onChange={(e) => setSelectedGroup(e.target.value)}\r\n            >\r\n              {areGroupsLoading && selectedSubject == -1 && (\r\n                <option value={-1}>nicio grupa pentru materia selectată</option>\r\n              )}\r\n              {!areGroupsLoading &&\r\n                groups &&\r\n                selectedSubject > 0 &&\r\n                groups.map((item) => (\r\n                  <option value={item.grupa}>{item.grupa}</option>\r\n                ))}\r\n            </Form.Control>\r\n          </Form.Group>\r\n        </Form.Row>\r\n\r\n        <div className=\"questionsContainer\">\r\n          {questions.map((question, index) => (\r\n            <Form.Row className=\"questionRow\">\r\n              <Form.Group as={Col} controlId=\"Problem\">\r\n                <Form.Label>Problema {question.id}</Form.Label>\r\n                <Form.Control\r\n                  as=\"textarea\"\r\n                  rows={1}\r\n                  // value={questions.find((x) => x.id === index).questionBody}\r\n                  onChange={(e) => handleQuestionsChange(e, index)}\r\n                />\r\n              </Form.Group>\r\n              <Col>\r\n                <Form.Label>Rezultat așteptat</Form.Label>\r\n                <Form.Control\r\n                  // value={questions.find((x) => x.id === index).expectedAnswer}\r\n                  onChange={(e) => handleExpectedResultChange(e, index)}\r\n                />\r\n              </Col>\r\n              {!questions[index + 1] && index !== 0 ? (\r\n                <MdRemoveCircleOutline\r\n                  className=\"addQuestionBtn\"\r\n                  onClick={removeQuestionBtnHandler}\r\n                ></MdRemoveCircleOutline>\r\n              ) : (\r\n                <MdAddCircleOutline\r\n                  className=\"addQuestionBtn\"\r\n                  onClick={addQuestionBtnHandler}\r\n                ></MdAddCircleOutline>\r\n              )}\r\n            </Form.Row>\r\n          ))}\r\n        </div>\r\n        <Form.Row>\r\n          <Col className=\"datePickerColumn\">\r\n            <DatePicker\r\n              wrapperClassName=\"datepicker\"\r\n              customInput={<ExampleCustomInput />}\r\n              selected={date}\r\n              onChange={(date) => setDate(date)}\r\n              showTimeSelect\r\n              timeFormat=\"HH:mm\"\r\n              timeIntervals={15}\r\n              timeCaption=\"Timp\"\r\n              dateFormat=\"d MMMM, yyyy HH:mm\"\r\n              fixedHeight\r\n              popperPlacement=\"top-end\"\r\n            />\r\n          </Col>\r\n        </Form.Row>\r\n\r\n        <Form.Row className=\"justify-content-center\">\r\n          <SendBtn primary onClick={(e) => handleSubmit(e)}>\r\n            Trimite\r\n          </SendBtn>\r\n        </Form.Row>\r\n      </Form>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst ExampleCustomInput = React.forwardRef(({ value, onClick }, ref) => (\r\n  <div className=\"timePickerBox\" onClick={onClick} ref={ref}>\r\n    <div className=\"deadlineText\">{`Deadline:`}</div>\r\n    {value}\r\n  </div>\r\n));\r\n\r\nconst SendBtn = styled(Button)`\r\n  background: ${theme.mainBlue};\r\n  color: white;\r\n  margin-top: 2em;\r\n  font-size: 1rem;\r\n  font-weight: 400;\r\n  height: 50px;\r\n  width: 150px;\r\n\r\n  &:hover {\r\n    background: ${theme.mainBlue};\r\n    color: white;\r\n    font-weight: normal;\r\n    f\r\n  }\r\n`;\r\n\r\nconst FormTitle = styled.p`\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 2rem;\r\n  margin-bottom: 1em;\r\n`;\r\n\r\nconst Wrapper = styled(Card)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 40%;\r\n  margin-left: 37%;\r\n  height: 100%;\r\n\r\n  margin-top: 7%;\r\n  // padding-left: 5%;\r\n  // padding-right: 5%;\r\n  // padding-bottom: 10%;\r\n  // padding-top: 5%;\r\n\r\n  .addTestForm {\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n  .plus {\r\n    margin-right: 10px;\r\n  }\r\n  .questionsContainer {\r\n    max-height: 12em;\r\n    overflow-y: auto;\r\n    overflow-x: hidden;\r\n  }\r\n\r\n  .addQuestionBtn {\r\n    align-self: center;\r\n    margin-top: 15px;\r\n    margin-right: 15px;\r\n    margin-left: 15px;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .datePickerColumn {\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n\r\n  .timePickerBox {\r\n    display: flex;\r\n    width: 100%;\r\n    height: calc(1.5em + 0.75rem + 2px);\r\n    padding: 0.375rem 0.75rem;\r\n    font-size: 1rem;\r\n    font-weight: 400;\r\n    line-height: 1.5;\r\n    color: #495057;\r\n    background-color: #fff;\r\n    background-clip: padding-box;\r\n    border: 1px solid #ced4da;\r\n    border-radius: 0.25rem;\r\n    transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\r\n  }\r\n\r\n  .deadlineText {\r\n    margin-right: 10px;\r\n    font-weight: 600;\r\n  }\r\n`;\r\n\r\nexport default AddTest;\r\n","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\Loader.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\FormSucces.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\FormError.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\context\\AuthContext.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\home.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\AvatarDropdown.js",["154"],{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","severity":1,"message":"160","line":2,"column":29,"nodeType":"161","messageId":"162","endLine":2,"endColumn":38},{"ruleId":"159","severity":1,"message":"163","line":7,"column":16,"nodeType":"161","messageId":"162","endLine":7,"endColumn":19},{"ruleId":"159","severity":1,"message":"164","line":10,"column":18,"nodeType":"161","messageId":"162","endLine":10,"endColumn":27},{"ruleId":"159","severity":1,"message":"165","line":20,"column":41,"nodeType":"161","messageId":"162","endLine":20,"endColumn":57},{"ruleId":"159","severity":1,"message":"166","line":20,"column":59,"nodeType":"161","messageId":"162","endLine":20,"endColumn":66},{"ruleId":"159","severity":1,"message":"160","line":2,"column":17,"nodeType":"161","messageId":"162","endLine":2,"endColumn":26},{"ruleId":"159","severity":1,"message":"163","line":8,"column":16,"nodeType":"161","messageId":"162","endLine":8,"endColumn":19},{"ruleId":"159","severity":1,"message":"164","line":11,"column":18,"nodeType":"161","messageId":"162","endLine":11,"endColumn":27},{"ruleId":"159","severity":1,"message":"167","line":1,"column":10,"nodeType":"161","messageId":"162","endLine":1,"endColumn":23},{"ruleId":"159","severity":1,"message":"168","line":2,"column":10,"nodeType":"161","messageId":"162","endLine":2,"endColumn":25},{"ruleId":"159","severity":1,"message":"169","line":2,"column":27,"nodeType":"161","messageId":"162","endLine":2,"endColumn":38},{"ruleId":"159","severity":1,"message":"170","line":3,"column":10,"nodeType":"161","messageId":"162","endLine":3,"endColumn":16},{"ruleId":"159","severity":1,"message":"171","line":4,"column":10,"nodeType":"161","messageId":"162","endLine":4,"endColumn":13},{"ruleId":"159","severity":1,"message":"172","line":6,"column":8,"nodeType":"161","messageId":"162","endLine":6,"endColumn":12},{"ruleId":"159","severity":1,"message":"173","line":15,"column":12,"nodeType":"161","messageId":"162","endLine":15,"endColumn":18},{"ruleId":"174","severity":1,"message":"175","line":36,"column":33,"nodeType":"176","messageId":"177","endLine":36,"endColumn":35},{"ruleId":"174","severity":1,"message":"175","line":42,"column":25,"nodeType":"176","messageId":"177","endLine":42,"endColumn":27},{"ruleId":"178","severity":1,"message":"179","line":48,"column":6,"nodeType":"180","endLine":48,"endColumn":8,"suggestions":"181"},{"ruleId":"178","severity":1,"message":"182","line":57,"column":6,"nodeType":"180","endLine":57,"endColumn":21,"suggestions":"183"},{"ruleId":"159","severity":1,"message":"184","line":74,"column":12,"nodeType":"161","messageId":"162","endLine":74,"endColumn":37},{"ruleId":"159","severity":1,"message":"185","line":5,"column":10,"nodeType":"161","messageId":"162","endLine":5,"endColumn":15},{"ruleId":"178","severity":1,"message":"186","line":16,"column":6,"nodeType":"180","endLine":16,"endColumn":8,"suggestions":"187"},{"ruleId":"174","severity":1,"message":"175","line":20,"column":54,"nodeType":"176","messageId":"177","endLine":20,"endColumn":56},{"ruleId":"159","severity":1,"message":"188","line":72,"column":7,"nodeType":"161","messageId":"162","endLine":72,"endColumn":21},{"ruleId":"159","severity":1,"message":"189","line":28,"column":10,"nodeType":"161","messageId":"162","endLine":28,"endColumn":14},{"ruleId":"159","severity":1,"message":"190","line":28,"column":16,"nodeType":"161","messageId":"162","endLine":28,"endColumn":23},{"ruleId":"159","severity":1,"message":"191","line":30,"column":10,"nodeType":"161","messageId":"162","endLine":30,"endColumn":24},{"ruleId":"159","severity":1,"message":"192","line":30,"column":26,"nodeType":"161","messageId":"162","endLine":30,"endColumn":43},{"ruleId":"178","severity":1,"message":"193","line":40,"column":6,"nodeType":"180","endLine":40,"endColumn":8,"suggestions":"194"},{"ruleId":"174","severity":1,"message":"175","line":221,"column":52,"nodeType":"176","messageId":"177","endLine":221,"endColumn":54},{"ruleId":"159","severity":1,"message":"195","line":3,"column":10,"nodeType":"161","messageId":"162","endLine":3,"endColumn":23},"no-native-reassign",["196"],"no-negated-in-lhs",["197"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Col' is defined but never used.","'useFormik' is defined but never used.","'setAuthenticated' is assigned a value but never used.","'setUser' is assigned a value but never used.","'DefaultNavbar' is defined but never used.","'FaRegUserCircle' is defined but never used.","'FaArrowLeft' is defined but never used.","'MdMenu' is defined but never used.","'Nav' is defined but never used.","'logo' is defined but never used.","'goBack' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'aceLanguages', 'getTestQuestions', 'setCodeEditorText', 'test.id', and 'test.id_limbaj_programare'. Either include them or remove the dependency array.","ArrayExpression",["198"],"React Hook useEffect has a missing dependency: 'decode'. Either include it or remove the dependency array.",["199"],"'getCodeEditorTextCallback' is defined but never used.","'Route' is defined but never used.","React Hook useEffect has missing dependencies: 'getStudentTests' and 'tests'. Either include them or remove the dependency array.",["200"],"'TestsContainer' is assigned a value but never used.","'code' is assigned a value but never used.","'setCode' is assigned a value but never used.","'expectedAnswer' is assigned a value but never used.","'setExpectedAnswer' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getSubjects'. Either include it or remove the dependency array.",["201"],"'FaFontAwesome' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},"Update the dependencies array to be: [aceLanguages, getTestQuestions, setCodeEditorText, test.id, test.id_limbaj_programare]",{"range":"210","text":"211"},"Update the dependencies array to be: [decode, judgeResponse]",{"range":"212","text":"213"},"Update the dependencies array to be: [getStudentTests, tests]",{"range":"214","text":"215"},"Update the dependencies array to be: [getSubjects]",{"range":"216","text":"217"},[1550,1552],"[aceLanguages, getTestQuestions, setCodeEditorText, test.id, test.id_limbaj_programare]",[1831,1846],"[decode, judgeResponse]",[571,573],"[getStudentTests, tests]",[1594,1596],"[getSubjects]"]