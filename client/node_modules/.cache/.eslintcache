[{"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\index.js":"1","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\App.js":"2","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\Navbar.js":"3","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\index.js":"4","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\Assets\\theme.js":"5","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\login.js":"6","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\tests.js":"7","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\register.js":"8","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\dashboard.js":"9","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\error.js":"10","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\history.js":"11","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\settings.js":"12","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\Header.js":"13","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\defaultComponents.js":"14","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\NavbarDataStudent.js":"15","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\NavbarDataTeacher.js":"16","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\context\\context.js":"17","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\takeTest.js":"18","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\CodeEditor.js":"19","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\testsGrid.js":"20","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\index.js":"21","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\defaultCodeData.js":"22","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\addTest.js":"23","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\Loader.js":"24","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\FormSucces.js":"25","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\FormError.js":"26","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\context\\AuthContext.js":"27","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\home.js":"28","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\AvatarDropdown.js":"29","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\QuestionSlider.js":"30","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\TestsTable.js":"31","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\context\\index.js":"32","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\context\\utils.js":"33","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\AlertBar.js":"34","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\evaluateTest.js":"35","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\Popup.js":"36","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\StudentGraph.js":"37","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\TeacherGraph.js":"38","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\TeacherGraphGenerator.js":"39"},{"size":501,"mtime":1625831701476,"results":"40","hashOfConfig":"41"},{"size":2549,"mtime":1626372095284,"results":"42","hashOfConfig":"41"},{"size":3406,"mtime":1626374076236,"results":"43","hashOfConfig":"41"},{"size":525,"mtime":1626336731944,"results":"44","hashOfConfig":"41"},{"size":229,"mtime":1626259984397,"results":"45","hashOfConfig":"41"},{"size":9102,"mtime":1626436452239,"results":"46","hashOfConfig":"41"},{"size":4316,"mtime":1626516071210,"results":"47","hashOfConfig":"41"},{"size":9893,"mtime":1625833132094,"results":"48","hashOfConfig":"41"},{"size":2236,"mtime":1626580838829,"results":"49","hashOfConfig":"41"},{"size":388,"mtime":1623710186186,"results":"50","hashOfConfig":"41"},{"size":1043,"mtime":1626533439329,"results":"51","hashOfConfig":"41"},{"size":343,"mtime":1624709372832,"results":"52","hashOfConfig":"41"},{"size":1029,"mtime":1626374117562,"results":"53","hashOfConfig":"41"},{"size":1182,"mtime":1626375091715,"results":"54","hashOfConfig":"41"},{"size":471,"mtime":1625770721924,"results":"55","hashOfConfig":"41"},{"size":477,"mtime":1625770284872,"results":"56","hashOfConfig":"41"},{"size":3105,"mtime":1626512682483,"results":"57","hashOfConfig":"41"},{"size":9394,"mtime":1626515268753,"results":"58","hashOfConfig":"41"},{"size":1434,"mtime":1626368257031,"results":"59","hashOfConfig":"41"},{"size":6201,"mtime":1626537754175,"results":"60","hashOfConfig":"41"},{"size":651,"mtime":1626580525896,"results":"61","hashOfConfig":"41"},{"size":838,"mtime":1624828708070,"results":"62","hashOfConfig":"41"},{"size":13695,"mtime":1625943220811,"results":"63","hashOfConfig":"41"},{"size":2336,"mtime":1624886094727,"results":"64","hashOfConfig":"41"},{"size":594,"mtime":1625772515928,"results":"65","hashOfConfig":"41"},{"size":613,"mtime":1625772519627,"results":"66","hashOfConfig":"41"},{"size":1864,"mtime":1625840285790,"results":"67","hashOfConfig":"41"},{"size":1042,"mtime":1625821685091,"results":"68","hashOfConfig":"41"},{"size":4314,"mtime":1625845206726,"results":"69","hashOfConfig":"41"},{"size":2270,"mtime":1626513744321,"results":"70","hashOfConfig":"41"},{"size":4408,"mtime":1626517162720,"results":"71","hashOfConfig":"41"},{"size":163,"mtime":1626265693688,"results":"72","hashOfConfig":"41"},{"size":87,"mtime":1626265718363,"results":"73","hashOfConfig":"41"},{"size":759,"mtime":1626284009089,"results":"74","hashOfConfig":"41"},{"size":11644,"mtime":1626536425472,"results":"75","hashOfConfig":"41"},{"size":1376,"mtime":1626537661420,"results":"76","hashOfConfig":"41"},{"size":941,"mtime":1626580257496,"results":"77","hashOfConfig":"41"},{"size":638,"mtime":1626580656304,"results":"78","hashOfConfig":"41"},{"size":629,"mtime":1626580421771,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"12hnw4i",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"82"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"82"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"82"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"82"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"82"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"82"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"82"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"82"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"82"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"82"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"82"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"82"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\index.js",[],["171","172"],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\App.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\Navbar.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\index.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\Assets\\theme.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\login.js",["173","174","175","176","177"],"import { Link, Redirect } from \"react-router-dom\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { AppContext } from \"../context/context\";\r\nimport { FormSuccess, FormError } from \"../components\";\r\nimport { Card, Button } from \"../components/defaultComponents\";\r\nimport styled from \"styled-components\";\r\nimport { Form, Col } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport theme from \"../Assets/theme\";\r\nimport { Formik, useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport { ImSpinner3 } from \"react-icons/im\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\n\r\nconst rootURL = \"http://localhost:5000/api\";\r\nfunction Login() {\r\n  const authContext = useContext(AuthContext);\r\n\r\n  const { setShowNavbar, setShowHeader, setAuthenticated, setUser } =\r\n    useContext(AppContext);\r\n  setShowNavbar(false);\r\n  setShowHeader(false);\r\n  const [type, setType] = useState(\"student\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [redirectOnLogin, setRedirectOnLogin] = useState(false);\r\n  const [loginSuccess, setLoginSuccess] = useState();\r\n  const [loginError, setLoginError] = useState();\r\n\r\n  const schema = yup.object().shape({\r\n    email: yup\r\n      .string()\r\n      .matches(\r\n        type === \"student\" ? /(@stud.ase.ro)/ : /(@ie.ase.ro)/,\r\n        \"Adresă nepotrivită pentru tipul de utilizator\",\r\n        {\r\n          excludeEmptyString: true,\r\n        }\r\n      )\r\n      .email(\"Adresă de email invalidă\")\r\n      .required(\"Nicio adresă de email\"),\r\n    password: yup.string().required(\"Nicio parolă introdusă\"),\r\n  });\r\n\r\n  async function login(user) {\r\n    console.log(user);\r\n    setIsLoading(true);\r\n    const response = await axios({\r\n      method: \"post\",\r\n      url: `${rootURL}/auth/login`,\r\n      data: user,\r\n    }).catch((err) => {\r\n      if (err.response) {\r\n        console.log(err.response.data.message);\r\n        setLoginError(err.response.data.message);\r\n      } else {\r\n        setLoginError(\"Serverul nu raspunde\");\r\n      }\r\n\r\n      setLoginSuccess(null);\r\n    });\r\n    if (response) {\r\n      // console.log(response.data);\r\n      authContext.setAuthState(response.data);\r\n      setLoginError(null);\r\n      setLoginSuccess(response.data.message);\r\n      setTimeout(() => {\r\n        setRedirectOnLogin(true);\r\n      }, 1500);\r\n    }\r\n\r\n    setIsLoading(false);\r\n  }\r\n\r\n  function submitHandler(user) {\r\n    console.log(\"submitted\");\r\n    user.type = type;\r\n    login(user);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {redirectOnLogin && <Redirect to=\"/dashboard\" />}\r\n      <Wrapper>\r\n        <FormCard>\r\n          <Formik\r\n            validationSchema={schema}\r\n            // onSubmit={(values) => {\r\n            //   alert(JSON.stringify(values, null, 2));\r\n            // }}\r\n            onSubmit={(values) => {\r\n              submitHandler(values);\r\n            }}\r\n            initialValues={{\r\n              email: \"\",\r\n              password: \"\",\r\n            }}\r\n          >\r\n            {({\r\n              handleSubmit,\r\n              handleChange,\r\n              handleBlur,\r\n              values,\r\n              touched,\r\n              isValid,\r\n              errors,\r\n            }) => (\r\n              <Form noValidate onSubmit={handleSubmit}>\r\n                <Form.Group>\r\n                  {loginSuccess && <FormSuccess text={loginSuccess} />}\r\n                  {loginError && <FormError text={loginError} />}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                  <Form.Label>Adresă de email</Form.Label>\r\n                  <Form.Control\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    value={values.email}\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    placeholder=\"Introdu email\"\r\n                    isValid={touched.email && !errors.email}\r\n                    isInvalid={touched.email && !!errors.email}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.email}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                  <Form.Label>Parolă</Form.Label>\r\n                  <Form.Control\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    value={values.password}\r\n                    placeholder=\"Introdu Parola\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    isValid={touched.password && !errors.password}\r\n                    isInvalid={touched.password && !!errors.password}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.password}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicCheckbox\">\r\n                  <Form.Label>Tip cont</Form.Label>\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    // name=\"type\"\r\n                    // value={type}\r\n                    onChange={(e) => setType(e.target.value)}\r\n                    // onChange={(e) => setType(e.target.value)}\r\n                    // onBlur={handleBlur}\r\n                  >\r\n                    <option value=\"student\">Student</option>\r\n                    <option value=\"teacher\">Profesor</option>\r\n                  </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <LoginBtn variant=\"primary\" type=\"submit\">\r\n                    {isLoading ? (\r\n                      <span className=\"loadingContainer\">\r\n                        <ImSpinner3 className=\"icon-spin\"></ImSpinner3>\r\n                        <span className=\"loadingText\">Se încarcă...</span>\r\n                      </span>\r\n                    ) : (\r\n                      <p>Login</p>\r\n                    )}\r\n                    <p>Login</p>\r\n                  </LoginBtn>\r\n                </Form.Group>\r\n\r\n                <div class=\"sau\">\r\n                  <p>\r\n                    <span>sau</span>\r\n                  </p>\r\n                </div>\r\n\r\n                <Form.Group>\r\n                  <Link to=\"/register\" className=\"registerBtnContainer\">\r\n                    <RegisterBtn variant=\"secondary\" type=\"submit\">\r\n                      <p>Creează un cont</p>\r\n                    </RegisterBtn>\r\n                  </Link>\r\n                </Form.Group>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </FormCard>\r\n      </Wrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  height: 100vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  // .loginLink {\r\n  //   text-decoration: none;\r\n  // }\r\n  a {\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\nconst FormCard = styled(Card)`\r\n  width: 30em;\r\n  min-height 32em;\r\n\r\n  .loadingContainer {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    .loadingText {      \r\n      font-family: Roboto\r\n      margin-left: 2em;\r\n    }\r\n\r\n    .icon-spin {\r\n      margin-right: 0.5em;\r\n      -webkit-animation: icon-spin 2s infinite linear;\r\n              animation: icon-spin 2s infinite linear;\r\n    }\r\n    \r\n    @-webkit-keyframes icon-spin {\r\n      0% {\r\n        -webkit-transform: rotate(0deg);\r\n                transform: rotate(0deg);\r\n      }\r\n      100% {\r\n        -webkit-transform: rotate(359deg);\r\n                transform: rotate(359deg);\r\n      }\r\n    }\r\n    \r\n    @keyframes icon-spin {\r\n      0% {\r\n        -webkit-transform: rotate(0deg);\r\n                transform: rotate(0deg);\r\n      }\r\n      100% {\r\n        -webkit-transform: rotate(359deg);\r\n                transform: rotate(359deg);\r\n      }\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  .sau {\r\n    margin-top: 2em;\r\n    margin-bottom: 1em;\r\n    p {\r\n      \r\n      \r\n      width: 100%; \r\n      text-align: center; \r\n      border-bottom: 1px solid ${theme.Grey2}; \r\n      line-height: 0.1em;\r\n      margin: 10px 0 20px; \r\n      \r\n   } \r\n   \r\n   p span { \r\n       background:#fff; \r\n       padding:0 10px; \r\n       font-weight: bold;\r\n       color: ${theme.Grey1}\r\n   }\r\n  }\r\n\r\n`;\r\n\r\nconst LoginBtn = styled(Button)`\r\n  background: ${theme.mainBlue};\r\n  color: white;\r\n  margin-top: 2em;\r\n  font-size: 1rem;\r\n  font-weight: bold;\r\n  height: 2em;\r\n  width: 20em;\r\n  margin-left: 0;\r\n  margin-right: 0;\r\n  width: 100%;\r\n  border: none;\r\n\r\n  &:hover {\r\n    background: ${theme.mainBlue};\r\n    color: white;\r\n  }\r\n`;\r\n\r\nconst RegisterBtn = styled(Button)`\r\n  background: white;\r\n  color: ${theme.mainBlue};\r\n  margin-top: 2em;\r\n  font-size: 1rem;\r\n  font-weight: bold;\r\n  height: 2em;\r\n  width: 20em;\r\n  margin-left: 0;\r\n  margin-right: 0;\r\n  width: 100%;\r\n  border: 1px solid ${theme.Grey1};\r\n  box-sizing: border-box;\r\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.08);\r\n  border-radius: 5px;\r\n\r\n  &:hover {\r\n    background: white;\r\n    color: ${theme.mainBlue};\r\n  }\r\n`;\r\n\r\nexport default Login;\r\n","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\tests.js",["178","179","180","181","182","183"],"import { useContext, useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  Route,\r\n  Switch,\r\n  withRouter,\r\n  Redirect,\r\n  useHistory,\r\n} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { TakeTest, EvaluateTest } from \".\";\r\nimport { TestsTable, Loader, AlertBar } from \"../components/\";\r\nimport { AppContext, AuthContext, utils } from \"../context\";\r\n\r\nconst rootURL = utils.rootURL;\r\n\r\nfunction Tests() {\r\n  const user = useContext(AuthContext).authState.userInfo;\r\n  const { judge0Languges, setShowNavbar } = useContext(AppContext);\r\n  setShowNavbar(true);\r\n\r\n  const history = useHistory();\r\n  const [tests, setTests] = useState();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [redirectPath] = useState(() => {\r\n    return user.tip === \"student\" ? \"tests/takeTest\" : \"tests/evaluateTest\";\r\n  });\r\n  const { testState, setTestInProgress } = useContext(AppContext);\r\n  const [alert, setAlert] = useState({\r\n    open: false,\r\n    severity: \"success\",\r\n    message: \"\",\r\n  });\r\n\r\n  const handleCallback = (childData) => {\r\n    const clickedTestId = parseInt(childData);\r\n    console.log(testState);\r\n    if (testState || testState.id === clickedTestId) {\r\n      const clickedTest = tests.find((item) => item.id === clickedTestId);\r\n      setTestInProgress(clickedTest);\r\n      setRedirect(true);\r\n      history.push(redirectPath);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getTests(user, setIsLoading, setTests, judge0Languges);\r\n    console.log(tests);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {redirect && <Redirect to={redirectPath} />}\r\n      {isLoading ? (\r\n        <Loader></Loader>\r\n      ) : (\r\n        // <Switch>\r\n        //   <Route path={`/tests/takeTest`}>\r\n        //     <TakeTest></TakeTest>\r\n        //   </Route>\r\n        //   <Route path={`/tests/evaluateTest`}>\r\n        //     <EvaluateTest></EvaluateTest>\r\n        //   </Route>\r\n\r\n        //   <Route\r\n        //     path=\"/tests\"\r\n        //     exact={true}\r\n        //     render={(props) => (\r\n        //       <TestsTable\r\n        //         title=\"Teste Programate\"\r\n        //         data={tests}\r\n        //         callback={handleCallback}\r\n        //         redirectPath={redirectPath}\r\n        //       ></TestsTable>\r\n        //     )}\r\n        //   />\r\n        // </Switch>\r\n        <>\r\n          {!redirect && (\r\n            <AlertBar\r\n              open={alert.open}\r\n              severity={alert.severity}\r\n              message={alert.message}\r\n            />\r\n          )}\r\n          <TestsTable\r\n            title={\r\n              user.tip === \"student\" ? \"Teste programate\" : \"Teste de corectat\"\r\n            }\r\n            data={tests}\r\n            callback={handleCallback}\r\n            redirectPath={redirectPath}\r\n          ></TestsTable>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst getTests = async (user, setIsLoading, setTests, languages) => {\r\n  console.log(\"getting tests from db..\");\r\n  let url = `${rootURL}`;\r\n  if (user.tip === \"student\") {\r\n    url += `/students/${user.id}/due`;\r\n  } else {\r\n    url += `/teachers/${user.id}/ungradedSubmissions`;\r\n  }\r\n\r\n  setIsLoading(true);\r\n  const response = await axios.get(url).catch((err) => console.log(err));\r\n\r\n  if (response) {\r\n    const tests = response.data;\r\n    processTests(tests, languages);\r\n    setTests(tests);\r\n  }\r\n  setIsLoading(false);\r\n};\r\n\r\nconst processTests = (tests, languages) => {\r\n  tests.forEach((item) => {\r\n    if (item.deadline !== null) {\r\n      item.formatedDeadline = parseDateTime(item.deadline);\r\n    }\r\n    if (item.id_limbaj_programare !== null) {\r\n      item.limbaj = getLanguage(item.id_limbaj_programare, languages);\r\n    }\r\n  });\r\n};\r\n\r\nconst parseDateTime = (datetime) => {\r\n  try {\r\n    const date = new Date(datetime);\r\n    // console.log(date.getTime());\r\n    return (\r\n      date.toLocaleDateString(\"ro-RO\") +\r\n      \", ora \" +\r\n      date.getHours() +\r\n      \":\" +\r\n      date.getMinutes()\r\n    );\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nconst getLanguage = (languageId, languages) => {\r\n  const language = languages.find((item) => item.id === languageId);\r\n  const regexToRemoveParanthesis = / *\\([^)]*\\) */g;\r\n\r\n  return language.name.replace(regexToRemoveParanthesis, \"\");\r\n};\r\n\r\nexport default withRouter(Tests);\r\n","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\register.js",["184","185","186"],"import { Link, Redirect } from \"react-router-dom\";\r\nimport React, { useEffect, useState, useContext } from \"react\";\r\nimport { AppContext } from \"../context/context\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport { Card, Button } from \"../components/defaultComponents\";\r\nimport { FormSuccess, FormError } from \"../components\";\r\nimport styled from \"styled-components\";\r\nimport { Form, Col } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport theme from \"../Assets/theme\";\r\nimport { Formik, useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport { ImSpinner3 } from \"react-icons/im\";\r\n\r\nconst rootURL = \"http://localhost:5000/api\";\r\n\r\nfunction Register() {\r\n  const { setShowNavbar, setShowHeader } = useContext(AppContext);\r\n  const authContext = useContext(AuthContext);\r\n  setShowNavbar(false);\r\n  setShowHeader(false);\r\n  const [type, setType] = useState(\"student\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [registerSuccess, setRegisterSuccess] = useState();\r\n  const [registerError, setRegisterError] = useState();\r\n  const [redirectOnRegister, setRedirectOnRegister] = useState(false);\r\n\r\n  const schema = yup.object().shape({\r\n    firstName: yup.string().required(\"Niciun nume introdus\"),\r\n    // .matches(/^[aA-zZ\\s]+$/, \"Doar litere\"),\r\n    lastName: yup.string().required(\"Niciun nume introdus\"),\r\n    // .matches(/^[aA-zZ\\s]+$/, \"Doar litere\"),\r\n    email: yup\r\n      .string()\r\n      .matches(\r\n        type === \"student\" ? /(@stud.ase.ro)/ : /(@ie.ase.ro)/,\r\n        \"Adresă nepotrivită pentru tipul de utilizator\",\r\n        {\r\n          excludeEmptyString: true,\r\n        }\r\n      )\r\n      .email(\"Adresă de email invalidă\")\r\n      .required(\"Nicio adresă de email\"),\r\n    password: yup.string().required(\"Nicio parolă introdusă\"),\r\n  });\r\n\r\n  async function register(user) {\r\n    console.log(user);\r\n    setIsLoading(true);\r\n    const response = await axios({\r\n      method: \"post\",\r\n      url: `${rootURL}/auth/register`,\r\n      data: user,\r\n    }).catch((err) => {\r\n      // console.log(err.response.data.message);\r\n      setRegisterError(err.response.data.message);\r\n      setRegisterSuccess(null);\r\n    });\r\n    if (response) {\r\n      // console.log(response.data);\r\n      authContext.setAuthState(response.data);\r\n      setRegisterSuccess(response.data.message);\r\n      setRegisterError(null);\r\n      setTimeout(() => {\r\n        setRedirectOnRegister(true);\r\n      }, 1500);\r\n    }\r\n    setIsLoading(false);\r\n  }\r\n\r\n  function submitHandler(user) {\r\n    console.log(\"submitted\");\r\n    user.type = type;\r\n    register(user);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {redirectOnRegister && <Redirect to=\"/dashboard\" />}\r\n      <Wrapper>\r\n        <FormCard>\r\n          <Formik\r\n            validationSchema={schema}\r\n            // onSubmit={(values) => {\r\n            //   alert(JSON.stringify(values, null, 2));\r\n            // }}\r\n            onSubmit={(values) => {\r\n              submitHandler(values);\r\n            }}\r\n            initialValues={{\r\n              firstName: \"\",\r\n              lastName: \"\",\r\n              email: \"\",\r\n              password: \"\",\r\n            }}\r\n          >\r\n            {({\r\n              handleSubmit,\r\n              handleChange,\r\n              handleBlur,\r\n              values,\r\n              touched,\r\n              isValid,\r\n              errors,\r\n            }) => (\r\n              <Form noValidate onSubmit={handleSubmit}>\r\n                <Form.Group>\r\n                  {registerSuccess && <FormSuccess text={registerSuccess} />}\r\n                  {registerError && <FormError text={registerError} />}\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Label>Nume</Form.Label>\r\n                  <Form.Control\r\n                    name=\"lastName\"\r\n                    type=\"lastName\"\r\n                    value={values.lastName}\r\n                    placeholder=\"Introdu numele\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    isValid={touched.lastName && !errors.lastName}\r\n                    isInvalid={touched.lastName && !!errors.lastName}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.lastName}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Label>Prenume</Form.Label>\r\n                  <Form.Control\r\n                    name=\"firstName\"\r\n                    type=\"firstName\"\r\n                    value={values.firstName}\r\n                    placeholder=\"Introdu prenumele\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    isValid={touched.firstName && !errors.firstName}\r\n                    isInvalid={touched.firstName && !!errors.firstName}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.firstName}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                  <Form.Label>Adresă de email</Form.Label>\r\n                  <Form.Control\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    value={values.email}\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    placeholder=\"Introdu email\"\r\n                    isValid={touched.email && !errors.email}\r\n                    isInvalid={touched.email && !!errors.email}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.email}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                  <Form.Label>Parolă</Form.Label>\r\n                  <Form.Control\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    value={values.password}\r\n                    placeholder=\"Introdu Parola\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    isValid={touched.password && !errors.password}\r\n                    isInvalid={touched.password && !!errors.password}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.password}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicCheckbox\">\r\n                  <Form.Label>Tip cont</Form.Label>\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    // name=\"type\"\r\n                    // value={type}\r\n                    onChange={(e) => setType(e.target.value)}\r\n                    // onChange={(e) => setType(e.target.value)}\r\n                    // onBlur={handleBlur}\r\n                  >\r\n                    <option value=\"student\">Student</option>\r\n                    <option value=\"teacher\">Profesor</option>\r\n                  </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <LoginBtn variant=\"secondary\" type=\"submit\">\r\n                    {isLoading ? (\r\n                      <span className=\"loadingContainer\">\r\n                        <ImSpinner3 className=\"icon-spin\"></ImSpinner3>\r\n                        <span className=\"loadingText\">Se încarcă...</span>\r\n                      </span>\r\n                    ) : (\r\n                      <p>Creează cont</p>\r\n                    )}\r\n                  </LoginBtn>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"alreadyHaveContainer\">\r\n                  <p>Ai deja un cont?</p>\r\n                  <Link to=\"/login\" className=\"loginText\">\r\n                    Login\r\n                  </Link>\r\n                </Form.Group>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </FormCard>\r\n      </Wrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  height: 100vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  // .loginLink {\r\n  //   text-decoration: none;\r\n  // }\r\n  a {\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\nconst FormCard = styled(Card)`\r\n  width: 30em;\r\n  min-height 32em;\r\n\r\n  .loadingContainer {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    .loadingText {      \r\n      font-family: Roboto\r\n      margin-left: 2em;\r\n    }\r\n\r\n    .icon-spin {\r\n      margin-right: 0.5em;\r\n      -webkit-animation: icon-spin 2s infinite linear;\r\n              animation: icon-spin 2s infinite linear;\r\n    }\r\n    \r\n    @-webkit-keyframes icon-spin {\r\n      0% {\r\n        -webkit-transform: rotate(0deg);\r\n                transform: rotate(0deg);\r\n      }\r\n      100% {\r\n        -webkit-transform: rotate(359deg);\r\n                transform: rotate(359deg);\r\n      }\r\n    }\r\n    \r\n    @keyframes icon-spin {\r\n      0% {\r\n        -webkit-transform: rotate(0deg);\r\n                transform: rotate(0deg);\r\n      }\r\n      100% {\r\n        -webkit-transform: rotate(359deg);\r\n                transform: rotate(359deg);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n .alreadyHaveContainer {\r\n   font-size: 0.9rem;\r\n   color: ${theme.Grey1};   \r\n  font-style: normal;\r\n  font-weight: bold;\r\n   background: white;\r\n   display: flex;\r\n   direction: row;\r\n\r\n   .loginText{\r\n     margin-left: 0.5em;\r\n     font-weight: normal;\r\n   }\r\n   \r\n }\r\n\r\n`;\r\n\r\nconst LoginBtn = styled(Button)`\r\n  background: ${theme.mainOrange};\r\n  color: white;\r\n  margin: 0;\r\n  margin-top: 2em;\r\n  font-size: 1rem;\r\n  font-weight: bold;\r\n  height: 2em;\r\n  width: 20em;\r\n  width: 100%;\r\n  border: none;\r\n\r\n  &:hover {\r\n    background: ${theme.mainOrange};\r\n    color: white;\r\n  }\r\n`;\r\n\r\nexport default Register;\r\n","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\dashboard.js",["187"],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\error.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\history.js",["188"],"import axios from \"axios\";\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { TestsGrid } from \"../components\";\r\nimport { AuthContext } from \"../context\";\r\nimport { utils } from \"../context\";\r\n\r\nfunction History() {\r\n  const user = useContext(AuthContext).authState.userInfo;\r\n  const [tests, setTests] = useState([[\"test1\", \"test2\"]]);\r\n\r\n  async function getTests(user_id) {\r\n    try {\r\n      const { data } = await axios.get(\r\n        `${utils.rootURL}/students/${user_id}/expired`\r\n      );\r\n      // console.log(data);\r\n      setTests(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getTests(user.id);\r\n  }, []);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <TestsGrid tests={tests}></TestsGrid>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  // height: 93vh;\r\n  // align-items: center;\r\n  justify-content: center;\r\n  font-size: 3rem;\r\n  margin-left: 20vw;\r\n  margin-top: 20vh;\r\n`;\r\n\r\nexport default History;\r\n","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\settings.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\Header.js",["189","190","191","192","193","194","195"],"import { DefaultNavbar } from \"./defaultComponents\";\r\nimport { FaRegUserCircle, FaArrowLeft } from \"react-icons/fa\";\r\nimport { MdMenu } from \"react-icons/md\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport styled from \"styled-components\";\r\nimport logo from \"../Assets/logo.svg\";\r\nimport { useHistory, withRouter } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport { AppContext } from \"../context/context\";\r\nimport AvatarDropdown from \"./AvatarDropdown\";\r\n\r\nfunction Header() {\r\n  const { showHeader } = React.useContext(AppContext);\r\n  const history = useHistory();\r\n  function goBack() {\r\n    history.goBack();\r\n  }\r\n\r\n  return !showHeader ? null : (\r\n    <Wrapper>\r\n      <nav>\r\n        <div>\r\n          <AvatarDropdown></AvatarDropdown>\r\n        </div>\r\n      </nav>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  height: 7vh;\r\n  // justify-content: end;\r\n\r\n  nav {\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n  }\r\n`;\r\n\r\nexport default withRouter(Header);\r\n","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\defaultComponents.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\NavbarDataStudent.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\NavbarDataTeacher.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\context\\context.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\takeTest.js",["196","197","198","199","200","201","202"],"import { Card, Button } from \"../components/defaultComponents\";\r\nimport { CodeEditor, Loader, QuestionSlider, AlertBar } from \"../components\";\r\nimport styled from \"styled-components\";\r\nimport React, { useEffect, useState, useContext } from \"react\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport { AppContext } from \"../context/context\";\r\nimport DefaultCode from \"../components/defaultCodeData\";\r\nimport axios from \"axios\";\r\n\r\nconst rootURL = \"http://localhost:5000/api\";\r\n\r\nfunction TakeTest() {\r\n  // console.log(\"salut\");\r\n  const { setShowNavbar, setShowHeader } = useContext(AppContext);\r\n  setShowNavbar(false);\r\n  setShowHeader(true);\r\n\r\n  //get current User\r\n  const auth = useContext(AuthContext);\r\n  const { authState } = auth;\r\n  const user = authState.userInfo;\r\n\r\n  //get current test\r\n  const [test, setTest] = useState();\r\n\r\n  const {\r\n    testState,\r\n    testQuestions,\r\n    getTestQuestions,\r\n    isLoading,\r\n    aceLanguages,\r\n    encode,\r\n    decode,\r\n    removeTestInProgress,\r\n  } = React.useContext(AppContext);\r\n\r\n  const [language, setLanguage] = useState(\"javascript\");\r\n  const [stdout, setStdout] = useState(\" \");\r\n  const [compileError, setCompileError] = useState();\r\n  const [testCaseStatus, setTestCaseStatus] = useState(\" \");\r\n  const [judgeResponse, setJudgeResponse] = useState();\r\n  const [isConsoleLoading, setIsConsoleLoading] = useState(false);\r\n  const [isSubmitLoading, setIsSubmitLoading] = useState(false);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [currentQuestion, setCurrentQuestion] = useState();\r\n  const [codeEditorText, setCodeEditorText] = useState([]);\r\n  const [currentCodeEditorText, setCurrentCodeEditorText] = useState();\r\n  const [alert, setAlert] = useState({\r\n    open: false,\r\n    severity: \"success\",\r\n    message: \"\",\r\n  });\r\n\r\n  //onMount\r\n  useEffect(() => {\r\n    // console.log(testState);\r\n    setTest(testState);\r\n    // console.log(\"onMount\");\r\n    // console.log(test.id);\r\n  }, []);\r\n  useEffect(() => {\r\n    if (test) {\r\n      getTestQuestions(test.id);\r\n      // console.log(testQuestions);\r\n      const aceLanguage = aceLanguages.find(\r\n        (language) => language.id == test.id_limbaj_programare\r\n      );\r\n      if (aceLanguage) {\r\n        setLanguage(aceLanguage.name);\r\n      }\r\n    }\r\n  }, [test]);\r\n\r\n  useEffect(() => {\r\n    setCurrentQuestion(testQuestions[0]);\r\n  }, [testQuestions]);\r\n\r\n  //Initialize codeEditor with default code\r\n  useEffect(\r\n    () => {\r\n      if (testQuestions && test) {\r\n        const defaultCode = DefaultCode.find(\r\n          (item) => item.id == test.id_limbaj_programare\r\n        );\r\n        if (defaultCode) {\r\n          let array = [];\r\n          testQuestions.map((element) => {\r\n            array.push(defaultCode.code);\r\n          });\r\n          setCodeEditorText(array);\r\n        }\r\n      }\r\n    },\r\n    [testQuestions],\r\n    [test]\r\n  );\r\n\r\n  //When judgeResponse change\r\n  useEffect(() => {\r\n    if (judgeResponse) {\r\n      console.log(\"judge response changed\");\r\n      setStdout(decode(judgeResponse.stdout));\r\n      setTestCaseStatus(judgeResponse.status.description);\r\n      setCompileError(decode(judgeResponse.compile_output));\r\n    }\r\n  }, [judgeResponse]);\r\n\r\n  function questionChanged(question, index) {\r\n    // console.log(testQuestions);\r\n    // console.log(question);\r\n    setCurrentQuestionIndex(index);\r\n    setCurrentQuestion(question);\r\n  }\r\n  function codeEditorTextChanged(text) {\r\n    console.log(text);\r\n\r\n    let temp_state = [...codeEditorText];\r\n\r\n    if (codeEditorText.length > currentQuestionIndex) {\r\n      temp_state[currentQuestionIndex] = text;\r\n    } else {\r\n      temp_state.push(text);\r\n    }\r\n    setCodeEditorText(temp_state);\r\n    setCurrentCodeEditorText(text);\r\n  }\r\n\r\n  const getJudgeAssessment = async (test) => {\r\n    console.log(\"getting assessment from judge...\");\r\n    setIsConsoleLoading(true);\r\n    const judgeData = {\r\n      source_code: test.source_code,\r\n      language_id: test.language_id,\r\n      stdin: test.stdin,\r\n    };\r\n    // console.log(test.source_cod);\r\n    const response = await axios({\r\n      method: \"post\",\r\n      url: `${rootURL}/questions/assess/${test.questionId}/${test.id}/${user.id}`,\r\n      data: judgeData,\r\n    }).catch((err) => console.log(err));\r\n\r\n    if (response) {\r\n      console.log(response.data);\r\n      setJudgeResponse(response.data);\r\n    }\r\n    setIsConsoleLoading(false);\r\n  };\r\n  function executaBtnHandler() {\r\n    if (!isConsoleLoading) {\r\n      console.log(\"buton executa apasat\");\r\n      const question = {\r\n        id: test.id,\r\n        questionId: currentQuestion.id,\r\n        source_code: encode(codeEditorText[currentQuestionIndex]),\r\n        language_id: test.id_limbaj_programare,\r\n        stdin: \"\",\r\n      };\r\n      console.log(question);\r\n      getJudgeAssessment(question);\r\n    }\r\n  }\r\n  function handleSendBtn() {\r\n    if (!isSubmitLoading) {\r\n      const submission = {\r\n        test_id: test.id,\r\n        language_id: test.id_limbaj_programare,\r\n        stdin: \"\",\r\n        questions: [],\r\n        deadline: test.deadline,\r\n      };\r\n\r\n      codeEditorText.forEach((code, index) => {\r\n        const question = {\r\n          questionId: testQuestions[index].id,\r\n          source_code: encode(code),\r\n        };\r\n        submission.questions.push(question);\r\n      });\r\n      // console.log(submission);\r\n      postSubmission(submission);\r\n    }\r\n  }\r\n\r\n  async function postSubmission(submission) {\r\n    // console.log(test.id);\r\n    setIsSubmitLoading(true);\r\n    try {\r\n      const response = await axios({\r\n        method: \"post\",\r\n        url: `${rootURL}/assignments/sendSubmission/${user.id}/${submission.test_id}`,\r\n        data: submission,\r\n      });\r\n      if (response) {\r\n        // console.log(response.data);\r\n        if (response.status === 200) {\r\n          setAlert({\r\n            open: true,\r\n            severity: \"success\",\r\n            message: response.data.message,\r\n          });\r\n          console.log(\"ceva\");\r\n          removeTestInProgress();\r\n        } else {\r\n          setAlert({\r\n            open: true,\r\n            severity: \"warning\",\r\n            message: response.data.message,\r\n          });\r\n        }\r\n      }\r\n      setIsSubmitLoading(false);\r\n    } catch (error) {\r\n      console.log(error.response.data.message);\r\n      setAlert({\r\n        open: true,\r\n        severity: \"error\",\r\n        message: error.response.data.message,\r\n      });\r\n    }\r\n  }\r\n  // useEffect(() => {\r\n  //   console.log(codeEditorText);\r\n  // }, [codeEditorText]);\r\n\r\n  if (isLoading) {\r\n    return <Loader></Loader>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Wrapper>\r\n        <AlertBar\r\n          open={alert.open}\r\n          severity={alert.severity}\r\n          message={alert.message}\r\n        />\r\n        <ProblemCard>\r\n          <QuestionSlider\r\n            questions={testQuestions}\r\n            callback={questionChanged}\r\n          ></QuestionSlider>\r\n        </ProblemCard>\r\n        <EditorCard>\r\n          <CodeEditor\r\n            language={language}\r\n            value={codeEditorText[currentQuestionIndex]}\r\n            defaultCode={currentCodeEditorText}\r\n            callback={codeEditorTextChanged}\r\n          ></CodeEditor>\r\n        </EditorCard>\r\n        <ExecuteBtn primary onClick={executaBtnHandler}>\r\n          Executa\r\n        </ExecuteBtn>\r\n        <ConsoleCard>\r\n          <div>\r\n            {\" \"}\r\n            <p>Output:</p>\r\n            {!isConsoleLoading && stdout && <p>{stdout}</p>}\r\n            {isConsoleLoading && <p>Loading...</p>}\r\n          </div>\r\n          <div>\r\n            <p>Test Case Status:</p>\r\n            {!isConsoleLoading && testCaseStatus && <p>{testCaseStatus}</p>}\r\n            {isConsoleLoading && <p>Loading...</p>}\r\n          </div>\r\n          {!isConsoleLoading && compileError && (\r\n            <div>\r\n              <div>\r\n                <p>Compile Error:</p>\r\n              </div>\r\n              <p>{compileError}</p>\r\n            </div>\r\n          )}\r\n        </ConsoleCard>\r\n        <SubmitBtn secondary onClick={handleSendBtn}>\r\n          {isSubmitLoading ? <div>Loading...</div> : <div>Trimite</div>}\r\n        </SubmitBtn>\r\n      </Wrapper>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.section`\r\n  display: grid;\r\n  height: 100%;\r\n  width: 100%;\r\n  max-height: 700px;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  grid-template-rows: repeat(10, 1fr);\r\n  grid-template-areas:\r\n    \"A    B\"\r\n    \"A    B\"\r\n    \"A    B\"\r\n    \"A    B\"\r\n    \"A    B\"\r\n    \"A    B\"\r\n    \"A    D\"\r\n    \"A    C\"\r\n    \"A    C\"\r\n    \"A    E\";\r\n  grid-column-gap: 2em;\r\n`;\r\nconst ProblemCard = styled(Card)`\r\n  grid-area: A;\r\n  overflow: auto;\r\n  margin-left: 2em;\r\n`;\r\nconst EditorCard = styled(Card)`\r\n  grid-area: B;\r\n  margin-right: 2em;\r\n  margin-top: 3em;\r\n  align-items: streched\r\n  justify-items : streched;\r\n  \r\n`;\r\nconst ConsoleCard = styled(Card)`\r\n  grid-area: C;\r\n  margin-right: 2em;\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  overflow: auto;\r\n  flex-wrap: wrap;\r\n`;\r\nconst ExecuteBtn = styled(Button)`\r\n  height: 50px;\r\n  width: 150px;\r\n  grid-are: D;\r\n  justify-self: start;\r\n  align-self: center;\r\n`;\r\nconst SubmitBtn = styled(Button)`\r\n  height: 50px;\r\n  width: 150px;\r\n  grid-are: E;\r\n  justify-self: end;\r\n  align-self: center;\r\n  margin-right: 2em;\r\n`;\r\n\r\nexport default TakeTest;\r\n","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\CodeEditor.js",["203","204","205"],"import React, { useEffect, useState } from \"react\";\r\nimport AceEditor from \"react-ace\";\r\nimport { AppContext } from \"../context/context\";\r\n\r\nimport \"ace-builds/src-noconflict/theme-tomorrow\";\r\nimport \"ace-builds/src-noconflict/ext-language_tools\";\r\n\r\nfunction CodeEditor(props) {\r\n  require(`ace-builds/src-noconflict/mode-${props.language}`);\r\n  require(`ace-builds/src-noconflict/snippets/${props.language}`);\r\n\r\n  const { setCodeEditorText, codeEditorText } = React.useContext(AppContext);\r\n\r\n  function onChange(newValue) {\r\n    setCodeEditorText(newValue);\r\n    props.callback(newValue);\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   console.log(\"frumos\");\r\n  //   console.log(props.defaultCode);\r\n  // }, [props.defaultCode]);\r\n\r\n  return (\r\n    <AceEditor\r\n      width=\"undefined\"\r\n      height=\"20em\"\r\n      mode={`${props.language}`}\r\n      theme=\"tomorrow\"\r\n      onChange={onChange}\r\n      name=\"UNIQUE_ID_OF_DIV\"\r\n      fontSize={20}\r\n      // defaultValue={props.defaultCode}\r\n      value={props.value}\r\n      showPrintMargin={true}\r\n      showGutter={true}\r\n      wrapEnabled={true}\r\n      highlightActiveLine={false}\r\n      setOptions={{\r\n        useWorker: false,\r\n        enableBasicAutocompletion: true,\r\n        enableLiveAutocompletion: true,\r\n        enableSnippets: true,\r\n        showLineNumbers: true,\r\n        tabSize: 4,\r\n        highlightActiveLine: true,\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default CodeEditor;\r\n","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\testsGrid.js",["206","207","208","209","210","211","212","213","214","215","216","217"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { AppContext } from \"../context/context\";\r\nimport { Card } from \"../components/defaultComponents\";\r\nimport { Loader } from \"./\";\r\nimport {\r\n  Route,\r\n  Link,\r\n  useRouteMatch,\r\n  withRouter,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport theme from \"../Assets/theme\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport Popup from \"./Popup\";\r\n\r\nconst rootURL = \"http://localhost:5000/api\";\r\n\r\nconst TestCard = (props) => {\r\n  const [currentTarget, setCurrentTarget] = useState();\r\n  return (\r\n    <StyledCard graded={props.test.nota}>\r\n      <div className=\"cardBanner\">\r\n        {props.test.titlu && <div>{props.test.titlu}</div>}\r\n      </div>\r\n      <div className=\"cardContentContainer\">\r\n        <div className=\"testPropsContainer\">\r\n          <div className=\"testPropContainer\">\r\n            <p>Materie</p>\r\n            <div>{props.test.id_materie === 3 ? \"POO\" : \"atlceva\"}</div>\r\n          </div>\r\n          <div className=\"testPropContainer\">\r\n            <p>Intarziat</p>\r\n            {props.test.intarziat === 0 && <div>NU</div>}\r\n            {props.test.intarziat === 1 && <div>DA</div>}\r\n          </div>\r\n          <div className=\"testPropContainer\">\r\n            <p>Nota automata</p>\r\n            {props.test.notaAutomata ? (\r\n              <div>{props.test.notaAutomata}</div>\r\n            ) : (\r\n              <div>-</div>\r\n            )}\r\n          </div>\r\n          <div className=\"testPropContainer\">\r\n            <p>Feedback</p>\r\n            {props.test.feedback ? (\r\n              <div\r\n                className=\"feedbackStar\"\r\n                onClick={(e) => {\r\n                  if (currentTarget === null) {\r\n                    console.log(e.currentTarget);\r\n                    setCurrentTarget(e.currentTarget);\r\n                  }\r\n                }}\r\n              >\r\n                <Popup\r\n                  target={currentTarget}\r\n                  content={props.test.feedback}\r\n                  closeCallback={setCurrentTarget}\r\n                />\r\n                *\r\n              </div>\r\n            ) : (\r\n              <div>-</div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"gradeContainer\">\r\n          <div className=\"grade\">\r\n            {props.test.nota ? `Nota ${props.test.nota}` : \"Nenotat\"}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </StyledCard>\r\n  );\r\n};\r\n\r\nfunction TestsGrid(props) {\r\n  const { testInProgress, setTestInProgress } = useContext(AppContext);\r\n  // setShowHeader(true);\r\n\r\n  const auth = useContext(AuthContext);\r\n  const { authState } = auth;\r\n  const user = authState.userInfo;\r\n\r\n  const { url } = useRouteMatch();\r\n\r\n  // const [tests, setTests] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [clickedTest, setClickedTest] = useState();\r\n\r\n  // useEffect(() => {\r\n  //   getStudentTests(user);\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(props.tests);\r\n  }, [props.tests]);\r\n\r\n  // const getStudentTests = async (user) => {\r\n  //   console.log(\"getting tests from db..\");\r\n  //   setIsLoading(true);\r\n  //   const response = await axios\r\n  //     .get(`${rootURL}/students/${user.id}/due`)\r\n  //     .catch((err) => console.log(err));\r\n\r\n  //   if (response) {\r\n  //     setTests(response.data);\r\n  //   }\r\n  //   setIsLoading(false);\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   if (clickedTest) {\r\n  //     setTestInProgress(clickedTest);\r\n  //     console.log(testInProgress);\r\n  //   }\r\n  // }, [clickedTest]);\r\n\r\n  // const testClicked = (e) => {\r\n  //   if (testInProgress.id < 0) {\r\n  //     console.log(\"clicked card with id \" + e.target.id);\r\n  //     const clickedTest = tests.find((test) => test.id == e.target.id);\r\n  //     // props.parentCallBack(clickedTest);\r\n  //     setClickedTest(clickedTest);\r\n  //     e.preventDefault();\r\n  //   } else {\r\n  //     console.log(\"test already in progress\");\r\n  //     console.log(testInProgress);\r\n  //     e.preventDefault();\r\n  //   }\r\n  // };\r\n\r\n  if (isLoading) {\r\n    return <Loader></Loader>;\r\n  }\r\n  return (\r\n    <>\r\n      <Wrapper>\r\n        {props.tests &&\r\n          props.tests.map((test, index) => (\r\n            <TestCard test={test}>{test}</TestCard>\r\n          ))}\r\n      </Wrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  width: 50%;\r\n  a {\r\n    text-decoration: none;\r\n  }\r\n  position: fixed;\r\n  background: ${theme.mainGrey};\r\n  overflow-y: auto;\r\n`;\r\n\r\nconst StyledCard = styled(Card)`\r\n  display: flex;\r\n  width: 40vw;\r\n  overflow: auto;\r\n  // height: 10rem;\r\n  margin-top: 1rem;\r\n  margin-bottom: 1rem;\r\n  padding: 0;\r\n  font-size: 1rem;\r\n\r\n  .cardBanner {\r\n    height: auto;\r\n    text-align: center;\r\n    padding-top: 0.3rem;\r\n    padding-bottom: 0.3rem;\r\n    font-weight: 500;\r\n    background: ${theme.mainBlack};\r\n    color: white;\r\n  }\r\n\r\n  .cardContentContainer {\r\n    display: flex;\r\n    flex-direction: row;\r\n    // justify-content: space-evenly;\r\n    // padding-bottom: 1rem;\r\n    padding: 1rem;\r\n    padding-left: 2rem;\r\n    padding-right: 2rem;\r\n  }\r\n  .testPropsContainer {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    width: auto;\r\n    flex-grow: 2;\r\n  }\r\n\r\n  .testPropContainer {\r\n    // margin-right: 3rem;\r\n    text-align: center;\r\n\r\n    .feedbackStar {\r\n      font-size: 1.5rem;\r\n      font-weight: 700;\r\n      color: ${theme.mainOrange};\r\n      cursor: pointer;\r\n    }\r\n  }\r\n  .gradeContainer {\r\n    display: flex;\r\n    flex-grow: 1;\r\n    justify-content: flex-end;\r\n    // margin-right: 2rem;\r\n    // margin-left: 2rem;\r\n  }\r\n  .grade {\r\n    text-align: center;\r\n    min-width: 6rem;\r\n    padding: 0.5rem;\r\n    padding-top: 0.2rem;\r\n    padding-bottom: 0.2rem;\r\n    color: ${(props) => (props.graded ? theme.white : theme.mainOrange)};\r\n    border: 2px solid\r\n      ${(props) => (props.graded ? theme.mainBlue : theme.mainOrange)};\r\n    background: ${(props) => (props.graded ? theme.mainBlue : `none`)};\r\n    border-radius: 12px;\r\n    align-self: flex-end;\r\n  }\r\n`;\r\n\r\nexport default withRouter(TestsGrid);\r\n","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\index.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\defaultCodeData.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\addTest.js",["218","219","220","221","222","223","224"],"import styled from \"styled-components\";\r\nimport { Form, Col } from \"react-bootstrap\";\r\nimport { FormSuccess, FormError } from \"../components\";\r\nimport { AppContext } from \"../context/context\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport { Button, Card } from \"../components/defaultComponents\";\r\nimport theme from \"../Assets/theme\";\r\nimport { Loader } from \"../components\";\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { MdAddCircleOutline, MdRemoveCircleOutline } from \"react-icons/md\";\r\nimport { ImSpinner3 } from \"react-icons/im\";\r\n\r\nconst rootURL = \"http://localhost:5000/api\";\r\n\r\nfunction AddTest() {\r\n  const auth = useContext(AuthContext);\r\n  const { authState } = auth;\r\n  const user = authState.userInfo;\r\n\r\n  const { judge0Languges, setShowHeader } = React.useContext(AppContext);\r\n  setShowHeader(true);\r\n\r\n  //set success error messages\r\n  const [formSuccess, setFormSuccess] = useState();\r\n  const [formError, setFormError] = useState();\r\n\r\n  //set static components on load\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [subjects, setSubjects] = useState([]);\r\n  const [groups, setGroups] = useState();\r\n  const [areGroupsLoading, setAreGroupsLoading] = useState(true);\r\n\r\n  //form controlled input fields\r\n  const [selectedSubject, setSelectedSubject] = useState(-1);\r\n  const [selectedGroup, setSelectedGroup] = useState();\r\n  const [language, setLanguage] = useState(judge0Languges[0].id);\r\n  const [code, setCode] = useState();\r\n  const [title, setTitle] = useState();\r\n  const [expectedAnswer, setExpectedAnswer] = useState(\"\");\r\n  const [date, setDate] = useState(new Date());\r\n  const [questions, setQuestions] = useState([\r\n    { id: 0, questionBody: \"\", expectedAnswer: \"\" },\r\n  ]);\r\n  // const [expectedAnswers, setExpectedAnswers] = useState([])\r\n\r\n  //onMount\r\n  useEffect(() => {\r\n    getSubjects(user);\r\n  }, []);\r\n\r\n  function subjectChanged(id) {\r\n    setSelectedSubject(id);\r\n    if (id > 0) {\r\n      getGroups(id);\r\n    }\r\n  }\r\n  async function getGroups(subjectId) {\r\n    console.log(\"getting groups from db...\");\r\n    setAreGroupsLoading(true);\r\n    const response = await axios({\r\n      method: \"get\",\r\n      url: `${rootURL}/subjects/${subjectId}/groups`,\r\n    }).catch((err) => console.log(err));\r\n\r\n    if (response) {\r\n      console.log(response.data);\r\n      setGroups(response.data);\r\n      setSelectedGroup(response.data[0].grupa);\r\n    }\r\n    setAreGroupsLoading(false);\r\n  }\r\n\r\n  async function getSubjects(user) {\r\n    console.log(\"getting subjects from db...\");\r\n    setIsLoading(true);\r\n    const response = await axios({\r\n      method: \"get\",\r\n      url: `${rootURL}/teachers/${user.id}/subjects`,\r\n    }).catch((err) => console.log(err));\r\n\r\n    if (response) {\r\n      console.log(response.data);\r\n      setSubjects(response.data);\r\n    }\r\n    setIsLoading(false);\r\n  }\r\n\r\n  function addQuestionBtnHandler(e) {\r\n    console.log(\"addQuestionBtnHandler\");\r\n\r\n    const lastQuestion = questions[questions.length - 1];\r\n\r\n    setQuestions((questions) =>\r\n      questions.concat({\r\n        id: lastQuestion.id + 1,\r\n        questionBody: \"\",\r\n        expectedAnswer: \"\",\r\n      })\r\n    );\r\n  }\r\n  function removeQuestionBtnHandler(e) {\r\n    console.log(\"removeQuestionBtnHandler\");\r\n    const lastQuestion = questions[questions.length - 1];\r\n    setQuestions((items) =>\r\n      items.filter((item) => {\r\n        return item.id !== lastQuestion.id;\r\n      })\r\n    );\r\n  }\r\n  function handleQuestionsChange(e, index) {\r\n    // 1. Make a shallow copy of the array\r\n    console.log(index);\r\n    let temp_state = [...questions];\r\n\r\n    // 2. Make a shallow copy of the element you want to mutate\r\n    let temp_element = { ...questions.find((x) => x.id === index) };\r\n\r\n    // 3. Update the property you're interested in\r\n    temp_element.questionBody = e.target.value;\r\n\r\n    // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\r\n    temp_state[index] = temp_element;\r\n\r\n    // 5. Set the state to our new copy\r\n    setQuestions(temp_state);\r\n    // console.log(questions.find((x) => x.id === index).questionBody);\r\n  }\r\n\r\n  function handleExpectedResultChange(e, index) {\r\n    // 1. Make a shallow copy of the array\r\n    console.log(index);\r\n    let temp_state = [...questions];\r\n\r\n    // 2. Make a shallow copy of the element you want to mutate\r\n    let temp_element = { ...questions.find((x) => x.id === index) };\r\n\r\n    // 3. Update the property you're interested in\r\n    temp_element.expectedAnswer = e.target.value;\r\n\r\n    // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\r\n    temp_state[index] = temp_element;\r\n\r\n    // 5. Set the state to our new copy\r\n    setQuestions(temp_state);\r\n    // console.log(questions.find((x) => x.id === index).questionBody);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const test = {\r\n      title: title,\r\n      deadline: date,\r\n      subjectId: selectedSubject,\r\n      languageId: language,\r\n      questions: questions,\r\n      group: selectedGroup,\r\n    };\r\n    console.log(test);\r\n    postTest(test);\r\n    console.log(date.getTimezoneOffset());\r\n  }\r\n\r\n  async function postTest(test) {\r\n    console.log(\"posting assignment...\");\r\n    setIsLoading(true);\r\n\r\n    const response = await axios({\r\n      method: \"post\",\r\n      url: `${rootURL}/assignments/create`,\r\n      data: test,\r\n    }).catch((err) => {\r\n      console.log(err.response.data.message);\r\n      setFormError(err.response.data.message);\r\n      setTimeout(() => {\r\n        setFormError(null);\r\n      }, 3000);\r\n      setFormSuccess(null);\r\n    });\r\n\r\n    if (response) {\r\n      console.log(response.data);\r\n      setFormError(null);\r\n      setFormSuccess(response.data.message);\r\n      setTimeout(() => {\r\n        setFormSuccess(null);\r\n      }, 5000);\r\n    }\r\n    setIsLoading(false);\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <FormTitle className=\"formTitle\">Adaugă Test</FormTitle>\r\n      <Form.Group>\r\n        {formSuccess && <FormSuccess text={formSuccess} />}\r\n        {formError && <FormError text={formError} />}\r\n      </Form.Group>\r\n      <Form className=\"addTestForm\">\r\n        <Form.Row>\r\n          <Form.Group as={Col} controlId=\"testTitle\">\r\n            <Form.Label>Titlu test</Form.Label>\r\n            <Form.Control onChange={(e) => setTitle(e.target.value)} />\r\n          </Form.Group>\r\n          <Form.Group as={Col} controlId=\"programmingLanguages\">\r\n            <Form.Label>Limbaj de programare</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              onChange={(e) => setLanguage(e.target.value)}\r\n            >\r\n              {judge0Languges.map((language) => (\r\n                <option value={language.id} key={language.id}>\r\n                  {language.name}\r\n                </option>\r\n              ))}\r\n            </Form.Control>\r\n          </Form.Group>\r\n        </Form.Row>\r\n        <Form.Row>\r\n          <Form.Group as={Col} controlId=\"subjects\">\r\n            <Form.Label>Materie</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              onChange={(e) => subjectChanged(e.target.value)}\r\n            >\r\n              <option value={-1}>Selectează</option>\r\n              {subjects.map((subject) => (\r\n                <option value={subject.id} id={subject.id}>\r\n                  {subject.descriere}\r\n                </option>\r\n              ))}\r\n            </Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Col} controlId=\"StudentGroups\">\r\n            <Form.Label>Grupa</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              onChange={(e) => setSelectedGroup(e.target.value)}\r\n            >\r\n              {areGroupsLoading && selectedSubject == -1 && (\r\n                <option value={-1}>nicio grupa pentru materia selectată</option>\r\n              )}\r\n              {!areGroupsLoading &&\r\n                groups &&\r\n                selectedSubject > 0 &&\r\n                groups.map((item) => (\r\n                  <option value={item.grupa}>{item.grupa}</option>\r\n                ))}\r\n            </Form.Control>\r\n          </Form.Group>\r\n        </Form.Row>\r\n\r\n        <div className=\"questionsContainer\">\r\n          {questions.map((question, index) => (\r\n            <Form.Row className=\"questionRow\">\r\n              <Form.Group as={Col} controlId=\"Problem\">\r\n                <Form.Label>Problema {question.id}</Form.Label>\r\n                <Form.Control\r\n                  as=\"textarea\"\r\n                  rows={1}\r\n                  // value={questions.find((x) => x.id === index).questionBody}\r\n                  onChange={(e) => handleQuestionsChange(e, index)}\r\n                />\r\n              </Form.Group>\r\n              <Col>\r\n                <Form.Label>Rezultat așteptat</Form.Label>\r\n                <Form.Control\r\n                  // value={questions.find((x) => x.id === index).expectedAnswer}\r\n                  onChange={(e) => handleExpectedResultChange(e, index)}\r\n                />\r\n              </Col>\r\n              {!questions[index + 1] && index !== 0 ? (\r\n                <MdRemoveCircleOutline\r\n                  className=\"addQuestionBtn\"\r\n                  onClick={removeQuestionBtnHandler}\r\n                ></MdRemoveCircleOutline>\r\n              ) : (\r\n                <MdAddCircleOutline\r\n                  className=\"addQuestionBtn\"\r\n                  onClick={addQuestionBtnHandler}\r\n                ></MdAddCircleOutline>\r\n              )}\r\n            </Form.Row>\r\n          ))}\r\n        </div>\r\n        <Form.Row>\r\n          <Col className=\"datePickerColumn\">\r\n            <DatePicker\r\n              wrapperClassName=\"datepicker\"\r\n              customInput={<ExampleCustomInput />}\r\n              selected={date}\r\n              onChange={(date) => setDate(date)}\r\n              showTimeSelect\r\n              timeFormat=\"HH:mm\"\r\n              timeIntervals={15}\r\n              timeCaption=\"Timp\"\r\n              dateFormat=\"d MMMM, yyyy HH:mm\"\r\n              fixedHeight\r\n              popperPlacement=\"top-end\"\r\n            />\r\n          </Col>\r\n        </Form.Row>\r\n\r\n        <Form.Row className=\"justify-content-center\">\r\n          <SendBtn primary onClick={(e) => handleSubmit(e)}>\r\n            {isLoading ? (\r\n              <span className=\"loadingContainer\">\r\n                <ImSpinner3 className=\"icon-spin\"></ImSpinner3>\r\n                <span className=\"loadingText\">Se încarcă...</span>\r\n              </span>\r\n            ) : (\r\n              <p>Trimite</p>\r\n            )}\r\n            {/* <p>Trimite</p> */}\r\n          </SendBtn>\r\n        </Form.Row>\r\n      </Form>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst ExampleCustomInput = React.forwardRef(({ value, onClick }, ref) => (\r\n  <div className=\"timePickerBox\" onClick={onClick} ref={ref}>\r\n    <div className=\"deadlineText\">{`Deadline:`}</div>\r\n    {value}\r\n  </div>\r\n));\r\n\r\nconst SendBtn = styled(Button)`\r\nbackground: ${theme.mainBlue};\r\ncolor: white;\r\nmargin-top: 2em;\r\nfont-size: 1rem;\r\nfont-weight: bold;\r\nheight: 2em;\r\nwidth: 20em;\r\nmargin-left: 0;\r\nmargin-right: 0;\r\nwidth: 100%;\r\nborder: none;\r\n\r\n&:hover {\r\n  background: ${theme.mainBlue};\r\n  color: white;\r\n}\r\n  .loadingContainer {\r\n    display: flex;\r\n    \r\n    justify-content: center;\r\n    align-items: center;\r\n    .loadingText {      \r\n      font-family: Roboto\r\n      margin-left: 2em;\r\n    }\r\n\r\n    .icon-spin {\r\n      margin-right: 0.5em;\r\n      -webkit-animation: icon-spin 2s infinite linear;\r\n              animation: icon-spin 2s infinite linear;\r\n    }\r\n    \r\n    @-webkit-keyframes icon-spin {\r\n      0% {\r\n        -webkit-transform: rotate(0deg);\r\n                transform: rotate(0deg);\r\n      }\r\n      100% {\r\n        -webkit-transform: rotate(359deg);\r\n                transform: rotate(359deg);\r\n      }\r\n    }\r\n    \r\n    @keyframes icon-spin {\r\n      0% {\r\n        -webkit-transform: rotate(0deg);\r\n                transform: rotate(0deg);\r\n      }\r\n      100% {\r\n        -webkit-transform: rotate(359deg);\r\n                transform: rotate(359deg);\r\n      }\r\n    }\r\n  }\r\n\r\n  }\r\n  p {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nconst FormTitle = styled.p`\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 2rem;\r\n  margin-bottom: 1em;\r\n`;\r\n\r\nconst Wrapper = styled(Card)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 40%;\r\n  margin-left: 37%;\r\n  height: 100%;\r\n\r\n  margin-top: 7%;\r\n  // padding-left: 5%;\r\n  // padding-right: 5%;\r\n  // padding-bottom: 10%;\r\n  // padding-top: 5%;\r\n\r\n  .addTestForm {\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n  .plus {\r\n    margin-right: 10px;\r\n  }\r\n  .questionsContainer {\r\n    max-height: 12em;\r\n    overflow-y: auto;\r\n    overflow-x: hidden;\r\n  }\r\n\r\n  .addQuestionBtn {\r\n    align-self: center;\r\n    margin-top: 15px;\r\n    margin-right: 15px;\r\n    margin-left: 15px;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .datePickerColumn {\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n\r\n  .timePickerBox {\r\n    display: flex;\r\n    width: 100%;\r\n    height: calc(1.5em + 0.75rem + 2px);\r\n    padding: 0.375rem 0.75rem;\r\n    font-size: 1rem;\r\n    font-weight: 400;\r\n    line-height: 1.5;\r\n    color: #495057;\r\n    background-color: #fff;\r\n    background-clip: padding-box;\r\n    border: 1px solid #ced4da;\r\n    border-radius: 0.25rem;\r\n    transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\r\n  }\r\n\r\n  .deadlineText {\r\n    margin-right: 10px;\r\n    font-weight: 600;\r\n  }\r\n`;\r\n\r\nexport default AddTest;\r\n","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\Loader.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\FormSucces.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\FormError.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\context\\AuthContext.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\home.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\AvatarDropdown.js",["225"],"import React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { FaCaretDown, FaSignOutAlt } from \"react-icons/fa\";\r\nimport { FaFontAwesome } from \"react-icons/fa\";\r\nimport { AiOutlineLogout } from \"react-icons/ai\";\r\n//   import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport defaultAvatar from \"../Assets/images/defaultAvatar.png\";\r\nimport { Button } from \"./defaultComponents\";\r\nimport styled from \"styled-components\";\r\n\r\nconst DropdownItem = ({ item }) => (\r\n  <Button className=\"dropDownItemContiner\" onClick={item.onClick}>\r\n    <AiOutlineLogout />\r\n    <p className=\"dropDownItemTitle\">{item.title}</p>\r\n  </Button>\r\n);\r\n\r\nconst DropdownContent = ({ dropdownItems }) => {\r\n  return (\r\n    <div className=\"dropDownContent\">\r\n      {dropdownItems.map((item, i) => {\r\n        return (\r\n          <div className=\"mt-1\" key={i}>\r\n            <DropdownItem item={item} />\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AvatarDropdown = () => {\r\n  const node = useRef();\r\n  const auth = useContext(AuthContext);\r\n  const { authState } = auth;\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n\r\n  const dropdownItems = [\r\n    {\r\n      title: \"Log Out\",\r\n      icon: FaSignOutAlt,\r\n      onClick: auth.logout,\r\n    },\r\n  ];\r\n\r\n  const handleClick = (e) => {\r\n    if (!node.current.contains(e.target)) {\r\n      setDropdownOpen(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"mousedown\", handleClick);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClick);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div ref={node}>\r\n        <Button\r\n          ref={node}\r\n          className=\"ButtonContainer\"\r\n          onClick={() => setDropdownOpen(!dropdownOpen)}\r\n        >\r\n          <img src={defaultAvatar} className=\"avatarImg\" alt=\"Avatar\" />\r\n          <div className=\"logoutTextContainer\">\r\n            <p className=\"logoutText\">{authState.userInfo.nume}</p>\r\n            {/* <p className=\"logoutText\">{authState.userInfo.prenume}</p> */}\r\n          </div>\r\n          <div className=\"dropDownCaret\">\r\n            <FaCaretDown></FaCaretDown>\r\n          </div>\r\n        </Button>\r\n\r\n        {dropdownOpen && (\r\n          <div className=\"dropDownItems\">\r\n            <DropdownContent dropdownItems={dropdownItems} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  flex-direction: column;\r\n  margin-right: 4rem;\r\n  justify-items: flex-end;\r\n\r\n  .ButtonContainer {\r\n    display: flex;\r\n    border-radius: 3px;\r\n    padding: 3px;\r\n    margin-bottom: 0;\r\n    align-items: center;\r\n    &:focus {\r\n      outline: 2px solid transparent;\r\n      outline-offset: 2px;\r\n    }\r\n    --tw-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1),\r\n      0 4px 6px -2px rgba(0, 0, 0, 0.05);\r\n    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),\r\n      var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);\r\n  }\r\n\r\n  .avatarImg {\r\n    width: 1.5rem;\r\n    border-radius: 9999px;\r\n    border-width: 2px;\r\n    --tw-border-opacity: 1;\r\n    border-color: rgba(255, 255, 255, var(--tw-border-opacity));\r\n  }\r\n\r\n  .logoutTextContainer {\r\n    padding: 3px;\r\n    display: flex;\r\n    align-items: center;\r\n    div {\r\n      margin: 0;\r\n    }\r\n    p {\r\n      margin-bottom: 0;\r\n      margin-left: 0.5rem;\r\n    }\r\n  }\r\n\r\n  //   .logoutText {\r\n  //     text-color: white;\r\n  //   }\r\n\r\n  .dropDownCaret {\r\n    margin: 0.25rem;\r\n  }\r\n  .dropDownItems {\r\n    position: absolute;\r\n    right: 6rem;\r\n  }\r\n  .dropDownContent {\r\n    // width: 100%;\r\n    // margin-right: 2rem;\r\n  }\r\n  .dropDownItemContiner {\r\n    display: flex;\r\n    align-items: center;\r\n    width: 100%;\r\n    // position: relative;\r\n    // padding: 1rem;\r\n    padding-top: 0.5rem;\r\n    padding-bottom: 0.5rem;\r\n    padding-right: 0;\r\n    --tw-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1),\r\n      0 4px 6px -2px rgba(0, 0, 0, 0.05);\r\n    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),\r\n      var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);\r\n    border-radius: 0.2rem;\r\n    margin-top: 0.5rem;\r\n    p {\r\n      margin-bottom: 0;\r\n      margin-left: 0.5rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default AvatarDropdown;\r\n","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\QuestionSlider.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\TestsTable.js",["226","227","228"],"import { useState, useEffect, useContext } from \"react\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport styled from \"styled-components\";\r\nimport theme from \"../Assets/theme\";\r\nimport { Card } from \"./defaultComponents\";\r\nimport { AppContext, AuthContext } from \"../context\";\r\n\r\nconst StyledTableCell = withStyles(() => ({\r\n  head: {\r\n    backgroundColor: theme.Grey1,\r\n    color: \"black\",\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles(() => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.mainGrey,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    // minWidth: 500,\r\n    // marginInline: 200,\r\n    // minHeight: 200,\r\n  },\r\n});\r\n\r\nconst studentColumns = [\"Titlu\", \"Materie\", \"Limbaj\", \"Deadline\"];\r\nconst teacherColumns = [\r\n  \"Nume\",\r\n  \"Prenume\",\r\n  \"Grupa\",\r\n  \"Titlu Test\",\r\n  \"Materie\",\r\n  \"Limbaj\",\r\n  \"Deadline\",\r\n];\r\n\r\nconst studentDataColumns = [\r\n  \"titlu\",\r\n  \"id_materie\",\r\n  \"limbaj\",\r\n  \"formatedDeadline\",\r\n];\r\n\r\nconst teacherDataColumns = [\r\n  \"nume\",\r\n  \"prenume\",\r\n  \"grupa\",\r\n  \"titlu\",\r\n  \"id_materie\",\r\n  \"limbaj\",\r\n  \"formatedDeadline\",\r\n];\r\n\r\nfunction TestsTable(props) {\r\n  const user = useContext(AuthContext).authState.userInfo;\r\n\r\n  const [columns, setColumns] = useState([]);\r\n  const [dataColumns, setDataColumns] = useState([]);\r\n  const { judge0Languges } = useContext(AppContext);\r\n  const classes = useStyles();\r\n\r\n  function rowClicked(e) {\r\n    props.callback(e.target.id);\r\n    e.preventDefault();\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (user.tip === \"student\") {\r\n      setColumns(studentColumns);\r\n      setDataColumns(studentDataColumns);\r\n    } else {\r\n      setColumns(teacherColumns);\r\n      setDataColumns(teacherDataColumns);\r\n    }\r\n    console.log(props.data);\r\n  }, [props.data]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <StyledCard>\r\n        <TableTitle>{props.title}</TableTitle>\r\n        <TableContainer className=\"tableContainer\">\r\n          <Table\r\n            className={classes.table}\r\n            aria-label=\"customized table\"\r\n          ></Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((item, index) => (\r\n                <StyledTableCell\r\n                  key={index}\r\n                  align={index !== 0 ? \"center\" : \"\"}\r\n                >\r\n                  {item}\r\n                </StyledTableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {props.data.map((item, index) => (\r\n              <StyledTableRow key={index}>\r\n                {dataColumns.map((column, cindex) => {\r\n                  if (column === \"titlu\") {\r\n                    return (\r\n                      <StyledTableCell key={cindex}>\r\n                        <a\r\n                          href={props.redirectPath}\r\n                          id={item.id}\r\n                          onClick={rowClicked}\r\n                        >\r\n                          {item[column]}\r\n                        </a>\r\n                      </StyledTableCell>\r\n                    );\r\n                  } else {\r\n                    return (\r\n                      <StyledTableCell key={cindex}>\r\n                        {item[column]}\r\n                      </StyledTableCell>\r\n                    );\r\n                  }\r\n                })}\r\n              </StyledTableRow>\r\n            ))}\r\n          </TableBody>\r\n        </TableContainer>\r\n      </StyledCard>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst TableTitle = styled.div`\r\n  font-style: \"Roboto\";\r\n  color: ${theme.mainBlack};\r\n  font-size: 1.3rem;\r\n  font-weight: 500;\r\n  margin: 1rem;\r\n  margin-left: 2rem;\r\n`;\r\n\r\nconst StyledCard = styled(Card)`\r\n  padding: 0;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  //   width: 100%;\r\n  //   height: 100%;\r\n  .tableContainer {\r\n    max-width: 50vw;\r\n  }\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-left: 20vw;\r\n  margin-top: 20vh;\r\n`;\r\n\r\nexport default TestsTable;\r\n","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\context\\index.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\context\\utils.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\AlertBar.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\pages\\evaluateTest.js",["229","230","231","232","233","234"],"import { useContext, useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport theme from \"../Assets/theme\";\r\nimport { AppContext } from \"../context\";\r\nimport { QuestionSlider, CodeEditor, AlertBar } from \"../components\";\r\nimport { Card, Button } from \"../components/defaultComponents\";\r\nimport { Formik, useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { Form, Col } from \"react-bootstrap\";\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport axios, { handleAxiosError, handleUnexpectedError } from \"axios\";\r\nimport { utils } from \"../context\";\r\n\r\nconst schema = yup.object().shape({\r\n  feedback: yup.string(),\r\n  finalGrade: yup\r\n    .string()\r\n    .matches(/^([1-9]{1}(\\.\\d{1,2})?|10)$/, \"Format acceptat: 9.97\")\r\n    .required(\"Nota finală trebuie completată\"),\r\n});\r\n\r\nconst processData = (data) => {\r\n  try {\r\n    let { incercare, evaluareAutomata } = data;\r\n    data.incercare = JSON.parse(incercare);\r\n    data.evaluareAutomata = JSON.parse(evaluareAutomata);\r\n    const submission = [];\r\n    data.incercare.forEach((item, index) => {\r\n      submission.push({\r\n        // questionBody: data.questions[index],\r\n        questionCode: item,\r\n        assessment: data.evaluareAutomata[index],\r\n      });\r\n    });\r\n    return submission;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nconst getSubmission = async (\r\n  student_id,\r\n  test_id,\r\n  setSubmission,\r\n  setQuestions,\r\n  setIsLoading,\r\n  setAutomaticGrade,\r\n  setLateStatus\r\n) => {\r\n  try {\r\n    setIsLoading(true);\r\n    const { data } = await axios.get(\r\n      `${utils.rootURL}/grades/submission/${test_id}/${student_id}`\r\n    );\r\n\r\n    const submission = processData(data);\r\n\r\n    setSubmission(submission);\r\n    setQuestions(data.questions);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n  setIsLoading(false);\r\n};\r\n\r\nconst gradeSubmission = async (\r\n  submission,\r\n  test_id,\r\n  student_id,\r\n  setIsLoading,\r\n  removeTestInProgress,\r\n  setAlert\r\n) => {\r\n  try {\r\n    setIsLoading(true);\r\n    const response = await axios({\r\n      method: \"put\",\r\n      url: `${utils.rootURL}/grades/grade/${test_id}/${student_id}`,\r\n      data: submission,\r\n    });\r\n\r\n    console.log(response);\r\n\r\n    if (response.status === 200) {\r\n      setAlert({\r\n        open: true,\r\n        severity: \"success\",\r\n        message: response.data.message,\r\n      });\r\n      // console.log(\"ceva\");\r\n      removeTestInProgress();\r\n    } else {\r\n      setAlert({\r\n        open: true,\r\n        severity: \"warning\",\r\n        message: response.data.message,\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n  setIsLoading(false);\r\n};\r\n\r\nfunction EvaluateTest() {\r\n  const { setShowNavbar, testState, removeTestInProgress } =\r\n    useContext(AppContext);\r\n  const [submission, setSubmission] = useState();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isSubmitLoading, setIsSubmitLoading] = useState(false);\r\n  const [questions, setQuestions] = useState([]);\r\n  const [automaticGrade, setAutomaticGrade] = useState();\r\n  const [lateStatus, setLateStatus] = useState();\r\n  const [currentQuestion, setCurrentQuestion] = useState({\r\n    questionCode: \"\",\r\n    assessment: {\r\n      stdout: \"\",\r\n      status: { id: \"\", description: \"\" },\r\n    },\r\n    compile_output: \"\",\r\n  });\r\n  const [alert, setAlert] = useState({\r\n    open: false,\r\n    severity: \"success\",\r\n    message: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log(\"esti in pagina de evaluare boss\");\r\n\r\n    if (testState.id) {\r\n      console.log(\"getting submission..\");\r\n      getSubmission(\r\n        testState.id,\r\n        testState.id_test,\r\n        setSubmission,\r\n        setQuestions,\r\n        setIsLoading,\r\n        setAutomaticGrade,\r\n        setLateStatus\r\n      );\r\n      setAutomaticGrade(testState.notaAutomata);\r\n      setLateStatus(testState.intarziat === 1 ? \"DA\" : \"NU\");\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (submission) {\r\n      console.log(submission);\r\n      setCurrentQuestion(submission[0]);\r\n    }\r\n  }, [submission]);\r\n\r\n  const sliderHandler = (question, index) => {\r\n    setCurrentQuestion(submission[index]);\r\n  };\r\n\r\n  setShowNavbar(false);\r\n  return (\r\n    <>\r\n      <AlertBar\r\n        open={alert.open}\r\n        severity={alert.severity}\r\n        message={alert.message}\r\n      />\r\n      <Formik\r\n        validateOnSubmit={true}\r\n        validationSchema={schema}\r\n        onSubmit={(values) => {\r\n          let { finalGrade, feedback } = values;\r\n          feedback = feedback.length === 0 ? null : feedback;\r\n          const data = { finalGrade, feedback };\r\n          console.log(data);\r\n          gradeSubmission(\r\n            data,\r\n            testState.id_test,\r\n            testState.id,\r\n            setIsSubmitLoading,\r\n            removeTestInProgress,\r\n            setAlert\r\n          );\r\n        }}\r\n        initialValues={{\r\n          finalGrade: \"\",\r\n          feedback: \"\",\r\n          automaticGrade: automaticGrade,\r\n          late: lateStatus,\r\n        }}\r\n      >\r\n        {({\r\n          handleSubmit,\r\n          handleChange,\r\n          handleBlur,\r\n          values,\r\n          touched,\r\n          isValid,\r\n          errors,\r\n        }) => (\r\n          <Form noValidate onSubmit={handleSubmit}>\r\n            <Wrapper>\r\n              <EditorCard>\r\n                <QuestionSlider\r\n                  questions={questions}\r\n                  callback={sliderHandler}\r\n                ></QuestionSlider>\r\n                <CodeEditor\r\n                  language={\"javascript\"}\r\n                  value={currentQuestion.questionCode}\r\n                  callback={() => {}}\r\n                ></CodeEditor>\r\n              </EditorCard>\r\n              <ConsoleCard>\r\n                <div>\r\n                  <p>Output:</p>\r\n                  {/* {!isConsoleLoading && stdout && <p>{stdout}</p>}\r\n                {isConsoleLoading && <p>Loading...</p>} */}\r\n                  {currentQuestion.assessment.stdout && (\r\n                    <p>{currentQuestion.assessment.stdout}</p>\r\n                  )}\r\n                </div>\r\n                <div>\r\n                  <p>Test Case Status:</p>\r\n                  {/* {!isConsoleLoading && testCaseStatus && <p>{testCaseStatus}</p>}\r\n                {isConsoleLoading && <p>Loading...</p>} */}\r\n                  {currentQuestion.assessment.status.description && (\r\n                    <p>{currentQuestion.assessment.status.description}</p>\r\n                  )}\r\n                </div>\r\n                {currentQuestion.assessment.compileError && (\r\n                  <div>\r\n                    <div>\r\n                      <p>Compile Error:</p>\r\n                    </div>\r\n                    <p>{currentQuestion.assessment.compileError}</p>\r\n                  </div>\r\n                )}\r\n              </ConsoleCard>\r\n\r\n              <FeedbackCard>\r\n                <Banner>\r\n                  <h2>Comentarii și feedback</h2>\r\n                </Banner>\r\n                <TextArea\r\n                  rows=\"20\"\r\n                  name=\"feedback\"\r\n                  value={values.feedback}\r\n                  onChange={handleChange}\r\n                ></TextArea>\r\n              </FeedbackCard>\r\n              <GradeCard>\r\n                <Form.Row className=\"justify-content-around align-items-center\">\r\n                  <Form.Label column lg=\"auto\" className=\"mr-2\">\r\n                    <div>Notă finală</div>\r\n                  </Form.Label>\r\n\r\n                  <Col className=\"mr-2\" lg=\"auto\">\r\n                    <Form.Control\r\n                      className=\"text-center\"\r\n                      name=\"finalGrade\"\r\n                      type=\"text\"\r\n                      value={values.finalGrade}\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                      placeholder=\"Introdu nota\"\r\n                      isValid={touched.finalGrade && !errors.finalGrade}\r\n                      isInvalid={touched.finalGrade && !!errors.finalGrade}\r\n                    />\r\n                    <Form.Control.Feedback\r\n                      type=\"invalid\"\r\n                      className=\"position-absolute feedback\"\r\n                    >\r\n                      <MuiAlert severity=\"error\" elevation={6} variant=\"filled\">\r\n                        <p>{errors.finalGrade}</p>\r\n                      </MuiAlert>\r\n                    </Form.Control.Feedback>\r\n                  </Col>\r\n\r\n                  <Form.Label column lg=\"auto\">\r\n                    <div>Notă automată</div>\r\n                  </Form.Label>\r\n\r\n                  <Col className=\"mr-2\">\r\n                    <Form.Control\r\n                      className=\"text-center\"\r\n                      name=\"automaticGrade\"\r\n                      type=\"text\"\r\n                      value={automaticGrade}\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                      readOnly\r\n                    />\r\n                  </Col>\r\n                  <Form.Label column lg=\"auto\">\r\n                    <div>Intarziat</div>\r\n                  </Form.Label>\r\n\r\n                  <Col>\r\n                    <Form.Control\r\n                      className=\"text-center\"\r\n                      name=\"late\"\r\n                      type=\"text\"\r\n                      value={lateStatus}\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                      readOnly\r\n                    />\r\n                  </Col>\r\n                </Form.Row>\r\n              </GradeCard>\r\n              <SubmitBtn>\r\n                <p>Trimite</p>\r\n              </SubmitBtn>\r\n            </Wrapper>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n\r\nconst EditorCard = styled(Card)`\r\n  grid-area: A;\r\n  margin-left: 1em;\r\n  overflow: auto;\r\n`;\r\n\r\nconst ConsoleCard = styled(Card)`\r\n  grid-area: B;\r\n  margin-left: 1em;\r\n  margin-top: 0.5em;\r\n  margin-bottom: 0.5em;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  overflow: auto;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst FeedbackCard = styled(Card)`\r\n  grid-area: C;\r\n  margin-right: 1em;\r\n  margin-bottom: 1rem;\r\n  padding: 0;\r\n`;\r\n\r\nconst Banner = styled.div`\r\n  padding: 0.7rem;\r\n  padding-left: 1.5rem;\r\n  background-color: ${theme.Grey1};\r\n  color: ${theme.mainBlack};\r\n  h2 {\r\n    margin: 0;\r\n    font-size: 1.3rem;\r\n  }\r\n`;\r\n\r\nconst TextArea = styled.textarea`\r\n  padding: 2rem;\r\n  border: none;\r\n  resize: none;\r\n  outline: none;\r\n  height:100%\r\n  color: ${theme.mainBlack};\r\n  border-radius: 0 0 10px 10px;\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst SubmitBtn = styled(Button)`\r\n  grid-area: E;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-self: end;\r\n  justify-self: end;\r\n  width: 5rem;\r\n  height: 3rem;\r\n\r\n  margin-bottom: 0.5em;\r\n`;\r\n\r\nconst GradeCard = styled(Card)`\r\n  grid-area: D;\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-right: 1em;\r\n  background-color: ${theme.Grey1};\r\n  // p {\r\n  //   margin: 0;\r\n  // }\r\n  div {\r\n    font-size: 1rem;\r\n  }\r\n  .feedback {\r\n    width: auto;\r\n  }\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  display: grid;\r\n  height: 100%;\r\n  width: 100%;\r\n  margin-top: 1.5rem;\r\n  max-height: calc(93vh - 1.5rem);\r\n\r\n  font-size: 3rem;\r\n\r\n  p {\r\n    font-size: 1rem;\r\n  }\r\n\r\n  grid-template-columns: repeat(2, 1fr);\r\n  grid-template-rows: repeat(10, 1fr);\r\n  grid-template-areas:\r\n    \"A    C\"\r\n    \"A    C\"\r\n    \"A    C\"\r\n    \"A    C\"\r\n    \"A    C\"\r\n    \"A    C\"\r\n    \"A    D\"\r\n    \"B    E\"\r\n    \"B    E\"\r\n    \"B    E\";\r\n  grid-column-gap: 1em;\r\n`;\r\n\r\nexport default EvaluateTest;\r\n","C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\Popup.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\StudentGraph.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\TeacherGraph.js",[],"C:\\Users\\Joseph\\Desktop\\BcThesis\\licenta_aplicatie\\code-puls\\client\\src\\components\\TeacherGraphGenerator.js",[],{"ruleId":"235","replacedBy":"236"},{"ruleId":"237","replacedBy":"238"},{"ruleId":"239","severity":1,"message":"240","line":2,"column":29,"nodeType":"241","messageId":"242","endLine":2,"endColumn":38},{"ruleId":"239","severity":1,"message":"243","line":7,"column":16,"nodeType":"241","messageId":"242","endLine":7,"endColumn":19},{"ruleId":"239","severity":1,"message":"244","line":10,"column":18,"nodeType":"241","messageId":"242","endLine":10,"endColumn":27},{"ruleId":"239","severity":1,"message":"245","line":20,"column":41,"nodeType":"241","messageId":"242","endLine":20,"endColumn":57},{"ruleId":"239","severity":1,"message":"246","line":20,"column":59,"nodeType":"241","messageId":"242","endLine":20,"endColumn":66},{"ruleId":"239","severity":1,"message":"247","line":4,"column":3,"nodeType":"241","messageId":"242","endLine":4,"endColumn":8},{"ruleId":"239","severity":1,"message":"248","line":5,"column":3,"nodeType":"241","messageId":"242","endLine":5,"endColumn":9},{"ruleId":"239","severity":1,"message":"249","line":11,"column":10,"nodeType":"241","messageId":"242","endLine":11,"endColumn":18},{"ruleId":"239","severity":1,"message":"250","line":11,"column":20,"nodeType":"241","messageId":"242","endLine":11,"endColumn":32},{"ruleId":"239","severity":1,"message":"251","line":30,"column":17,"nodeType":"241","messageId":"242","endLine":30,"endColumn":25},{"ruleId":"252","severity":1,"message":"253","line":49,"column":6,"nodeType":"254","endLine":49,"endColumn":8,"suggestions":"255"},{"ruleId":"239","severity":1,"message":"240","line":2,"column":17,"nodeType":"241","messageId":"242","endLine":2,"endColumn":26},{"ruleId":"239","severity":1,"message":"243","line":8,"column":16,"nodeType":"241","messageId":"242","endLine":8,"endColumn":19},{"ruleId":"239","severity":1,"message":"244","line":11,"column":18,"nodeType":"241","messageId":"242","endLine":11,"endColumn":27},{"ruleId":"239","severity":1,"message":"256","line":6,"column":24,"nodeType":"241","messageId":"242","endLine":6,"endColumn":36},{"ruleId":"252","severity":1,"message":"257","line":26,"column":6,"nodeType":"254","endLine":26,"endColumn":8,"suggestions":"258"},{"ruleId":"239","severity":1,"message":"259","line":1,"column":10,"nodeType":"241","messageId":"242","endLine":1,"endColumn":23},{"ruleId":"239","severity":1,"message":"260","line":2,"column":10,"nodeType":"241","messageId":"242","endLine":2,"endColumn":25},{"ruleId":"239","severity":1,"message":"261","line":2,"column":27,"nodeType":"241","messageId":"242","endLine":2,"endColumn":38},{"ruleId":"239","severity":1,"message":"262","line":3,"column":10,"nodeType":"241","messageId":"242","endLine":3,"endColumn":16},{"ruleId":"239","severity":1,"message":"263","line":4,"column":10,"nodeType":"241","messageId":"242","endLine":4,"endColumn":13},{"ruleId":"239","severity":1,"message":"264","line":6,"column":8,"nodeType":"241","messageId":"242","endLine":6,"endColumn":12},{"ruleId":"239","severity":1,"message":"265","line":15,"column":12,"nodeType":"241","messageId":"242","endLine":15,"endColumn":18},{"ruleId":"252","severity":1,"message":"266","line":60,"column":6,"nodeType":"254","endLine":60,"endColumn":8,"suggestions":"267"},{"ruleId":"268","severity":1,"message":"269","line":66,"column":35,"nodeType":"270","messageId":"271","endLine":66,"endColumn":37},{"ruleId":"252","severity":1,"message":"272","line":72,"column":6,"nodeType":"254","endLine":72,"endColumn":12,"suggestions":"273"},{"ruleId":"268","severity":1,"message":"269","line":83,"column":29,"nodeType":"270","messageId":"271","endLine":83,"endColumn":31},{"ruleId":"274","severity":1,"message":"275","line":87,"column":39,"nodeType":"276","messageId":"277","endLine":87,"endColumn":41},{"ruleId":"252","severity":1,"message":"278","line":94,"column":5,"nodeType":"254","endLine":94,"endColumn":20,"suggestions":"279"},{"ruleId":"252","severity":1,"message":"280","line":106,"column":6,"nodeType":"254","endLine":106,"endColumn":21,"suggestions":"281"},{"ruleId":"239","severity":1,"message":"240","line":1,"column":17,"nodeType":"241","messageId":"242","endLine":1,"endColumn":26},{"ruleId":"239","severity":1,"message":"282","line":1,"column":28,"nodeType":"241","messageId":"242","endLine":1,"endColumn":36},{"ruleId":"239","severity":1,"message":"283","line":12,"column":30,"nodeType":"241","messageId":"242","endLine":12,"endColumn":44},{"ruleId":"239","severity":1,"message":"284","line":2,"column":8,"nodeType":"241","messageId":"242","endLine":2,"endColumn":13},{"ruleId":"239","severity":1,"message":"247","line":8,"column":3,"nodeType":"241","messageId":"242","endLine":8,"endColumn":8},{"ruleId":"239","severity":1,"message":"285","line":9,"column":3,"nodeType":"241","messageId":"242","endLine":9,"endColumn":7},{"ruleId":"239","severity":1,"message":"286","line":12,"column":3,"nodeType":"241","messageId":"242","endLine":12,"endColumn":11},{"ruleId":"239","severity":1,"message":"287","line":18,"column":7,"nodeType":"241","messageId":"242","endLine":18,"endColumn":14},{"ruleId":"239","severity":1,"message":"288","line":81,"column":11,"nodeType":"241","messageId":"242","endLine":81,"endColumn":25},{"ruleId":"239","severity":1,"message":"289","line":81,"column":27,"nodeType":"241","messageId":"242","endLine":81,"endColumn":44},{"ruleId":"239","severity":1,"message":"290","line":86,"column":9,"nodeType":"241","messageId":"242","endLine":86,"endColumn":13},{"ruleId":"239","severity":1,"message":"291","line":88,"column":11,"nodeType":"241","messageId":"242","endLine":88,"endColumn":14},{"ruleId":"239","severity":1,"message":"292","line":91,"column":21,"nodeType":"241","messageId":"242","endLine":91,"endColumn":33},{"ruleId":"239","severity":1,"message":"293","line":92,"column":10,"nodeType":"241","messageId":"242","endLine":92,"endColumn":21},{"ruleId":"239","severity":1,"message":"294","line":92,"column":23,"nodeType":"241","messageId":"242","endLine":92,"endColumn":37},{"ruleId":"239","severity":1,"message":"295","line":9,"column":10,"nodeType":"241","messageId":"242","endLine":9,"endColumn":16},{"ruleId":"239","severity":1,"message":"296","line":41,"column":10,"nodeType":"241","messageId":"242","endLine":41,"endColumn":14},{"ruleId":"239","severity":1,"message":"297","line":41,"column":16,"nodeType":"241","messageId":"242","endLine":41,"endColumn":23},{"ruleId":"239","severity":1,"message":"298","line":43,"column":10,"nodeType":"241","messageId":"242","endLine":43,"endColumn":24},{"ruleId":"239","severity":1,"message":"299","line":43,"column":26,"nodeType":"241","messageId":"242","endLine":43,"endColumn":43},{"ruleId":"252","severity":1,"message":"300","line":53,"column":6,"nodeType":"254","endLine":53,"endColumn":8,"suggestions":"301"},{"ruleId":"268","severity":1,"message":"269","line":245,"column":52,"nodeType":"270","messageId":"271","endLine":245,"endColumn":54},{"ruleId":"239","severity":1,"message":"302","line":3,"column":10,"nodeType":"241","messageId":"242","endLine":3,"endColumn":23},{"ruleId":"239","severity":1,"message":"303","line":9,"column":8,"nodeType":"241","messageId":"242","endLine":9,"endColumn":13},{"ruleId":"239","severity":1,"message":"304","line":74,"column":11,"nodeType":"241","messageId":"242","endLine":74,"endColumn":25},{"ruleId":"252","severity":1,"message":"305","line":91,"column":6,"nodeType":"254","endLine":91,"endColumn":18,"suggestions":"306"},{"ruleId":"239","severity":1,"message":"244","line":7,"column":18,"nodeType":"241","messageId":"242","endLine":7,"endColumn":27},{"ruleId":"239","severity":1,"message":"307","line":12,"column":17,"nodeType":"241","messageId":"242","endLine":12,"endColumn":33},{"ruleId":"239","severity":1,"message":"308","line":12,"column":35,"nodeType":"241","messageId":"242","endLine":12,"endColumn":56},{"ruleId":"239","severity":1,"message":"309","line":110,"column":10,"nodeType":"241","messageId":"242","endLine":110,"endColumn":19},{"ruleId":"239","severity":1,"message":"310","line":111,"column":10,"nodeType":"241","messageId":"242","endLine":111,"endColumn":25},{"ruleId":"252","severity":1,"message":"311","line":146,"column":6,"nodeType":"254","endLine":146,"endColumn":8,"suggestions":"312"},"no-native-reassign",["313"],"no-negated-in-lhs",["314"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Col' is defined but never used.","'useFormik' is defined but never used.","'setAuthenticated' is assigned a value but never used.","'setUser' is assigned a value but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'TakeTest' is defined but never used.","'EvaluateTest' is defined but never used.","'setAlert' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'judge0Languges', 'tests', and 'user'. Either include them or remove the dependency array.","ArrayExpression",["315"],"'TeacherGraph' is defined but never used.","React Hook useEffect has a missing dependency: 'user.id'. Either include it or remove the dependency array.",["316"],"'DefaultNavbar' is defined but never used.","'FaRegUserCircle' is defined but never used.","'FaArrowLeft' is defined but never used.","'MdMenu' is defined but never used.","'Nav' is defined but never used.","'logo' is defined but never used.","'goBack' is defined but never used.","React Hook useEffect has a missing dependency: 'testState'. Either include it or remove the dependency array.",["317"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'aceLanguages' and 'getTestQuestions'. Either include them or remove the dependency array.",["318"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'test'. Either include it or remove the dependency array.",["319"],"React Hook useEffect has a missing dependency: 'decode'. Either include it or remove the dependency array.",["320"],"'useState' is defined but never used.","'codeEditorText' is assigned a value but never used.","'axios' is defined but never used.","'Link' is defined but never used.","'Redirect' is defined but never used.","'rootURL' is assigned a value but never used.","'testInProgress' is assigned a value but never used.","'setTestInProgress' is assigned a value but never used.","'user' is assigned a value but never used.","'url' is assigned a value but never used.","'setIsLoading' is assigned a value but never used.","'clickedTest' is assigned a value but never used.","'setClickedTest' is assigned a value but never used.","'Loader' is defined but never used.","'code' is assigned a value but never used.","'setCode' is assigned a value but never used.","'expectedAnswer' is assigned a value but never used.","'setExpectedAnswer' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["321"],"'FaFontAwesome' is defined but never used.","'Paper' is defined but never used.","'judge0Languges' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user.tip'. Either include it or remove the dependency array.",["322"],"'handleAxiosError' is defined but never used.","'handleUnexpectedError' is defined but never used.","'isLoading' is assigned a value but never used.","'isSubmitLoading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'testState.id', 'testState.id_test', 'testState.intarziat', and 'testState.notaAutomata'. Either include them or remove the dependency array.",["323"],"no-global-assign","no-unsafe-negation",{"desc":"324","fix":"325"},{"desc":"326","fix":"327"},{"desc":"328","fix":"329"},{"desc":"330","fix":"331"},{"desc":"332","fix":"333"},{"desc":"334","fix":"335"},{"desc":"336","fix":"337"},{"desc":"338","fix":"339"},{"desc":"340","fix":"341"},"Update the dependencies array to be: [judge0Languges, tests, user]",{"range":"342","text":"343"},"Update the dependencies array to be: [user.id]",{"range":"344","text":"345"},"Update the dependencies array to be: [testState]",{"range":"346","text":"347"},"Update the dependencies array to be: [aceLanguages, getTestQuestions, test]",{"range":"348","text":"349"},"Update the dependencies array to be: [test, testQuestions]",{"range":"350","text":"351"},"Update the dependencies array to be: [decode, judgeResponse]",{"range":"352","text":"353"},"Update the dependencies array to be: [user]",{"range":"354","text":"355"},"Update the dependencies array to be: [props.data, user.tip]",{"range":"356","text":"357"},"Update the dependencies array to be: [testState.id, testState.id_test, testState.intarziat, testState.notaAutomata]",{"range":"358","text":"359"},[1535,1537],"[judge0Languges, tests, user]",[720,722],"[user.id]",[2002,2004],"[testState]",[2325,2331],"[aceLanguages, getTestQuestions, test]",[2878,2893],"[test, testQuestions]",[3222,3237],"[decode, judgeResponse]",[2073,2075],"[user]",[2216,2228],"[props.data, user.tip]",[3945,3947],"[testState.id, testState.id_test, testState.intarziat, testState.notaAutomata]"]